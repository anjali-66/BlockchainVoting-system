{"ast":null,"code":"/**\n * internal helper functions\n */\nimport { trackConnect } from \"../../analytics/track/connect.js\";\nimport { getCachedChainIfExists } from \"../../chains/utils.js\";\nimport { COINBASE } from \"../constants.js\";\nimport { createWalletEmitter } from \"../wallet-emitter.js\";\n/**\n * @internal\n */\nexport function coinbaseWalletSDK(args) {\n  const {\n    createOptions\n  } = args;\n  const emitter = createWalletEmitter();\n  let account = undefined;\n  let chain = undefined;\n  function reset() {\n    account = undefined;\n    chain = undefined;\n  }\n  let handleDisconnect = async () => {};\n  let handleSwitchChain = async newChain => {\n    chain = newChain;\n  };\n  const unsubscribeChainChanged = emitter.subscribe(\"chainChanged\", newChain => {\n    chain = newChain;\n  });\n  const unsubscribeDisconnect = emitter.subscribe(\"disconnect\", () => {\n    reset();\n    unsubscribeChainChanged();\n    unsubscribeDisconnect();\n  });\n  emitter.subscribe(\"accountChanged\", _account => {\n    account = _account;\n  });\n  return {\n    id: COINBASE,\n    subscribe: emitter.subscribe,\n    getChain() {\n      if (!chain) {\n        return undefined;\n      }\n      chain = getCachedChainIfExists(chain.id) || chain;\n      return chain;\n    },\n    getConfig: () => createOptions,\n    getAccount: () => account,\n    autoConnect: async options => {\n      const {\n        autoConnectCoinbaseWalletSDK\n      } = await import(\"./coinbase-web.js\");\n      const provider = await args.providerFactory();\n      const [connectedAccount, connectedChain, doDisconnect, doSwitchChain] = await autoConnectCoinbaseWalletSDK(options, emitter, provider);\n      // set the states\n      account = connectedAccount;\n      chain = connectedChain;\n      handleDisconnect = doDisconnect;\n      handleSwitchChain = doSwitchChain;\n      trackConnect({\n        client: options.client,\n        walletType: COINBASE,\n        walletAddress: account.address,\n        chainId: chain.id\n      });\n      // return account\n      return account;\n    },\n    connect: async options => {\n      const {\n        connectCoinbaseWalletSDK\n      } = await import(\"./coinbase-web.js\");\n      const provider = await args.providerFactory();\n      const [connectedAccount, connectedChain, doDisconnect, doSwitchChain] = await connectCoinbaseWalletSDK(options, emitter, provider);\n      // set the states\n      account = connectedAccount;\n      chain = connectedChain;\n      handleDisconnect = doDisconnect;\n      handleSwitchChain = doSwitchChain;\n      trackConnect({\n        client: options.client,\n        walletType: COINBASE,\n        walletAddress: account.address,\n        chainId: chain.id\n      });\n      // return account\n      return account;\n    },\n    disconnect: async () => {\n      reset();\n      await handleDisconnect();\n    },\n    switchChain: async newChain => {\n      await handleSwitchChain(newChain);\n    },\n    onConnectRequested: async () => {\n      if (args.onConnectRequested) {\n        const provider = await args.providerFactory();\n        return args.onConnectRequested?.(provider);\n      }\n    }\n  };\n}\n//# sourceMappingURL=coinbase-wallet.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}