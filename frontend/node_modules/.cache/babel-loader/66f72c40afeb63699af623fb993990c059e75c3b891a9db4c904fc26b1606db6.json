{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { fontSize } from \"../../../../core/design-system/index.js\";\nimport { useChainSymbol } from \"../../../../core/hooks/others/useChainQuery.js\";\nimport { isNativeToken } from \"../../ConnectWallet/screens/nativeToken.js\";\nimport { Skeleton } from \"../Skeleton.js\";\nimport { Text } from \"../text.js\";\n/**\n * @internal\n */\nexport function TokenSymbol(props) {\n  if (!isNativeToken(props.token)) {\n    return _jsx(Text, {\n      size: props.size,\n      color: props.color || \"primaryText\",\n      inline: props.inline,\n      children: props.token.symbol\n    });\n  }\n  return _jsx(NativeTokenSymbol, {\n    chain: props.chain,\n    size: props.size,\n    color: props.color,\n    inline: props.inline\n  });\n}\nfunction NativeTokenSymbol(props) {\n  const chainSymbolQuery = useChainSymbol(props.chain);\n  if (chainSymbolQuery.isLoading) {\n    return _jsx(Skeleton, {\n      width: \"70px\",\n      height: fontSize[props.size]\n    });\n  }\n  return _jsx(Text, {\n    size: props.size,\n    color: props.color || \"primaryText\",\n    inline: props.inline,\n    children: chainSymbolQuery.symbol ?? \"ETH\"\n  });\n}\n//# sourceMappingURL=TokenSymbol.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}