{"ast":null,"code":"const DEFAULT_GATEWAY = \"https://arweave.net/{fileId}\";\n/**\n * Resolves the scheme of a given Arweave URI and returns the corresponding URL.\n * @param options - The options object containing the Arweave URI\n * @returns The resolved URL\n * @throws Error if the URI scheme is invalid.\n * @example\n * ```ts\n * import { resolveArweaveScheme } from \"thirdweb/storage\";\n * const url = resolveArweaveScheme({ uri: \"ar://<fileId>\" });\n * ```\n * @storage\n */\nexport function resolveArweaveScheme(options) {\n  if (options.uri.startsWith(\"ar://\")) {\n    const fileId = options.uri.replace(\"ar://\", \"\");\n    if (options.gatewayUrl) {\n      const separator = options.gatewayUrl.endsWith(\"/\") ? \"\" : \"/\";\n      return `${options.gatewayUrl}${separator}${fileId}`;\n    }\n    return DEFAULT_GATEWAY.replace(\"{fileId}\", fileId);\n  }\n  if (options.uri.startsWith(\"http\")) {\n    return options.uri;\n  }\n  throw new Error(`Invalid URI scheme, expected \"ar://\" or \"http(s)://\"`);\n}\n//# sourceMappingURL=arweave.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}