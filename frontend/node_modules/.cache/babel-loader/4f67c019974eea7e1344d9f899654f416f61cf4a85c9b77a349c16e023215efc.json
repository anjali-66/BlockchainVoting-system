{"ast":null,"code":"import { isHex } from \"../encoding/hex.js\";\n/**\n * Ensures that the given bytecode has the correct prefix.\n * If the bytecode already starts with \"0x\", it is returned as is.\n * Otherwise, the prefix \"0x\" is added to the bytecode.\n * @param bytecode - The bytecode to ensure the prefix for.\n * @returns The bytecode with the correct prefix.\n * @example\n * ```ts\n * import { ensureBytecodePrefix } from \"thirdweb/utils/bytecode/prefix\";\n * const bytecode = \"363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\";\n * const prefixedBytecode = ensureBytecodePrefix(bytecode);\n * console.log(prefixedBytecode);\n * ```\n * @utils\n */\nexport function ensureBytecodePrefix(bytecode) {\n  if (isHex(bytecode, {\n    strict: false\n  })) {\n    return bytecode;\n  }\n  return `0x${bytecode}`;\n}\n//# sourceMappingURL=prefix.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}