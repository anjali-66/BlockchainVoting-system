{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n\n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n\n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Header from './components/Header';\nimport WalletDetails from './components/WalletDetails';\nimport ConnectButton from './components/ConnectButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const SEPOLIA_CHAIN_ID = '0xaa36a7';\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask!');\n      }\n      const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(ethereumProvider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = accounts[0];\n      setAccount(account);\n      const network = await ethereumProvider.getNetwork();\n      const currentChainId = `0x${network.chainId.toString(16)}`;\n      if (currentChainId !== SEPOLIA_CHAIN_ID) {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: SEPOLIA_CHAIN_ID\n          }]\n        });\n      }\n      const balance = await ethereumProvider.getBalance(account);\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error connecting to wallet:', err);\n      setError(err.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const disconnectWallet = () => {\n    setAccount('');\n    setBalance('');\n    setProvider(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-6 max-w-2xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Ethereum Sepolia Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), !account ? /*#__PURE__*/_jsxDEV(ConnectButton, {\n          onClick: connectWallet,\n          isConnecting: isConnecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(WalletDetails, {\n          account: account,\n          balance: balance,\n          onDisconnect: disconnectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1ZQAnBoliVn3vT8a/vgAhfG3njU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Header","WalletDetails","ConnectButton","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","balance","setBalance","isConnecting","setIsConnecting","error","setError","SEPOLIA_CHAIN_ID","connectWallet","window","ethereum","Error","ethereumProvider","providers","Web3Provider","accounts","request","method","network","getNetwork","currentChainId","chainId","toString","params","getBalance","utils","formatEther","err","console","message","disconnectWallet","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onDisconnect","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n    \n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n      \n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n        \n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Header from './components/Header';\nimport WalletDetails from './components/WalletDetails';\nimport ConnectButton from './components/ConnectButton';\n\nconst App = () => {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n\n  const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask!');\n      }\n\n      const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(ethereumProvider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const account = accounts[0];\n      setAccount(account);\n\n      const network = await ethereumProvider.getNetwork();\n      const currentChainId = `0x${network.chainId.toString(16)}`;\n\n      if (currentChainId !== SEPOLIA_CHAIN_ID) {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: SEPOLIA_CHAIN_ID }],\n        });\n      }\n\n      const balance = await ethereumProvider.getBalance(account);\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error connecting to wallet:', err);\n      setError(err.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const disconnectWallet = () => {\n    setAccount('');\n    setBalance('');\n    setProvider(null);\n  };\n\n  return (\n    <div>\n      <Header />\n      <main className=\"p-6 max-w-2xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n          {error && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {error}\n            </div>\n          )}\n          {!account ? (\n            <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n          ) : (\n            <WalletDetails account={account} balance={balance} onDisconnect={disconnectWallet} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}