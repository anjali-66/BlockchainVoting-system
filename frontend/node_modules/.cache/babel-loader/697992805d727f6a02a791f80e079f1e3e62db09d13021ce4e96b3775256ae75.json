{"ast":null,"code":"import { ethers } from \"ethers\";\nimport VotingSystemABI from \"./abi/VotingSystem.json\";\nconst CONTRACT_ADDRESS = \"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\";\nexport const connectWallet = async () => {\n  if (!window.ethereum) {\n    alert(\"Metamask not detected!\");\n    return;\n  }\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  return signer;\n};\nexport const getContract = signer => {\n  return new ethers.Contract(CONTRACT_ADDRESS, VotingSystemABI, signer);\n};","map":{"version":3,"names":["ethers","VotingSystemABI","CONTRACT_ADDRESS","connectWallet","window","ethereum","alert","provider","providers","Web3Provider","send","signer","getSigner","getContract","Contract"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/blockchain.js"],"sourcesContent":["import {ethers} from \"ethers\";\nimport VotingSystemABI from \"./abi/VotingSystem.json\";\n\n\nconst CONTRACT_ADDRESS=\"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\"\n\nexport const connectWallet= async ()=>\n{\n    if(!window.ethereum)\n    {\n        alert(\"Metamask not detected!\");\n        return;\n    }\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    return signer;\n};\n\nexport const getContract = (signer) => {\n    return new ethers.Contract(CONTRACT_ADDRESS, VotingSystemABI, signer);\n};\n"],"mappings":"AAAA,SAAQA,MAAM,QAAO,QAAQ;AAC7B,OAAOC,eAAe,MAAM,yBAAyB;AAGrD,MAAMC,gBAAgB,GAAC,4CAA4C;AAEnE,OAAO,MAAMC,aAAa,GAAE,MAAAA,CAAA,KAC5B;EACI,IAAG,CAACC,MAAM,CAACC,QAAQ,EACnB;IACIC,KAAK,CAAC,wBAAwB,CAAC;IAC/B;EACJ;EACA,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;EACnE,MAAME,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAC9C,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAS,CAAC,CAAC;EACnC,OAAOD,MAAM;AACjB,CAAC;AAED,OAAO,MAAME,WAAW,GAAIF,MAAM,IAAK;EACnC,OAAO,IAAIX,MAAM,CAACc,QAAQ,CAACZ,gBAAgB,EAAED,eAAe,EAAEU,MAAM,CAAC;AACzE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}