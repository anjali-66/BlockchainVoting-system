{"ast":null,"code":"import { useCallback, useState } from \"react\";\n/**\n *\n * @internal\n */\nexport function useShowMore(initialItemsToShow, itemsToAdd) {\n  // start with showing first `initialItemsToShow` items, when the last item is in view, show `itemsToAdd` more\n  const [itemsToShow, setItemsToShow] = useState(initialItemsToShow);\n  const lastItemRef = useCallback(node => {\n    if (!node) {\n      return;\n    }\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0]?.isIntersecting) {\n        setItemsToShow(prev => prev + itemsToAdd); // show 10 more items\n      }\n    }, {\n      threshold: 1\n    });\n    observer.observe(node);\n    // when the node is removed from the DOM, observer will be disconnected automatically by the browser\n  }, [itemsToAdd]);\n  return {\n    itemsToShow,\n    lastItemRef\n  };\n}\n//# sourceMappingURL=useShowMore.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}