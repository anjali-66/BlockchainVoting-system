{"ast":null,"code":"import { stringify } from \"../../../../../utils/json.js\";\nimport { getLoginCallbackUrl, getLoginUrl } from \"../../../core/authentication/getLoginPath.js\";\n/**\n * @internal\n */\nexport const sendOtp = async args => {\n  const {\n    client,\n    ecosystem\n  } = args;\n  const url = getLoginUrl({\n    client,\n    ecosystem,\n    authOption: args.strategy\n  });\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-client-id\": client.clientId\n  };\n  if (ecosystem?.id) {\n    headers[\"x-ecosystem-id\"] = ecosystem.id;\n  }\n  if (ecosystem?.partnerId) {\n    headers[\"x-ecosystem-partner-id\"] = ecosystem.partnerId;\n  }\n  const body = (() => {\n    switch (args.strategy) {\n      case \"email\":\n        return {\n          email: args.email\n        };\n      case \"phone\":\n        return {\n          phone: args.phoneNumber\n        };\n    }\n  })();\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers,\n    body: stringify(body)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to send verification code\");\n  }\n  return await response.json();\n};\n/**\n * @internal\n */\nexport const verifyOtp = async args => {\n  const {\n    client,\n    ecosystem\n  } = args;\n  const url = getLoginCallbackUrl({\n    authOption: args.strategy,\n    client: args.client,\n    ecosystem: args.ecosystem\n  });\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-client-id\": client.clientId\n  };\n  if (ecosystem?.id) {\n    headers[\"x-ecosystem-id\"] = ecosystem.id;\n  }\n  if (ecosystem?.partnerId) {\n    headers[\"x-ecosystem-partner-id\"] = ecosystem.partnerId;\n  }\n  const body = (() => {\n    switch (args.strategy) {\n      case \"email\":\n        return {\n          email: args.email,\n          code: args.verificationCode\n        };\n      case \"phone\":\n        return {\n          phone: args.phoneNumber,\n          code: args.verificationCode\n        };\n    }\n  })();\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers,\n    body: stringify(body)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to verify verification code\");\n  }\n  return await response.json();\n};\n//# sourceMappingURL=otp.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}