{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import ConnectWallet from './components/ConnectWallet';\n// import VotingSystem from './components/Contract';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n\n//   const handleWalletConnected = async (provider, account) => {\n//     setProvider(provider);\n//     setAccount(account);\n\n//     try {\n//       const balance = await provider.getBalance(account);\n//       setBalance(ethers.formatEther(balance)); // Updated for ethers 6.x\n//     } catch (err) {\n//       console.error('Error fetching balance:', err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       window.ethereum.on('accountsChanged', () => window.location.reload());\n//       window.ethereum.on('chainChanged', () => window.location.reload());\n//     }\n\n//     return () => {\n//       if (window.ethereum) {\n//         window.ethereum.removeListener('accountsChanged', () => window.location.reload());\n//         window.ethereum.removeListener('chainChanged', () => window.location.reload());\n//       }\n//     };\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setProvider(null);\n//     setAccount('');\n//     setBalance('');\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Ethereum Wallet</h1>\n//       {!account ? (\n//         <ConnectWallet onWalletConnected={handleWalletConnected} />\n//       ) : (\n//         <div>\n//           <p>Account: {account}</p>\n//           <p>Balance: {balance} ETH</p>\n//           <button \n//             onClick={disconnectWallet}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mt-2\"\n//           >\n//             Disconnect\n//           </button>\n//         </div>\n//       )}\n//       {account && (\n//     <VotingSystem provider={provider} account={account} />\n//   )}  \n\n//     </div>\n//   );\n// };\n\n// export default App;\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n\n// const ConnectWallet = ({ onWalletConnected }) => {\n//   const [error, setError] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed');\n//       }\n\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const provider = new ethers.BrowserProvider(window.ethereum);\n//       const signer = await provider.getSigner();\n//       const address = await signer.getAddress();\n\n//       onWalletConnected(provider, address);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//     setIsConnecting(false);\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"text-red-500 mb-2\">{error}</div>}\n//       <button\n//         onClick={connectWallet}\n//         disabled={isConnecting}\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//       >\n//         {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default ConnectWallet;","map":{"version":3,"names":[],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import ConnectWallet from './components/ConnectWallet';\n// import VotingSystem from './components/Contract';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n\n//   const handleWalletConnected = async (provider, account) => {\n//     setProvider(provider);\n//     setAccount(account);\n    \n//     try {\n//       const balance = await provider.getBalance(account);\n//       setBalance(ethers.formatEther(balance)); // Updated for ethers 6.x\n//     } catch (err) {\n//       console.error('Error fetching balance:', err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       window.ethereum.on('accountsChanged', () => window.location.reload());\n//       window.ethereum.on('chainChanged', () => window.location.reload());\n//     }\n\n//     return () => {\n//       if (window.ethereum) {\n//         window.ethereum.removeListener('accountsChanged', () => window.location.reload());\n//         window.ethereum.removeListener('chainChanged', () => window.location.reload());\n//       }\n//     };\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setProvider(null);\n//     setAccount('');\n//     setBalance('');\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Ethereum Wallet</h1>\n//       {!account ? (\n//         <ConnectWallet onWalletConnected={handleWalletConnected} />\n//       ) : (\n//         <div>\n//           <p>Account: {account}</p>\n//           <p>Balance: {balance} ETH</p>\n//           <button \n//             onClick={disconnectWallet}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mt-2\"\n//           >\n//             Disconnect\n//           </button>\n//         </div>\n//       )}\n//       {account && (\n//     <VotingSystem provider={provider} account={account} />\n//   )}  \n\n//     </div>\n//   );\n// };\n\n// export default App;\n// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n\n// const ConnectWallet = ({ onWalletConnected }) => {\n//   const [error, setError] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('MetaMask is not installed');\n//       }\n\n//       await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const provider = new ethers.BrowserProvider(window.ethereum);\n//       const signer = await provider.getSigner();\n//       const address = await signer.getAddress();\n\n//       onWalletConnected(provider, address);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//     setIsConnecting(false);\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"text-red-500 mb-2\">{error}</div>}\n//       <button\n//         onClick={connectWallet}\n//         disabled={isConnecting}\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//       >\n//         {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default ConnectWallet;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}