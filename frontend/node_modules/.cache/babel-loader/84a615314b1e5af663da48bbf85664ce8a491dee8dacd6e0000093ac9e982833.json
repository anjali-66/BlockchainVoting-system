{"ast":null,"code":"const darkColors = {\n  base1: \"hsl(230 11.63% 8.43%)\",\n  base2: \"hsl(230 11.63% 12%)\",\n  base3: \"hsl(230 11.63% 15%)\",\n  base4: \"hsl(230 11.63% 17%)\",\n  primaryText: \"#eeeef0\",\n  secondaryText: \"#7c7a85\",\n  danger: \"#e5484D\",\n  success: \"#30A46C\",\n  overlay: \"rgba(0, 0, 0, 0.7)\",\n  accentText: \"#3385FF\",\n  accentBg: \"hsl(216 100% 50%)\",\n  textOnAccent: \"#eeeef0\"\n};\nconst lightColors = {\n  base1: \"#fdfcfd\",\n  base2: \"#f2eff3\",\n  base3: \"#e3dfe6\",\n  base4: \"#dbd8e0\",\n  primaryText: \"#211f26\",\n  secondaryText: \"#6f6d78\",\n  accentText: \"#3385FF\",\n  success: \"#30A46C\",\n  danger: \"#e5484D\",\n  overlay: \"rgba(0, 0, 0, 0.7)\",\n  accentBg: \"hsl(216 100% 50%)\",\n  textOnAccent: \"#fdfcfd\"\n};\n/**\n * @internal\n */\nfunction createThemeObj(type, colors) {\n  return {\n    type,\n    colors: {\n      primaryText: colors.primaryText,\n      secondaryText: colors.secondaryText,\n      accentText: colors.accentText,\n      danger: colors.danger,\n      success: colors.success,\n      modalOverlayBg: colors.overlay,\n      accentButtonBg: colors.accentBg,\n      accentButtonText: colors.textOnAccent,\n      primaryButtonBg: colors.primaryText,\n      primaryButtonText: colors.base1,\n      secondaryButtonBg: colors.base3,\n      secondaryButtonText: colors.primaryText,\n      secondaryButtonHoverBg: colors.base4,\n      modalBg: colors.base1,\n      tooltipBg: colors.primaryText,\n      tooltipText: colors.base1,\n      inputAutofillBg: colors.base1,\n      scrollbarBg: colors.base2,\n      tertiaryBg: colors.base2,\n      separatorLine: colors.base4,\n      secondaryIconColor: colors.secondaryText,\n      secondaryIconHoverBg: colors.base3,\n      secondaryIconHoverColor: colors.primaryText,\n      borderColor: colors.base4,\n      skeletonBg: colors.base3,\n      selectedTextColor: colors.base1,\n      selectedTextBg: colors.primaryText,\n      connectedButtonBg: colors.base1,\n      connectedButtonBgHover: colors.base2\n    },\n    fontFamily: \"inherit\"\n  };\n}\nexport const darkThemeObj = /* @__PURE__ */createThemeObj(\"dark\", darkColors);\nexport const lightThemeObj = /* @__PURE__ */createThemeObj(\"light\", lightColors);\nexport const fontSize = {\n  xs: \"12px\",\n  sm: \"14px\",\n  md: \"16px\",\n  lg: \"20px\",\n  xl: \"24px\",\n  xxl: \"32px\",\n  \"3xl\": \"48px\"\n};\nexport const spacing = {\n  \"4xs\": \"2px\",\n  \"3xs\": \"4px\",\n  xxs: \"6px\",\n  xs: \"8px\",\n  sm: \"12px\",\n  md: \"16px\",\n  lg: \"24px\",\n  xl: \"32px\",\n  xxl: \"48px\",\n  \"3xl\": \"64px\"\n};\nexport const radius = {\n  xs: \"4px\",\n  sm: \"6px\",\n  md: \"8px\",\n  lg: \"12px\",\n  xl: \"20px\",\n  xxl: \"32px\"\n};\nexport const iconSize = {\n  xs: \"12\",\n  sm: \"16\",\n  md: \"24\",\n  lg: \"32\",\n  xl: \"48\",\n  xxl: \"64\",\n  \"3xl\": \"96\",\n  \"4xl\": \"128\"\n};\n// desktop first style media query\nexport const media = {\n  mobile: \"@media (max-width: 640px)\"\n};\n// TODO - move to theme\nexport const shadow = {\n  sm: \"0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n  md: \"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",\n  lg: \"0 10px 15px -3px rgb(0 0 0 / 0.07), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n  xl: \"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\"\n};\n/**\n * Create a custom light theme object by using the default dark theme as a base and applying overrides.\n * @example\n * ### Get the default light theme\n * ```ts\n * const defaultLightTheme = lightTheme()\n * ```\n *\n * ### Create a custom light theme\n * ```ts\n * const customTheme = lightTheme({\n *   colors: {\n *     modalBg: \"red\",\n *   },\n * });\n * ```\n * @param overrides - The overrides to apply to the default light theme.\n * @theme\n * @returns Theme object\n */\nexport function lightTheme(overrides) {\n  if (!overrides) {\n    return lightThemeObj;\n  }\n  return applyThemeOverrides(lightThemeObj, overrides);\n}\n/**\n * Create a custom dark theme object by using the default dark theme as a base and applying overrides.\n * @example\n * ### Get the default dark theme\n * ```ts\n * const defaultDarkTheme = darkTheme()\n * ```\n *\n * ### Create a custom dark theme\n * ```ts\n * const customTheme = darkTheme({\n *   colors: {\n *     modalBg: \"red\",\n *   },\n * });\n * ```\n * @param overrides - The overrides to apply to the default dark theme.\n * @theme\n * @returns Theme object\n */\nexport function darkTheme(overrides) {\n  if (!overrides) {\n    return darkThemeObj;\n  }\n  return applyThemeOverrides(darkThemeObj, overrides);\n}\n/**\n * @internal\n */\nfunction applyThemeOverrides(baseTheme, themeOverrides) {\n  const theme = {\n    ...baseTheme\n  };\n  if (themeOverrides.colors) {\n    theme.colors = {\n      ...theme.colors,\n      ...themeOverrides.colors\n    };\n  }\n  if (themeOverrides.fontFamily) {\n    theme.fontFamily = themeOverrides.fontFamily;\n  }\n  return theme;\n}\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}