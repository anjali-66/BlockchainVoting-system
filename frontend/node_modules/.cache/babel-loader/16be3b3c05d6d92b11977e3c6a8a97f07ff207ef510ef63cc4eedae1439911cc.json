{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport ConnectWallet from './components/ConnectWallet';\nimport VotingSystem from './components/Co';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n  const handleWalletConnected = async (provider, account) => {\n    setProvider(provider);\n    setAccount(account);\n    try {\n      const balance = await provider.getBalance(account);\n      setBalance(ethers.formatEther(balance)); // Updated for ethers 6.x\n    } catch (err) {\n      console.error('Error fetching balance:', err);\n    }\n  };\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => window.location.reload());\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', () => window.location.reload());\n        window.ethereum.removeListener('chainChanged', () => window.location.reload());\n      }\n    };\n  }, []);\n  const disconnectWallet = () => {\n    setProvider(null);\n    setAccount('');\n    setBalance('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Ethereum Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      onWalletConnected: handleWalletConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mt-2\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vvJXWomER10dJrl+2IiwIY+fleA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","ConnectWallet","VotingSystem","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","balance","setBalance","handleWalletConnected","getBalance","formatEther","err","console","error","window","ethereum","on","location","reload","removeListener","disconnectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onWalletConnected","onClick","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport ConnectWallet from './components/ConnectWallet';\nimport VotingSystem from './components/Co';\n\nconst App = () => {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n\n  const handleWalletConnected = async (provider, account) => {\n    setProvider(provider);\n    setAccount(account);\n    \n    try {\n      const balance = await provider.getBalance(account);\n      setBalance(ethers.formatEther(balance)); // Updated for ethers 6.x\n    } catch (err) {\n      console.error('Error fetching balance:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => window.location.reload());\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', () => window.location.reload());\n        window.ethereum.removeListener('chainChanged', () => window.location.reload());\n      }\n    };\n  }, []);\n\n  const disconnectWallet = () => {\n    setProvider(null);\n    setAccount('');\n    setBalance('');\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Ethereum Wallet</h1>\n      {!account ? (\n        <ConnectWallet onWalletConnected={handleWalletConnected} />\n      ) : (\n        <div>\n          <p>Account: {account}</p>\n          <p>Balance: {balance} ETH</p>\n          <button \n            onClick={disconnectWallet}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mt-2\"\n          >\n            Disconnect\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}