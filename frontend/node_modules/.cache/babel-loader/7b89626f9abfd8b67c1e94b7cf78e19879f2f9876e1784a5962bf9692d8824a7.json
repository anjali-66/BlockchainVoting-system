{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Cross2Icon } from \"@radix-ui/react-icons\";\nimport { useUnlinkProfile } from \"../../../../../react/web/hooks/wallets/useUnlinkProfile.js\";\nimport { shortenAddress } from \"../../../../../utils/address.js\";\nimport { fontSize, iconSize } from \"../../../../core/design-system/index.js\";\nimport { useSocialProfiles } from \"../../../../core/social/useSocialProfiles.js\";\nimport { getSocialIcon } from \"../../../../core/utils/walletIcon.js\";\nimport { useProfiles } from \"../../../hooks/wallets/useProfiles.js\";\nimport { LoadingScreen } from \"../../../wallets/shared/LoadingScreen.js\";\nimport { Img } from \"../../components/Img.js\";\nimport { Spacer } from \"../../components/Spacer.js\";\nimport { Container, Line, ModalHeader } from \"../../components/basic.js\";\nimport { IconButton } from \"../../components/buttons.js\";\nimport { Text } from \"../../components/text.js\";\nimport { Blobbie } from \"../Blobbie.js\";\nimport { MenuButton } from \"../MenuButton.js\";\nimport { AddUserIcon } from \"../icons/AddUserIcon.js\";\nimport { EmailIcon } from \"../icons/EmailIcon.js\";\nimport { FingerPrintIcon } from \"../icons/FingerPrintIcon.js\";\nimport { PhoneIcon } from \"../icons/PhoneIcon.js\";\nfunction getProfileDisplayName(profile) {\n  switch (true) {\n    case profile.type === \"email\" && profile.details.email !== undefined:\n      return profile.details.email;\n    case profile.type === \"google\" && profile.details.email !== undefined:\n      return profile.details.email;\n    case profile.type === \"phone\" && profile.details.phone !== undefined:\n      return profile.details.phone;\n    case profile.details.address !== undefined:\n      return shortenAddress(profile.details.address, 6);\n    case profile.type === \"cognito\" && profile.details.email !== undefined:\n      return profile.details.email;\n    case profile.type.toLowerCase() === \"custom_auth_endpoint\":\n      return \"Custom Profile\";\n    default:\n      return profile.type.slice(0, 1).toUpperCase() + profile.type.slice(1);\n  }\n}\n/**\n * @internal\n */\nexport function LinkedProfilesScreen(props) {\n  const {\n    data: connectedProfiles,\n    isLoading\n  } = useProfiles({\n    client: props.client\n  });\n  if (isLoading) {\n    return _jsx(LoadingScreen, {});\n  }\n  return _jsxs(Container, {\n    style: {\n      minHeight: \"300px\"\n    },\n    children: [_jsx(Container, {\n      p: \"lg\",\n      children: _jsx(ModalHeader, {\n        title: props.locale.manageWallet.linkedProfiles,\n        onBack: props.onBack\n      })\n    }), _jsx(Line, {}), _jsxs(Container, {\n      scrollY: true,\n      style: {\n        height: \"300px\"\n      },\n      children: [_jsx(Spacer, {\n        y: \"md\"\n      }), _jsxs(Container, {\n        px: \"sm\",\n        children: [_jsxs(MenuButton, {\n          onClick: () => {\n            props.setScreen(\"link-profile\");\n          },\n          style: {\n            fontSize: fontSize.sm\n          },\n          children: [_jsx(AddUserIcon, {\n            size: iconSize.lg\n          }), _jsx(Text, {\n            color: \"primaryText\",\n            children: props.locale.manageWallet.linkProfile\n          })]\n        }), _jsx(Spacer, {\n          y: \"xs\"\n        }), connectedProfiles?.filter(profile => profile.type.toLowerCase() !== \"guest\" && profile.type.toLowerCase() !== \"custom_jwt\" && profile.type.toLowerCase() !== \"custom_auth_endpoint\").map(profile => _jsx(LinkedProfile, {\n          enableUnlinking: connectedProfiles.length > 1,\n          profile: profile,\n          client: props.client\n        }, `${JSON.stringify(profile)}`))]\n      }), _jsx(Spacer, {\n        y: \"md\"\n      })]\n    })]\n  });\n}\nfunction LinkedProfile({\n  profile,\n  enableUnlinking,\n  client\n}) {\n  const {\n    data: socialProfiles\n  } = useSocialProfiles({\n    client,\n    address: profile.details.address\n  });\n  const {\n    mutate: unlinkProfileMutation,\n    isPending\n  } = useUnlinkProfile();\n  return _jsxs(MenuButton, {\n    style: {\n      fontSize: fontSize.sm,\n      cursor: \"default\"\n    },\n    as: \"div\",\n    disabled // disabled until we have more data to show on a dedicated profile screen\n    : true,\n    children: [socialProfiles?.some(p => p.avatar) ? _jsx(Img, {\n      src: socialProfiles?.find(p => p.avatar)?.avatar,\n      width: iconSize.lg,\n      height: iconSize.lg,\n      loading: \"eager\",\n      client: client,\n      style: {\n        borderRadius: \"100%\"\n      }\n    }) : profile.details.address !== undefined ? _jsx(Container, {\n      style: {\n        width: \"32px\",\n        height: \"32px\",\n        borderRadius: \"100%\",\n        overflow: \"hidden\"\n      },\n      children: _jsx(Blobbie, {\n        address: profile.details.address,\n        size: 32\n      })\n    }) : profile.type === \"passkey\" ? _jsx(FingerPrintIcon, {\n      size: iconSize.lg\n    }) : profile.type === \"email\" ? _jsx(EmailIcon, {\n      size: iconSize.lg\n    }) : profile.type === \"phone\" ? _jsx(PhoneIcon, {\n      size: iconSize.lg\n    }) : _jsx(Img, {\n      src: getSocialIcon(profile.type),\n      width: iconSize.lg,\n      height: iconSize.lg,\n      loading: \"eager\",\n      client: client\n    }), _jsxs(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexGrow: 1\n      },\n      children: [_jsx(Text, {\n        color: \"primaryText\",\n        children: socialProfiles?.find(p => p.avatar)?.name || getProfileDisplayName(profile)\n      }), _jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          gap: \"8px\"\n        },\n        children: [socialProfiles?.find(p => p.avatar)?.name && profile.details.address && _jsx(Text, {\n          color: \"secondaryText\",\n          size: \"sm\",\n          children: shortenAddress(profile.details.address, 4)\n        }), enableUnlinking && _jsx(IconButton, {\n          autoFocus: true,\n          type: \"button\",\n          \"aria-label\": \"Unlink\",\n          onClick: () => unlinkProfileMutation({\n            client,\n            profileToUnlink: profile\n          }),\n          style: {\n            pointerEvents: \"auto\"\n          },\n          disabled: isPending,\n          children: _jsx(Cross2Icon, {\n            width: iconSize.md,\n            height: iconSize.md,\n            style: {\n              color: \"inherit\"\n            }\n          })\n        })]\n      })]\n    })]\n  });\n}\n//# sourceMappingURL=LinkedProfilesScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}