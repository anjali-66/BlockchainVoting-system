{"ast":null,"code":"import { getInstalledWalletProviders } from \"../../../wallets/injected/mipdStore.js\";\n/**\n *\n * @internal\n */\nexport function sortWallets(wallets, recommendedWallets) {\n  const providers = getInstalledWalletProviders();\n  return wallets\n  // show the installed wallets first\n  .sort((a, b) => {\n    const aInstalled = providers.find(p => p.info.rdns === a.id);\n    const bInstalled = providers.find(p => p.info.rdns === b.id);\n    if (aInstalled && !bInstalled) {\n      return -1;\n    }\n    if (!aInstalled && bInstalled) {\n      return 1;\n    }\n    return 0;\n  })\n  // show the recommended wallets even before that\n  .sort((a, b) => {\n    const aIsRecommended = recommendedWallets?.find(w => w.id === a.id);\n    const bIsRecommended = recommendedWallets?.find(w => w.id === b.id);\n    if (aIsRecommended && !bIsRecommended) {\n      return -1;\n    }\n    if (!aIsRecommended && bIsRecommended) {\n      return 1;\n    }\n    return 0;\n  })\n  // show in-app wallets first\n  .sort((a, b) => {\n    const aIsInApp = a.id === \"inApp\" || a.id === \"embedded\";\n    const bIsInApp = b.id === \"inApp\" || b.id === \"embedded\";\n    if (aIsInApp && !bIsInApp) {\n      return -1;\n    }\n    if (!aIsInApp && bIsInApp) {\n      return 1;\n    }\n    return 0;\n  });\n}\n//# sourceMappingURL=sortWallets.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}