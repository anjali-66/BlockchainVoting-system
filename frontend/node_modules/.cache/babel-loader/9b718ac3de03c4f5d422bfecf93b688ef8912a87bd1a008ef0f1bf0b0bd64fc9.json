{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatNumber } from \"../../../../../../../utils/formatNumber.js\";\nimport { useCustomTheme } from \"../../../../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, radius, spacing } from \"../../../../../../core/design-system/index.js\";\nimport { useChainName } from \"../../../../../../core/hooks/others/useChainQuery.js\";\nimport { useWalletBalance } from \"../../../../../../core/hooks/others/useWalletBalance.js\";\nimport { Skeleton } from \"../../../../components/Skeleton.js\";\nimport { Container } from \"../../../../components/basic.js\";\nimport { Text } from \"../../../../components/text.js\";\nimport { TokenSymbol } from \"../../../../components/token/TokenSymbol.js\";\nimport { formatTokenBalance } from \"../../formatTokenBalance.js\";\nimport { isNativeToken } from \"../../nativeToken.js\";\nimport { PayTokenIcon } from \"../PayTokenIcon.js\";\nimport { WalletRow } from \"../WalletSelectorButton.js\";\n/**\n * Shows an amount \"value\" and renders the selected token and chain\n * It also renders the buttons to select the token and chain\n * It also renders the balance of active wallet for the selected token in selected chain\n * @internal\n */\nexport function PayWithCryptoQuoteInfo(props) {\n  const theme = useCustomTheme();\n  const {\n    name\n  } = useChainName(props.chain);\n  const balanceQuery = useWalletBalance({\n    address: props.payerAccount.address,\n    chain: props.chain,\n    tokenAddress: isNativeToken(props.token) ? undefined : props.token.address,\n    client: props.client\n  });\n  return _jsxs(Container, {\n    bg: \"tertiaryBg\",\n    style: {\n      borderRadius: radius.lg,\n      border: `1px solid ${theme.colors.borderColor}`,\n      ...(props.swapRequired ? {\n        borderBottom: \"none\",\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      } : {})\n    },\n    children: [_jsxs(Container, {\n      flex: \"row\",\n      gap: \"sm\",\n      style: {\n        justifyContent: \"space-between\",\n        padding: spacing.sm,\n        borderBottom: `1px solid ${theme.colors.borderColor}`\n      },\n      children: [_jsx(WalletRow, {\n        client: props.client,\n        address: props.payerAccount.address\n      }), balanceQuery.data ? _jsxs(Container, {\n        flex: \"row\",\n        gap: \"3xs\",\n        center: \"y\",\n        children: [_jsx(Text, {\n          size: \"xs\",\n          color: \"secondaryText\",\n          weight: 500,\n          children: formatTokenBalance(balanceQuery.data, false)\n        }), _jsx(TokenSymbol, {\n          token: props.token,\n          chain: props.chain,\n          size: \"xs\",\n          color: \"secondaryText\"\n        })]\n      }) : _jsx(Skeleton, {\n        width: \"70px\",\n        height: fontSize.xs\n      })]\n    }), _jsxs(Container, {\n      flex: \"row\",\n      gap: \"sm\",\n      style: {\n        paddingInline: spacing.sm,\n        paddingBlock: spacing.sm,\n        minWidth: \"50%\",\n        justifyContent: \"flex-start\",\n        minHeight: \"64px\"\n      },\n      children: [_jsx(PayTokenIcon, {\n        token: props.token,\n        chain: props.chain,\n        size: \"md\",\n        client: props.client\n      }), _jsxs(Container, {\n        flex: \"column\",\n        gap: \"3xs\",\n        children: [props.isLoading ? _jsx(Skeleton, {\n          width: \"120px\",\n          height: fontSize.md,\n          color: \"borderColor\"\n        }) : _jsxs(Container, {\n          flex: \"row\",\n          gap: \"xxs\",\n          center: \"y\",\n          color: \"primaryText\",\n          children: [_jsx(Text, {\n            size: \"md\",\n            color: props.value ? \"primaryText\" : \"secondaryText\",\n            children: formatNumber(Number(props.value), 6) || \"\"\n          }), _jsx(TokenSymbol, {\n            token: props.token,\n            chain: props.chain,\n            size: \"sm\"\n          })]\n        }), name ? _jsx(Text, {\n          size: \"xs\",\n          children: name\n        }) : _jsx(Skeleton, {\n          width: \"90px\",\n          height: fontSize.xs\n        })]\n      })]\n    })]\n  });\n}\n//# sourceMappingURL=PayWithCrypto.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}