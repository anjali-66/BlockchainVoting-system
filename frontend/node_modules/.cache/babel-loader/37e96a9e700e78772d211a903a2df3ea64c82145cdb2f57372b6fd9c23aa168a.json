{"ast":null,"code":"import * as Hex from './Hex.js';\n/**\n * Converts a {@link ox#Filter.Rpc} to an {@link ox#Filter.Filter}.\n *\n * @example\n * ```ts twoslash\n * import { Filter } from 'ox'\n *\n * const filter = Filter.fromRpc({\n *   address: '0xd3cda913deb6f67967b99d671a681250403edf27',\n *   fromBlock: 'latest',\n *   toBlock: '0x010f2c',\n *   topics: [\n *     '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n *     null,\n *     '0x0000000000000000000000000c04d9e9278ec5e4d424476d3ebec70cb5d648d1',\n *   ],\n * })\n * // @log: {\n * // @log:   address: '0xd3cda913deb6f67967b99d671a681250403edf27',\n * // @log:   fromBlock: 'latest',\n * // @log:   toBlock: 69420n,\n * // @log:   topics: [\n * // @log:     '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n * // @log:     null,\n * // @log:     '0x0000000000000000000000000c04d9e9278ec5e4d424476d3ebec70cb5d648d1',\n * // @log:   ],\n * // @log: }\n * ```\n *\n * @param filter - The RPC filter to convert.\n * @returns An instantiated {@link ox#Filter.Filter}.\n */\nexport function fromRpc(filter) {\n  const {\n    fromBlock,\n    toBlock\n  } = filter;\n  return {\n    ...filter,\n    ...(fromBlock && {\n      fromBlock: Hex.validate(fromBlock, {\n        strict: false\n      }) ? BigInt(fromBlock) : fromBlock\n    }),\n    ...(toBlock && {\n      toBlock: Hex.validate(toBlock, {\n        strict: false\n      }) ? BigInt(toBlock) : toBlock\n    })\n  };\n}\n/**\n * Converts a {@link ox#Filter.Filter} to a {@link ox#Filter.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { AbiEvent, Filter } from 'ox'\n *\n * const transfer = AbiEvent.from('event Transfer(address indexed, address indexed, uint256)')\n * const { topics } = AbiEvent.encode(transfer)\n *\n * const filter = Filter.toRpc({\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *   topics,\n * })\n * // @log: {\n * // @log:   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * // @log:   topics: [\n * // @log:     '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n * // @log:   ],\n * // @log: }\n * ```\n *\n * @param filter - The filter to convert.\n * @returns An RPC filter.\n */\nexport function toRpc(filter) {\n  const {\n    address,\n    topics,\n    fromBlock,\n    toBlock\n  } = filter;\n  return {\n    ...(address && {\n      address\n    }),\n    ...(topics && {\n      topics\n    }),\n    ...(typeof fromBlock !== 'undefined' ? {\n      fromBlock: typeof fromBlock === 'bigint' ? Hex.fromNumber(fromBlock) : fromBlock\n    } : {}),\n    ...(typeof toBlock !== 'undefined' ? {\n      toBlock: typeof toBlock === 'bigint' ? Hex.fromNumber(toBlock) : toBlock\n    } : {})\n  };\n}\n//# sourceMappingURL=Filter.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}