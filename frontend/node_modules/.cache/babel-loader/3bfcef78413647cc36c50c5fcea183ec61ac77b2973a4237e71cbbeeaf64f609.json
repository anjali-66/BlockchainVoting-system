{"ast":null,"code":"import { useQuery } from \"@tanstack/react-query\";\nexport async function getConnectLocale(localeId) {\n  switch (localeId) {\n    case \"es_ES\":\n      {\n        return (await import(\"./es.js\")).default;\n      }\n    case \"ja_JP\":\n      {\n        return (await import(\"./ja.js\")).default;\n      }\n    case \"tl_PH\":\n      {\n        return (await import(\"./tl.js\")).default;\n      }\n    case \"vi_VN\":\n      {\n        return (await import(\"./vi.js\")).default;\n      }\n    case \"de_DE\":\n      {\n        return (await import(\"./de.js\")).default;\n      }\n    case \"ko_KR\":\n      {\n        return (await import(\"./kr.js\")).default;\n      }\n    case \"fr_FR\":\n      {\n        return (await import(\"./fr.js\")).default;\n      }\n    case \"pt_BR\":\n      {\n        return (await import(\"./br.js\")).default;\n      }\n    default:\n      {\n        return (await import(\"./en.js\")).default;\n      }\n  }\n}\n/**\n * @internal\n */\nexport function useConnectLocale(localeId) {\n  return useQuery({\n    queryKey: [\"connect-locale\", localeId],\n    queryFn: async () => {\n      return getConnectLocale(localeId);\n    },\n    refetchOnWindowFocus: false,\n    refetchOnMount: false\n  });\n}\n//# sourceMappingURL=getConnectLocale.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}