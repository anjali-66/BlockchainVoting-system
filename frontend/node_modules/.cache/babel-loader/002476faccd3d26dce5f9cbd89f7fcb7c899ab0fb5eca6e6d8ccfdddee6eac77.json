{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useRef } from \"react\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { radius, spacing } from \"../../../core/design-system/index.js\";\nimport { StyledOption, StyledSelect } from \"../../ui/design-system/elements.js\";\nimport { supportedSmsCountries } from \"./supported-sms-countries.js\";\nexport function getCountrySelector(countryIsoCode) {\n  const country = supportedSmsCountries.find(country => country.countryIsoCode === countryIsoCode);\n  if (!country) {\n    return \"US +1\";\n  }\n  return `${country.countryIsoCode} +${country.phoneNumberCode}`;\n}\nexport function CountrySelector({\n  countryCode,\n  setCountryCode\n}) {\n  const selectRef = useRef(null);\n  const supportedCountriesForSms = supportedSmsCountries ?? [{\n    countryIsoCode: \"US\",\n    countryName: \"United States\",\n    phoneNumberCode: 1\n  }];\n  return _jsx(_Fragment, {\n    children: _jsxs(Select, {\n      ref: selectRef,\n      name: \"countries\",\n      id: \"countries\",\n      value: countryCode,\n      onChange: e => {\n        setCountryCode(e.target.value);\n      },\n      style: {\n        padding: `${spacing.sm} ${spacing.md}`\n      },\n      children: [_jsx(Option, {\n        style: {\n          display: \"none\"\n        },\n        value: countryCode,\n        children: countryCode\n      }), supportedCountriesForSms.map(country => {\n        return _jsxs(Option, {\n          value: getCountrySelector(country.countryIsoCode),\n          children: [country.countryName, \" +\", country.phoneNumberCode]\n        }, country.countryIsoCode);\n      })]\n    })\n  });\n}\nconst Option = /* @__PURE__ */StyledOption(() => {\n  const theme = useCustomTheme();\n  return {\n    color: theme.colors.primaryText,\n    background: theme.colors.modalBg,\n    transition: \"background 0.3s ease\",\n    \"&:hover\": {\n      background: theme.colors.tertiaryBg\n    }\n  };\n});\nconst Select = /* @__PURE__ */StyledSelect(_ => {\n  const theme = useCustomTheme();\n  return {\n    display: \"block\",\n    padding: spacing.sm,\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: radius.lg,\n    color: theme.colors.primaryText,\n    WebkitAppearance: \"none\",\n    appearance: \"none\",\n    cursor: \"pointer\",\n    background: \"transparent\",\n    \"&::placeholder\": {\n      color: theme.colors.secondaryText\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\"\n    },\n    minWidth: \"0px\",\n    maxWidth: \"90px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\"\n  };\n});\n//# sourceMappingURL=CountrySelector.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}