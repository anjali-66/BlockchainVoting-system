{"ast":null,"code":"import { clsx } from 'clsx';\nimport { h, render } from 'preact';\nimport { injectCssReset } from '../cssReset/cssReset.js';\nimport { SnackbarContainer } from '../Snackbar/Snackbar.js';\nimport { isDarkMode } from '../util.js';\nimport css from './RedirectDialog-css.js';\nexport class RedirectDialog {\n  constructor() {\n    this.root = null;\n    this.darkMode = isDarkMode();\n  }\n  attach() {\n    const el = document.documentElement;\n    this.root = document.createElement('div');\n    this.root.className = '-cbwsdk-css-reset';\n    el.appendChild(this.root);\n    injectCssReset();\n  }\n  present(props) {\n    this.render(props);\n  }\n  clear() {\n    this.render(null);\n  }\n  render(props) {\n    if (!this.root) return;\n    render(null, this.root);\n    if (!props) return;\n    render(h(RedirectDialogContent, Object.assign({}, props, {\n      onDismiss: () => {\n        this.clear();\n      },\n      darkMode: this.darkMode\n    })), this.root);\n  }\n}\nconst RedirectDialogContent = ({\n  title,\n  buttonText,\n  darkMode,\n  onButtonClick,\n  onDismiss\n}) => {\n  const theme = darkMode ? 'dark' : 'light';\n  return h(SnackbarContainer, {\n    darkMode: darkMode\n  }, h(\"div\", {\n    class: \"-cbwsdk-redirect-dialog\"\n  }, h(\"style\", null, css), h(\"div\", {\n    class: \"-cbwsdk-redirect-dialog-backdrop\",\n    onClick: onDismiss\n  }), h(\"div\", {\n    class: clsx('-cbwsdk-redirect-dialog-box', theme)\n  }, h(\"p\", null, title), h(\"button\", {\n    onClick: onButtonClick\n  }, buttonText))));\n};\n//# sourceMappingURL=RedirectDialog.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}