{"ast":null,"code":"import { requestProviders } from './utils.js';\nexport function createStore() {\n  const listeners = new Set();\n  let providerDetails = [];\n  const request = () => requestProviders(providerDetail => {\n    if (providerDetails.some(({\n      info\n    }) => info.uuid === providerDetail.info.uuid)) return;\n    providerDetails = [...providerDetails, providerDetail];\n    listeners.forEach(listener => listener(providerDetails, {\n      added: [providerDetail]\n    }));\n  });\n  let unwatch = request();\n  return {\n    _listeners() {\n      return listeners;\n    },\n    clear() {\n      listeners.forEach(listener => listener([], {\n        removed: [...providerDetails]\n      }));\n      providerDetails = [];\n    },\n    destroy() {\n      this.clear();\n      listeners.clear();\n      unwatch?.();\n    },\n    findProvider({\n      rdns\n    }) {\n      return providerDetails.find(providerDetail => providerDetail.info.rdns === rdns);\n    },\n    getProviders() {\n      return providerDetails;\n    },\n    reset() {\n      this.clear();\n      unwatch?.();\n      unwatch = request();\n    },\n    subscribe(listener, {\n      emitImmediately\n    } = {}) {\n      listeners.add(listener);\n      if (emitImmediately) listener(providerDetails, {\n        added: providerDetails\n      });\n      return () => listeners.delete(listener);\n    }\n  };\n}\n//# sourceMappingURL=store.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}