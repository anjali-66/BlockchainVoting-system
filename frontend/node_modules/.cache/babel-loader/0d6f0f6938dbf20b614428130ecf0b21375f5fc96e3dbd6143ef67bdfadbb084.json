{"ast":null,"code":"import { isCoinbaseSDKWallet } from \"../coinbase/coinbase-web.js\";\nimport { isInAppWallet } from \"../in-app/core/wallet/index.js\";\nimport { getInjectedProvider } from \"../injected/index.js\";\nimport { isSmartWallet } from \"../smart/index.js\";\nimport { isWalletConnect } from \"../wallet-connect/controller.js\";\n/**\n * Get the status of an [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792) bundle.\n *\n *  This function is dependent on the wallet's support for EIP-5792 and could fail.\n *\n * @param {GetCallsStatusOptions} options\n * @param {Wallet} options.wallet - The wallet that send the original calls.\n * @param {ThirdwebClient} options.client - A {@link ThirdwebClient} instance.\n * @param {WalletSendCallsId} options.bundleId - The ID of the bundle to get the status of.\n * @throws an error if the wallet does not support EIP-5792.\n * @returns {Promise<GetCallsStatusResponse>} - A promise that resolves to the bundle's status and receipts (if available). {@link GetCallsStatusResponse}\n * @beta\n * @example\n * ```ts\n *  import { createThirdwebClient } from \"thirdweb\";\n *  import { sendCalls, getCallsStatus } from \"thirdweb/wallets/eip5792\";\n *\n *  const client = createThirdwebClient({ clientId: ... });\n *\n *  const bundleId = await sendCalls({ wallet, client, calls });\n *\n *  let result;\n *  while (result.status !== \"CONFIRMED\") {\n *    result = await getCallsStatus({ wallet, client, bundleId });\n *  }\n * ```\n * @extension EIP5792\n * @extension EIP5792\n */\nexport async function getCallsStatus({\n  wallet,\n  client,\n  bundleId\n}) {\n  const account = wallet.getAccount();\n  if (!account) {\n    throw new Error(`Failed to get call status, no account found for wallet ${wallet.id}`);\n  }\n  // These conveniently operate the same\n  if (isSmartWallet(wallet) || isInAppWallet(wallet)) {\n    const {\n      inAppWalletGetCallsStatus\n    } = await import(\"../in-app/core/eip5972/in-app-wallet-calls.js\");\n    return inAppWalletGetCallsStatus({\n      wallet,\n      client,\n      bundleId\n    });\n  }\n  if (isCoinbaseSDKWallet(wallet)) {\n    const {\n      coinbaseSDKWalletGetCallsStatus\n    } = await import(\"../coinbase/coinbase-web.js\");\n    return coinbaseSDKWalletGetCallsStatus({\n      wallet,\n      bundleId\n    });\n  }\n  if (isWalletConnect(wallet)) {\n    throw new Error(\"getCallsStatus is not yet supported for Wallet Connect\");\n  }\n  // Default to injected wallet\n  const provider = getInjectedProvider(wallet.id);\n  try {\n    return await provider.request({\n      method: \"wallet_getCallsStatus\",\n      params: [bundleId]\n    });\n  } catch (error) {\n    if (/unsupport|not support/i.test(error.message)) {\n      throw new Error(`${wallet.id} does not support wallet_getCallsStatus, reach out to them directly to request EIP-5792 support.`);\n    }\n    throw error;\n  }\n}\n//# sourceMappingURL=get-calls-status.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}