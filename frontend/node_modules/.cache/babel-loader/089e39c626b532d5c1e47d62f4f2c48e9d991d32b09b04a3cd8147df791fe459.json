{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useState } from \"react\";\nimport { trackPayEvent } from \"../../../../../../../analytics/track/pay.js\";\nimport { getBuyWithFiatStatus } from \"../../../../../../../pay/buyWithFiat/getStatus.js\";\nimport { isSwapRequiredPostOnramp } from \"../../../../../../../pay/buyWithFiat/isSwapRequiredPostOnramp.js\";\nimport { openOnrampPopup } from \"../openOnRamppopup.js\";\nimport { addPendingTx } from \"../swap/pendingSwapTx.js\";\nimport { OnrampStatusScreen } from \"./FiatStatusScreen.js\";\nimport { FiatSteps, fiatQuoteToPartialQuote } from \"./FiatSteps.js\";\nimport { PostOnRampSwapFlow } from \"./PostOnRampSwapFlow.js\";\nexport function FiatFlow(props) {\n  const hasTwoSteps = isSwapRequiredPostOnramp(props.quote);\n  const [screen, setScreen] = useState(hasTwoSteps ? {\n    id: \"step-1\"\n  } : {\n    id: \"onramp-status\"\n  });\n  const [popupWindow, setPopupWindow] = useState(props.openedWindow);\n  const onPostOnrampSuccess = useCallback(() => {\n    // report the status of fiat status instead of post onramp swap status when post onramp swap is successful\n    getBuyWithFiatStatus({\n      intentId: props.quote.intentId,\n      client: props.client\n    }).then(status => {\n      props.onSuccess(status);\n    });\n  }, [props.onSuccess, props.quote.intentId, props.client]);\n  if (screen.id === \"step-1\") {\n    return _jsx(FiatSteps, {\n      title: props.title,\n      client: props.client,\n      onBack: props.onBack,\n      partialQuote: fiatQuoteToPartialQuote(props.quote),\n      step: 1,\n      onContinue: () => {\n        const popup = openOnrampPopup(props.quote.onRampLink, props.theme);\n        trackPayEvent({\n          event: \"open_onramp_popup\",\n          client: props.client,\n          walletAddress: props.payer.account.address,\n          walletType: props.payer.wallet.id\n        });\n        addPendingTx({\n          type: \"fiat\",\n          intentId: props.quote.intentId\n        });\n        setPopupWindow(popup);\n        setScreen({\n          id: \"onramp-status\"\n        });\n      }\n    });\n  }\n  if (screen.id === \"onramp-status\") {\n    return _jsx(OnrampStatusScreen, {\n      title: props.title,\n      client: props.client,\n      intentId: props.quote.intentId,\n      onBack: props.onBack,\n      hasTwoSteps: hasTwoSteps,\n      openedWindow: popupWindow,\n      quote: props.quote,\n      onDone: props.onDone,\n      onShowSwapFlow: _status => {\n        setScreen({\n          id: \"postonramp-swap\",\n          data: _status\n        });\n      },\n      transactionMode: props.transactionMode,\n      isEmbed: props.isEmbed,\n      onSuccess: props.onSuccess\n    });\n  }\n  if (screen.id === \"postonramp-swap\") {\n    return _jsx(PostOnRampSwapFlow, {\n      title: props.title,\n      status: screen.data,\n      quote: fiatQuoteToPartialQuote(props.quote),\n      client: props.client,\n      onBack: props.onBack,\n      onDone: props.onDone,\n      onSwapFlowStarted: () => {\n        // no op\n      },\n      transactionMode: props.transactionMode,\n      isEmbed: props.isEmbed,\n      payer: props.payer,\n      onSuccess: onPostOnrampSuccess\n    });\n  }\n  // never\n  return null;\n}\n//# sourceMappingURL=FiatFlow.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}