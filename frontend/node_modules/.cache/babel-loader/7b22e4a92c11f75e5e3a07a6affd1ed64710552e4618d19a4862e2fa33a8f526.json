{"ast":null,"code":"import { parseAbiItem } from \"abitype\";\nimport { encodeEventTopics, toEventHash } from \"viem\";\nimport { isAbiEvent } from \"./utils.js\";\n/**\n * Prepares an event by parsing the signature, generating the event hash, and encoding the event topics.\n * @param options - The options for preparing the event.\n * @returns The prepared event object.\n * @example\n * ```ts\n * import { prepareEvent } from \"thirdweb\";\n * const myEvent = prepareEvent({\n *  signature: \"event MyEvent(uint256 myArg)\",\n * });\n * ```\n * @contract\n */\nexport function prepareEvent(options) {\n  const {\n    signature\n  } = options;\n  let resolvedSignature;\n  if (isAbiEvent(signature)) {\n    resolvedSignature = signature;\n  } else {\n    resolvedSignature = parseAbiItem(signature);\n  }\n  return {\n    abiEvent: resolvedSignature,\n    hash: toEventHash(resolvedSignature),\n    // @ts-expect-error - TODO: investiagte why this complains, it works fine however\n    topics: encodeEventTopics({\n      abi: [resolvedSignature],\n      args: options.filters\n    })\n  };\n}\n//# sourceMappingURL=prepare-event.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}