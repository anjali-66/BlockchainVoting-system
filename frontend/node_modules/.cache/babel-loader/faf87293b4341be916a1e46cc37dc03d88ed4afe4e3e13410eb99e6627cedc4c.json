{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/Votingsystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport abi from '../abi/VotingSystem.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VotingSystem = ({\n  provider,\n  account\n}) => {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [polls, setPolls] = useState([]);\n  const [newPoll, setNewPoll] = useState({\n    title: '',\n    options: ['', ''],\n    duration: 60\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (provider) {\n      const contractInstance = new ethers.Contract(\"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\", abi, provider);\n      setContract(contractInstance);\n    }\n  }, [provider]);\n  const createPoll = async () => {\n    if (!contract) return;\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      const tx = await connectedContract.createPoll(newPoll.title, newPoll.options.filter(opt => opt !== ''), newPoll.duration);\n      await tx.wait();\n      setNewPoll({\n        title: '',\n        options: ['', ''],\n        duration: 60\n      });\n      fetchPolls(); // Refresh polls\n    } catch (error) {\n      console.error('Error creating poll:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const castVote = async (pollId, optionIndex) => {\n    if (!contract) return;\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      const tx = await connectedContract.vote(pollId, optionIndex);\n      await tx.wait();\n      fetchPolls(); // Refresh polls\n    } catch (error) {\n      console.error('Error voting:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPolls = async () => {\n    if (!contract) return;\n    try {\n      const pollCount = await contract.pollCount();\n      const pollsData = [];\n      for (let i = 0; i < pollCount; i++) {\n        const details = await contract.getPollDetails(i);\n        const results = await contract.getPollResults(i);\n        pollsData.push({\n          ...details,\n          results\n        });\n      }\n      setPolls(pollsData);\n    } catch (error) {\n      console.error('Error fetching polls:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPoll.title,\n        onChange: e => setNewPoll({\n          ...newPoll,\n          title: e.target.value\n        }),\n        placeholder: \"Poll Title\",\n        className: \"w-full p-2 mb-4 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), newPoll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option,\n        onChange: e => {\n          const newOptions = [...newPoll.options];\n          newOptions[index] = e.target.value;\n          setNewPoll({\n            ...newPoll,\n            options: newOptions\n          });\n        },\n        placeholder: `Option ${index + 1}`,\n        className: \"w-full p-2 mb-2 border rounded\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNewPoll({\n          ...newPoll,\n          options: [...newPoll.options, '']\n        }),\n        className: \"bg-gray-500 text-white px-4 py-2 rounded mr-2\",\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPoll,\n        disabled: loading,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Active Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), polls.map((poll, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold\",\n          children: poll.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: poll.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => castVote(poll.pollId, optIndex),\n            className: \"bg-blue-100 hover:bg-blue-200 px-4 py-2 rounded mr-2 mb-2\",\n            children: [option, \" (\", poll.results[optIndex].toString(), \")\"]\n          }, optIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(VotingSystem, \"hIrzDbIjIy+RGfYvJIKiz/a5HQY=\");\n_c = VotingSystem;\nexport default VotingSystem;\nvar _c;\n$RefreshReg$(_c, \"VotingSystem\");","map":{"version":3,"names":["React","useState","useEffect","ethers","abi","jsxDEV","_jsxDEV","VotingSystem","provider","account","_s","contract","setContract","polls","setPolls","newPoll","setNewPoll","title","options","duration","loading","setLoading","contractInstance","Contract","createPoll","signer","getSigner","connectedContract","connect","tx","filter","opt","wait","fetchPolls","error","console","castVote","pollId","optionIndex","vote","pollCount","pollsData","i","details","getPollDetails","results","getPollResults","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","option","index","newOptions","onClick","disabled","poll","optIndex","toString","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/Votingsystem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport abi from '../abi/VotingSystem.json';\n\nconst VotingSystem = ({ provider, account }) => {\n  const [contract, setContract] = useState(null);\n  const [polls, setPolls] = useState([]);\n  const [newPoll, setNewPoll] = useState({ title: '', options: ['', ''], duration: 60 });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (provider) {\n      const contractInstance = new ethers.Contract(\n        \"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\",\n        abi,\n        provider\n      );\n      setContract(contractInstance);\n    }\n  }, [provider]);\n\n  const createPoll = async () => {\n    if (!contract) return;\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n\n      const tx = await connectedContract.createPoll(\n        newPoll.title,\n        newPoll.options.filter(opt => opt !== ''),\n        newPoll.duration\n      );\n      await tx.wait();\n\n      setNewPoll({ title: '', options: ['', ''], duration: 60 });\n      fetchPolls(); // Refresh polls\n    } catch (error) {\n      console.error('Error creating poll:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const castVote = async (pollId, optionIndex) => {\n    if (!contract) return;\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n\n      const tx = await connectedContract.vote(pollId, optionIndex);\n      await tx.wait();\n      fetchPolls(); // Refresh polls\n    } catch (error) {\n      console.error('Error voting:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPolls = async () => {\n    if (!contract) return;\n    try {\n      const pollCount = await contract.pollCount();\n      const pollsData = [];\n      for (let i = 0; i < pollCount; i++) {\n        const details = await contract.getPollDetails(i);\n        const results = await contract.getPollResults(i);\n        pollsData.push({ ...details, results });\n      }\n      setPolls(pollsData);\n    } catch (error) {\n      console.error('Error fetching polls:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPolls();\n  }, [contract]);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <div className=\"mb-8 bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold mb-4\">Create New Poll</h2>\n        <input\n          type=\"text\"\n          value={newPoll.title}\n          onChange={(e) => setNewPoll({ ...newPoll, title: e.target.value })}\n          placeholder=\"Poll Title\"\n          className=\"w-full p-2 mb-4 border rounded\"\n        />\n        {newPoll.options.map((option, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            value={option}\n            onChange={(e) => {\n              const newOptions = [...newPoll.options];\n              newOptions[index] = e.target.value;\n              setNewPoll({ ...newPoll, options: newOptions });\n            }}\n            placeholder={`Option ${index + 1}`}\n            className=\"w-full p-2 mb-2 border rounded\"\n          />\n        ))}\n        <button\n          onClick={() => setNewPoll({ ...newPoll, options: [...newPoll.options, ''] })}\n          className=\"bg-gray-500 text-white px-4 py-2 rounded mr-2\"\n        >\n          Add Option\n        </button>\n        <button\n          onClick={createPoll}\n          disabled={loading}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Create Poll\n        </button>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold mb-4\">Active Polls</h2>\n        {polls.map((poll, index) => (\n          <div key={index} className=\"border-b py-4\">\n            <h3 className=\"font-bold\">{poll.title}</h3>\n            <div className=\"mt-2\">\n              {poll.options.map((option, optIndex) => (\n                <button\n                  key={optIndex}\n                  onClick={() => castVote(poll.pollId, optIndex)}\n                  className=\"bg-blue-100 hover:bg-blue-200 px-4 py-2 rounded mr-2 mb-2\"\n                >\n                  {option} ({poll.results[optIndex].toString()})\n                </button>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VotingSystem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}