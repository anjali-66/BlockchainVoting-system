{"ast":null,"code":"import { sha256 as noble_sha256 } from \"@noble/hashes/sha256\";\nimport { hexToUint8Array, isHex, uint8ArrayToHex } from \"../encoding/hex.js\";\n/**\n * Calculates the SHA256 hash of the given value.\n * @param value - The value to hash. It can be either a hexadecimal string or a Uint8Array.\n * @param to - (Optional) The desired output format of the hash. Defaults to 'hex'.\n * @returns The SHA256 hash of the value in the specified format.\n * @example\n * ```ts\n * import { sha256 } from \"thirdweb/utils\";\n * const hash = sha256(\"0x1234\");\n * ```\n * @utils\n */\nexport function sha256(value, to) {\n  const bytes = noble_sha256(isHex(value, {\n    strict: false\n  }) ? hexToUint8Array(value) : value);\n  if (to === \"bytes\") {\n    return bytes;\n  }\n  return uint8ArrayToHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}