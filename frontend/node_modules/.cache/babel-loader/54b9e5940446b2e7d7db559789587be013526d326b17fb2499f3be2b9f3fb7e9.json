{"ast":null,"code":"import { LruMap } from \"./caching/lru.js\";\nimport { stringToBytes } from \"./encoding/to-bytes.js\";\nimport { sha256 } from \"./hashing/sha256.js\";\nconst cache = new LruMap(4096);\n/**\n * @param secretKey - the secret key to compute the client id from\n * @returns the 32 char hex client id\n * @internal\n */\nexport function computeClientIdFromSecretKey(secretKey) {\n  if (cache.has(secretKey)) {\n    return cache.get(secretKey);\n  }\n  // we slice off the leading `0x` and then take the first 32 chars\n  const cId = sha256(stringToBytes(secretKey)).slice(2, 34);\n  cache.set(secretKey, cId);\n  return cId;\n}\n//# sourceMappingURL=client-id.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}