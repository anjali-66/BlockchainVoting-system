{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport * as RadixTooltip from \"@radix-ui/react-tooltip\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, radius, shadow, spacing } from \"../../../core/design-system/index.js\";\n/**\n * @internal\n */\nexport const ToolTip = props => {\n  return _jsx(RadixTooltip.Provider, {\n    delayDuration: 200,\n    children: _jsxs(RadixTooltip.Root, {\n      children: [_jsx(RadixTooltip.Trigger, {\n        asChild: true,\n        children: props.children\n      }), _jsx(RadixTooltip.Portal, {\n        children: _jsxs(TooltipContent, {\n          sideOffset: props.sideOffset || 6,\n          align: props.align || \"center\",\n          side: props.side || \"top\",\n          children: [props.tip, _jsx(TooltipArrow, {})]\n        })\n      })]\n    })\n  });\n};\nconst slideUpAndFade = keyframes`\nfrom {\n  opacity: 0;\n  transform: translateY(2px);\n}\nto {\n  opacity: 1;\n  transform: translateY(0);\n}\n`;\nconst TooltipContent = /* @__PURE__ */(() => styled(RadixTooltip.Content)(_ => {\n  const theme = useCustomTheme();\n  return {\n    background: theme.colors.tooltipBg,\n    color: theme.colors.tooltipText,\n    borderRadius: radius.sm,\n    padding: `${spacing.xs} ${spacing.sm}`,\n    fontSize: fontSize.sm,\n    boxShadow: shadow.sm,\n    userSelect: \"none\",\n    willChange: \"transform, opacity\",\n    animation: `${slideUpAndFade} 200ms cubic-bezier(0.16, 1, 0.3, 1)`,\n    zIndex: 999999999999999,\n    maxWidth: \"300px\",\n    lineHeight: 1.5\n  };\n}))();\nconst TooltipArrow = /* @__PURE__ */(() => styled(RadixTooltip.Arrow)(() => {\n  const theme = useCustomTheme();\n  return {\n    fill: theme.colors.tooltipBg\n  };\n}))();\n//# sourceMappingURL=Tooltip.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}