{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useConnectedWallets } from \"../../../../core/hooks/wallets/useConnectedWallets.js\";\nimport { getDefaultWallets } from \"../../../wallets/defaultWallets.js\";\nimport { ConnectModalContent } from \"../Modal/ConnectModalContent.js\";\nimport { useSetupScreen } from \"../Modal/screen.js\";\nexport function WalletSwitcherConnectionScreen(props) {\n  const connectedWallets = useConnectedWallets();\n  const wallets = props.wallets || getDefaultWallets({\n    appMetadata: props.appMetadata,\n    chains: props.chains\n  }).filter(w => w.id !== \"inApp\");\n  const screenSetup = useSetupScreen({\n    size: \"compact\",\n    welcomeScreen: undefined,\n    wallets: wallets\n  });\n  return _jsx(ConnectModalContent, {\n    accountAbstraction: props.accountAbstraction,\n    auth: undefined,\n    chain: props.chain,\n    chains: props.chains,\n    client: props.client,\n    connectLocale: props.connectLocale,\n    hideHeader: props.isEmbed,\n    isOpen: true,\n    meta: {\n      showThirdwebBranding: false\n    },\n    onClose: () => {},\n    onConnect: w => {\n      props.onSelect(w);\n      props.onBack();\n    },\n    recommendedWallets: props.recommendedWallets,\n    screenSetup: screenSetup,\n    welcomeScreen: undefined,\n    wallets: wallets,\n    setModalVisibility: () => {},\n    shouldSetActive: false,\n    showAllWallets: props.showAllWallets,\n    size: \"compact\",\n    walletConnect: props.walletConnect,\n    modalHeader: {\n      title: \"Connect\",\n      onBack: props.onBack\n    },\n    walletIdsToHide: connectedWallets.map(x => x.id)\n  });\n}\n//# sourceMappingURL=WalletSwitcherConnectionScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}