{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getContract } from \"./blockchain\";\nimport { providers, utils } from 'ethers';\nimport { injected } from './wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [polls, setPolls] = useState([]);\n  const [newPoll, setNewPoll] = useState({\n    title: \"\",\n    options: [],\n    duration: 0\n  });\n  const [pollResults, setPollResults] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ethereum Sepolia Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), !active ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected Account: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getAccountBalance,\n          children: \"Get Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Poll Title\",\n        value: newPoll.title,\n        onChange: e => setNewPoll({\n          ...newPoll,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Options (comma-separated)\",\n        value: newPoll.options.join(\", \"),\n        onChange: e => setNewPoll({\n          ...newPoll,\n          options: e.target.value.split(\",\").map(opt => opt.trim())\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Duration (minutes)\",\n        value: newPoll.duration,\n        onChange: e => setNewPoll({\n          ...newPoll,\n          duration: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPoll,\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: poll.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Creator: \", poll.creator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ends: \", new Date(poll.endTime * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: poll.options && Array.isArray(poll.options) ? poll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => voteForOption(poll.id, index),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No options available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchPollResults(poll.id),\n          children: \"View Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), pollResults[poll.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), pollResults[poll.id].map((votes, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [poll.options[index], \": \", votes, \" votes\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iXk/pSbfP05LYhdvGYFOxf9VlT4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getContract","providers","utils","injected","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","contract","setContract","polls","setPolls","newPoll","setNewPoll","title","options","duration","pollResults","setPollResults","children","fileName","_jsxFileName","lineNumber","columnNumber","active","onClick","connectWallet","disconnectWallet","account","getAccountBalance","type","placeholder","value","onChange","e","target","join","split","map","opt","trim","parseInt","createPoll","poll","creator","Date","endTime","toLocaleString","Array","isArray","option","index","voteForOption","id","fetchPollResults","votes","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getContract } from \"./blockchain\";\nimport { providers, utils } from 'ethers';\nimport { injected } from './wallet';\n\nconst App = () => {\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [contract, setContract] = useState(null);\n    const [polls, setPolls] = useState([]);\n    const [newPoll, setNewPoll] = useState({ title: \"\", options: [], duration: 0 });\n    const [pollResults, setPollResults] = useState({});\n\n    return (\n        <div>\n            <h1>Blockchain Voting System</h1>\n            <div>\n                <h1>Ethereum Sepolia Connection</h1>\n                {!active ? (\n                    <button onClick={connectWallet}>Connect Wallet</button>\n                ) : (\n                    <button onClick={disconnectWallet}>Disconnect Wallet</button>\n                )}\n                {active && (\n                    <div>\n                        <p>Connected Account: {account}</p>\n                        <button onClick={getAccountBalance}>Get Balance</button>\n                    </div>\n                )}\n            </div>\n            <div>\n                <h2>Create a Poll</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Poll Title\"\n                    value={newPoll.title}\n                    onChange={(e) => setNewPoll({ ...newPoll, title: e.target.value })}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Options (comma-separated)\"\n                    value={newPoll.options.join(\", \")}\n                    onChange={(e) =>\n                        setNewPoll({\n                            ...newPoll,\n                            options: e.target.value.split(\",\").map((opt) => opt.trim()),\n                        })\n                    }\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"Duration (minutes)\"\n                    value={newPoll.duration}\n                    onChange={(e) =>\n                        setNewPoll({ ...newPoll, duration: parseInt(e.target.value) })\n                    }\n                />\n                <button onClick={createPoll}>Create Poll</button>\n            </div>\n            <div>\n                <h2>Available Polls</h2>\n                {polls.map((poll) => (\n                    <div key={poll.id}>\n                        <h3>{poll.title}</h3>\n                        <p>Creator: {poll.creator}</p>\n                        <p>Ends: {new Date(poll.endTime * 1000).toLocaleString()}</p>\n                        <div>\n                            {(poll.options && Array.isArray(poll.options)) ? (\n                                poll.options.map((option, index) => (\n                                    <button\n                                        key={index}\n                                        onClick={() => voteForOption(poll.id, index)}\n                                    >\n                                        {option}\n                                    </button>\n                                ))\n                            ) : (\n                                <p>No options available</p>\n                            )}\n                        </div>\n                        <button onClick={() => fetchPollResults(poll.id)}>View Results</button>\n                        {pollResults[poll.id] && (\n                            <div>\n                                <h4>Results</h4>\n                                {pollResults[poll.id].map((votes, index) => (\n                                    <p key={index}>\n                                        {poll.options[index]}: {votes} votes\n                                    </p>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,EAAEC,KAAK,QAAQ,QAAQ;AACzC,SAASC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EAC/E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,oBACIO,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnC,CAACC,MAAM,gBACJrB,OAAA;QAAQsB,OAAO,EAAEC,aAAc;QAAAP,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEvDpB,OAAA;QAAQsB,OAAO,EAAEE,gBAAiB;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC/D,EACAC,MAAM,iBACHrB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,GAAG,qBAAmB,EAACS,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCpB,OAAA;UAAQsB,OAAO,EAAEI,iBAAkB;UAAAV,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpB,OAAA;QACI2B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAEpB,OAAO,CAACE,KAAM;QACrBmB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEE,KAAK,EAAEoB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACFpB,OAAA;QACI2B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,2BAA2B;QACvCC,KAAK,EAAEpB,OAAO,CAACG,OAAO,CAACqB,IAAI,CAAC,IAAI,CAAE;QAClCH,QAAQ,EAAGC,CAAC,IACRrB,UAAU,CAAC;UACP,GAAGD,OAAO;UACVG,OAAO,EAAEmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;QAC9D,CAAC;MACJ;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACFpB,OAAA;QACI2B,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEpB,OAAO,CAACI,QAAS;QACxBiB,QAAQ,EAAGC,CAAC,IACRrB,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEI,QAAQ,EAAEyB,QAAQ,CAACP,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE,CAAC;MAChE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACFpB,OAAA;QAAQsB,OAAO,EAAEiB,UAAW;QAAAvB,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBb,KAAK,CAAC4B,GAAG,CAAEK,IAAI,iBACZxC,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,EAAKwB,IAAI,CAAC7B;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAgB,QAAA,GAAG,WAAS,EAACwB,IAAI,CAACC,OAAO;QAAA;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BpB,OAAA;UAAAgB,QAAA,GAAG,QAAM,EAAC,IAAI0B,IAAI,CAACF,IAAI,CAACG,OAAO,GAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7DpB,OAAA;UAAAgB,QAAA,EACMwB,IAAI,CAAC5B,OAAO,IAAIiC,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC5B,OAAO,CAAC,GACzC4B,IAAI,CAAC5B,OAAO,CAACuB,GAAG,CAAC,CAACY,MAAM,EAAEC,KAAK,kBAC3BhD,OAAA;YAEIsB,OAAO,EAAEA,CAAA,KAAM2B,aAAa,CAACT,IAAI,CAACU,EAAE,EAAEF,KAAK,CAAE;YAAAhC,QAAA,EAE5C+B;UAAM,GAHFC,KAAK;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIN,CACX,CAAC,gBAEFpB,OAAA;YAAAgB,QAAA,EAAG;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAC7B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACNpB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAM6B,gBAAgB,CAACX,IAAI,CAACU,EAAE,CAAE;UAAAlC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtEN,WAAW,CAAC0B,IAAI,CAACU,EAAE,CAAC,iBACjBlD,OAAA;UAAAgB,QAAA,gBACIhB,OAAA;YAAAgB,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACfN,WAAW,CAAC0B,IAAI,CAACU,EAAE,CAAC,CAACf,GAAG,CAAC,CAACiB,KAAK,EAAEJ,KAAK,kBACnChD,OAAA;YAAAgB,QAAA,GACKwB,IAAI,CAAC5B,OAAO,CAACoC,KAAK,CAAC,EAAC,IAAE,EAACI,KAAK,EAAC,QAClC;UAAA,GAFQJ,KAAK;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR;MAAA,GA5BKoB,IAAI,CAACU,EAAE;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BZ,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CA1FID,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AA4FT,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}