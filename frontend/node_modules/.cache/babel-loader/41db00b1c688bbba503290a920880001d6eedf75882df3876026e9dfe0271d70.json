{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { CheckCircledIcon } from \"@radix-ui/react-icons\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { useEffect, useRef } from \"react\";\nimport { iconSize } from \"../../../../../../core/design-system/index.js\";\nimport { useBuyWithCryptoStatus } from \"../../../../../../core/hooks/pay/useBuyWithCryptoStatus.js\";\nimport { invalidateWalletBalance } from \"../../../../../../core/providers/invalidateWalletBalance.js\";\nimport { Spacer } from \"../../../../components/Spacer.js\";\nimport { Spinner } from \"../../../../components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../../../components/basic.js\";\nimport { Button } from \"../../../../components/buttons.js\";\nimport { Text } from \"../../../../components/text.js\";\nimport { AccentFailIcon } from \"../../../icons/AccentFailIcon.js\";\nimport { SwapTxDetailsTable } from \"../pay-transactions/SwapDetailsScreen.js\";\nexport function SwapStatusScreen(props) {\n  const {\n    onSuccess\n  } = props;\n  const swapStatus = useBuyWithCryptoStatus({\n    client: props.client,\n    transactionHash: props.swapTxHash\n  });\n  let uiStatus = \"pending\";\n  if (swapStatus.data?.status === \"COMPLETED\") {\n    uiStatus = \"success\";\n  } else if (swapStatus.data?.status === \"FAILED\") {\n    uiStatus = \"failed\";\n  }\n  if (swapStatus.data?.status === \"COMPLETED\" && swapStatus.data?.subStatus === \"PARTIAL_SUCCESS\") {\n    uiStatus = \"partialSuccess\";\n  }\n  const purchaseCbCalled = useRef(false);\n  useEffect(() => {\n    if (purchaseCbCalled.current || !onSuccess) {\n      return;\n    }\n    if (swapStatus.data?.status === \"COMPLETED\") {\n      purchaseCbCalled.current = true;\n      onSuccess(swapStatus.data);\n    }\n  }, [onSuccess, swapStatus]);\n  const queryClient = useQueryClient();\n  const balanceInvalidated = useRef(false);\n  useEffect(() => {\n    if ((uiStatus === \"success\" || uiStatus === \"partialSuccess\") && !balanceInvalidated.current) {\n      balanceInvalidated.current = true;\n      invalidateWalletBalance(queryClient);\n    }\n  }, [queryClient, uiStatus]);\n  const swapDetails = swapStatus.data && swapStatus.data.status !== \"NOT_FOUND\" ? _jsx(SwapTxDetailsTable, {\n    status: swapStatus.data,\n    type: \"status\",\n    hideStatusRow: true,\n    client: props.client\n  }) : props.quote ? _jsx(SwapTxDetailsTable, {\n    type: \"quote\",\n    quote: props.quote,\n    client: props.client\n  }) : null;\n  return _jsx(Container, {\n    animate: \"fadein\",\n    children: _jsxs(Container, {\n      p: \"lg\",\n      children: [_jsx(ModalHeader, {\n        title: props.title,\n        onBack: props.onBack\n      }), _jsx(Spacer, {\n        y: \"sm\"\n      }), uiStatus === \"success\" && _jsxs(_Fragment, {\n        children: [_jsx(Spacer, {\n          y: \"md\"\n        }), _jsxs(Container, {\n          color: \"success\",\n          flex: \"column\",\n          center: \"x\",\n          children: [_jsx(CheckCircledIcon, {\n            width: iconSize[\"3xl\"],\n            height: iconSize[\"3xl\"]\n          }), _jsx(Spacer, {\n            y: \"sm\"\n          }), _jsx(Text, {\n            color: \"primaryText\",\n            size: \"lg\",\n            children: \"Buy Complete\"\n          })]\n        }), _jsx(Spacer, {\n          y: \"xl\"\n        }), swapDetails, _jsx(Spacer, {\n          y: \"sm\"\n        }), !props.isEmbed && _jsx(Button, {\n          variant: \"accent\",\n          fullWidth: true,\n          onClick: props.onDone,\n          children: props.transactionMode ? \"Continue Transaction\" : \"Done\"\n        })]\n      }), uiStatus === \"partialSuccess\" && swapStatus.data?.status !== \"NOT_FOUND\" && swapStatus.data?.destination && _jsxs(_Fragment, {\n        children: [_jsx(Spacer, {\n          y: \"lg\"\n        }), _jsxs(Container, {\n          color: \"success\",\n          flex: \"column\",\n          center: \"x\",\n          children: [_jsx(AccentFailIcon, {\n            size: iconSize[\"3xl\"]\n          }), _jsx(Spacer, {\n            y: \"xl\"\n          }), _jsx(Text, {\n            color: \"primaryText\",\n            size: \"lg\",\n            children: \"Incomplete\"\n          }), _jsx(Spacer, {\n            y: \"sm\"\n          }), _jsxs(Text, {\n            size: \"sm\",\n            color: \"danger\",\n            children: [\"Expected \", swapStatus.data.quote.toToken.symbol, \", Got\", \" \", swapStatus.data.destination.token.symbol, \" instead\"]\n          })]\n        }), _jsx(Spacer, {\n          y: \"xl\"\n        }), swapDetails]\n      }), uiStatus === \"failed\" && _jsxs(_Fragment, {\n        children: [_jsx(Spacer, {\n          y: \"xxl\"\n        }), _jsxs(Container, {\n          flex: \"column\",\n          children: [_jsxs(Container, {\n            flex: \"column\",\n            center: \"both\",\n            children: [_jsx(AccentFailIcon, {\n              size: iconSize[\"3xl\"]\n            }), _jsx(Spacer, {\n              y: \"xl\"\n            }), _jsx(Text, {\n              color: \"primaryText\",\n              size: \"lg\",\n              children: \"Transaction Failed\"\n            }), _jsx(Spacer, {\n              y: \"sm\"\n            }), _jsxs(Text, {\n              size: \"sm\",\n              children: [\"Your transaction \", `couldn't`, \" be processed\"]\n            })]\n          }), _jsx(Spacer, {\n            y: \"md\"\n          }), _jsx(Button, {\n            variant: \"accent\",\n            fullWidth: true,\n            onClick: props.onTryAgain,\n            children: \"Try Again\"\n          }), _jsx(Spacer, {\n            y: \"xl\"\n          }), swapDetails]\n        })]\n      }), uiStatus === \"pending\" && _jsxs(_Fragment, {\n        children: [_jsx(Spacer, {\n          y: \"xl\"\n        }), _jsxs(Container, {\n          flex: \"column\",\n          animate: \"fadein\",\n          center: \"both\",\n          children: [_jsx(\"div\", {\n            style: {\n              position: \"relative\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            children: _jsx(Spinner, {\n              size: \"3xl\",\n              color: \"accentText\"\n            })\n          }), _jsx(Spacer, {\n            y: \"lg\"\n          }), _jsx(Text, {\n            color: \"primaryText\",\n            size: \"lg\",\n            children: \"Buy Pending\"\n          })]\n        }), _jsx(Spacer, {\n          y: \"xxl\"\n        }), swapDetails]\n      })]\n    })\n  });\n}\n//# sourceMappingURL=SwapStatusScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}