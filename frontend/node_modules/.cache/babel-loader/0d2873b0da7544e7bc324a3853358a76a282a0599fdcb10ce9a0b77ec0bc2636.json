{"ast":null,"code":"import { useQuery } from \"@tanstack/react-query\";\nimport { getContract } from \"../../../../contract/contract.js\";\n/**\n * @internal\n */\nexport function useTokenInfo(options) {\n  const {\n    chain,\n    tokenAddress,\n    client\n  } = options;\n  return useQuery({\n    queryKey: [\"tokenInfo\", chain?.id || -1, {\n      tokenAddress\n    }],\n    queryFn: async () => {\n      // erc20 case\n      if (tokenAddress) {\n        const {\n          getCurrencyMetadata\n        } = await import(\"../../../../extensions/erc20/read/getCurrencyMetadata.js\");\n        const result = await getCurrencyMetadata({\n          contract: getContract({\n            client,\n            chain,\n            address: tokenAddress\n          })\n        });\n        return result;\n      }\n      const {\n        getChainDecimals,\n        getChainNativeCurrencyName,\n        getChainSymbol\n      } = await import(\"../../../../chains/utils.js\");\n      const [nativeSymbol, nativeDecimals, nativeName] = await Promise.all([getChainSymbol(chain), getChainDecimals(chain), getChainNativeCurrencyName(chain)]);\n      const result = {\n        decimals: nativeDecimals,\n        symbol: nativeSymbol,\n        name: nativeName\n      };\n      return result;\n    },\n    enabled: !!chain && !!client\n  });\n}\n//# sourceMappingURL=useTokenInfo.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}