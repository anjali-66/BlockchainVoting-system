{"ast":null,"code":"var Bt = Object.defineProperty,\n  At = Object.defineProperties;\nvar kt = Object.getOwnPropertyDescriptors;\nvar Y = Object.getOwnPropertySymbols;\nvar gt = Object.prototype.hasOwnProperty,\n  Et = Object.prototype.propertyIsEnumerable;\nvar vt = (r, s, e) => s in r ? Bt(r, s, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: e\n  }) : r[s] = e,\n  St = (r, s) => {\n    for (var e in s || (s = {})) gt.call(s, e) && vt(r, e, s[e]);\n    if (Y) for (var e of Y(s)) Et.call(s, e) && vt(r, e, s[e]);\n    return r;\n  },\n  bt = (r, s) => At(r, kt(s));\nvar Pt = (r, s) => {\n  var e = {};\n  for (var u in r) gt.call(r, u) && s.indexOf(u) < 0 && (e[u] = r[u]);\n  if (r != null && Y) for (var u of Y(r)) s.indexOf(u) < 0 && Et.call(r, u) && (e[u] = r[u]);\n  return e;\n};\nimport * as n from \"react\";\nfunction ht(r) {\n  let s = setTimeout(r, 0),\n    e = setTimeout(r, 10),\n    u = setTimeout(r, 50);\n  return [s, e, u];\n}\nimport * as U from \"react\";\nfunction _t(r) {\n  let s = U.useRef();\n  return U.useEffect(() => {\n    s.current = r;\n  }), s.current;\n}\nimport * as S from \"react\";\nvar Ot = 18,\n  wt = 40,\n  Gt = `${wt}px`,\n  xt = [\"[data-lastpass-icon-root]\", \"com-1password-button\", \"[data-dashlanecreated]\", '[style$=\"2147483647 !important;\"]'].join(\",\");\nfunction Tt({\n  containerRef: r,\n  inputRef: s,\n  pushPasswordManagerStrategy: e,\n  isFocused: u\n}) {\n  let [P, D] = S.useState(!1),\n    [G, H] = S.useState(!1),\n    [F, W] = S.useState(!1),\n    Z = S.useMemo(() => e === \"none\" ? !1 : (e === \"increase-width\" || e === \"experimental-no-flickering\") && P && G, [P, G, e]),\n    T = S.useCallback(() => {\n      let f = r.current,\n        h = s.current;\n      if (!f || !h || F || e === \"none\") return;\n      let a = f,\n        B = a.getBoundingClientRect().left + a.offsetWidth,\n        A = a.getBoundingClientRect().top + a.offsetHeight / 2,\n        z = B - Ot,\n        q = A;\n      document.querySelectorAll(xt).length === 0 && document.elementFromPoint(z, q) === f || (D(!0), W(!0));\n    }, [r, s, F, e]);\n  return S.useEffect(() => {\n    let f = r.current;\n    if (!f || e === \"none\") return;\n    function h() {\n      let A = window.innerWidth - f.getBoundingClientRect().right;\n      H(A >= wt);\n    }\n    h();\n    let a = setInterval(h, 1e3);\n    return () => {\n      clearInterval(a);\n    };\n  }, [r, e]), S.useEffect(() => {\n    let f = u || document.activeElement === s.current;\n    if (e === \"none\" || !f) return;\n    let h = setTimeout(T, 0),\n      a = setTimeout(T, 2e3),\n      B = setTimeout(T, 5e3),\n      A = setTimeout(() => {\n        W(!0);\n      }, 6e3);\n    return () => {\n      clearTimeout(h), clearTimeout(a), clearTimeout(B), clearTimeout(A);\n    };\n  }, [s, u, e, T]), {\n    hasPWMBadge: P,\n    willPushPWMBadge: Z,\n    PWM_BADGE_SPACE_WIDTH: Gt\n  };\n}\nvar jt = n.createContext({}),\n  Lt = n.forwardRef((A, B) => {\n    var z = A,\n      {\n        value: r,\n        onChange: s,\n        maxLength: e,\n        textAlign: u = \"left\",\n        pattern: P,\n        placeholder: D,\n        inputMode: G = \"numeric\",\n        onComplete: H,\n        pushPasswordManagerStrategy: F = \"increase-width\",\n        pasteTransformer: W,\n        containerClassName: Z,\n        noScriptCSSFallback: T = Nt,\n        render: f,\n        children: h\n      } = z,\n      a = Pt(z, [\"value\", \"onChange\", \"maxLength\", \"textAlign\", \"pattern\", \"placeholder\", \"inputMode\", \"onComplete\", \"pushPasswordManagerStrategy\", \"pasteTransformer\", \"containerClassName\", \"noScriptCSSFallback\", \"render\", \"children\"]);\n    var X, lt, ut, dt, ft;\n    let [q, nt] = n.useState(typeof a.defaultValue == \"string\" ? a.defaultValue : \"\"),\n      i = r != null ? r : q,\n      I = _t(i),\n      x = n.useCallback(t => {\n        s == null || s(t), nt(t);\n      }, [s]),\n      m = n.useMemo(() => P ? typeof P == \"string\" ? new RegExp(P) : P : null, [P]),\n      l = n.useRef(null),\n      K = n.useRef(null),\n      J = n.useRef({\n        value: i,\n        onChange: x,\n        isIOS: typeof window != \"undefined\" && ((lt = (X = window == null ? void 0 : window.CSS) == null ? void 0 : X.supports) == null ? void 0 : lt.call(X, \"-webkit-touch-callout\", \"none\"))\n      }),\n      V = n.useRef({\n        prev: [(ut = l.current) == null ? void 0 : ut.selectionStart, (dt = l.current) == null ? void 0 : dt.selectionEnd, (ft = l.current) == null ? void 0 : ft.selectionDirection]\n      });\n    n.useImperativeHandle(B, () => l.current, []), n.useEffect(() => {\n      let t = l.current,\n        o = K.current;\n      if (!t || !o) return;\n      J.current.value !== t.value && J.current.onChange(t.value), V.current.prev = [t.selectionStart, t.selectionEnd, t.selectionDirection];\n      function d() {\n        if (document.activeElement !== t) {\n          L(null), N(null);\n          return;\n        }\n        let c = t.selectionStart,\n          b = t.selectionEnd,\n          mt = t.selectionDirection,\n          v = t.maxLength,\n          C = t.value,\n          _ = V.current.prev,\n          g = -1,\n          E = -1,\n          w;\n        if (C.length !== 0 && c !== null && b !== null) {\n          let Dt = c === b,\n            Ht = c === C.length && C.length < v;\n          if (Dt && !Ht) {\n            let y = c;\n            if (y === 0) g = 0, E = 1, w = \"forward\";else if (y === v) g = y - 1, E = y, w = \"backward\";else if (v > 1 && C.length > 1) {\n              let et = 0;\n              if (_[0] !== null && _[1] !== null) {\n                w = y < _[1] ? \"backward\" : \"forward\";\n                let Wt = _[0] === _[1] && _[0] < v;\n                w === \"backward\" && !Wt && (et = -1);\n              }\n              g = et + y, E = et + y + 1;\n            }\n          }\n          g !== -1 && E !== -1 && g !== E && l.current.setSelectionRange(g, E, w);\n        }\n        let pt = g !== -1 ? g : c,\n          Rt = E !== -1 ? E : b,\n          yt = w != null ? w : mt;\n        L(pt), N(Rt), V.current.prev = [pt, Rt, yt];\n      }\n      if (document.addEventListener(\"selectionchange\", d, {\n        capture: !0\n      }), d(), document.activeElement === t && Q(!0), !document.getElementById(\"input-otp-style\")) {\n        let c = document.createElement(\"style\");\n        if (c.id = \"input-otp-style\", document.head.appendChild(c), c.sheet) {\n          let b = \"background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;\";\n          $(c.sheet, \"[data-input-otp]::selection { background: transparent !important; color: transparent !important; }\"), $(c.sheet, `[data-input-otp]:autofill { ${b} }`), $(c.sheet, `[data-input-otp]:-webkit-autofill { ${b} }`), $(c.sheet, \"@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }\"), $(c.sheet, \"[data-input-otp] + * { pointer-events: all !important; }\");\n        }\n      }\n      let p = () => {\n        o && o.style.setProperty(\"--root-height\", `${t.clientHeight}px`);\n      };\n      p();\n      let R = new ResizeObserver(p);\n      return R.observe(t), () => {\n        document.removeEventListener(\"selectionchange\", d, {\n          capture: !0\n        }), R.disconnect();\n      };\n    }, []);\n    let [ot, rt] = n.useState(!1),\n      [j, Q] = n.useState(!1),\n      [M, L] = n.useState(null),\n      [k, N] = n.useState(null);\n    n.useEffect(() => {\n      ht(() => {\n        var p, R, c, b;\n        (p = l.current) == null || p.dispatchEvent(new Event(\"input\"));\n        let t = (R = l.current) == null ? void 0 : R.selectionStart,\n          o = (c = l.current) == null ? void 0 : c.selectionEnd,\n          d = (b = l.current) == null ? void 0 : b.selectionDirection;\n        t !== null && o !== null && (L(t), N(o), V.current.prev = [t, o, d]);\n      });\n    }, [i, j]), n.useEffect(() => {\n      I !== void 0 && i !== I && I.length < e && i.length === e && (H == null || H(i));\n    }, [e, H, I, i]);\n    let O = Tt({\n        containerRef: K,\n        inputRef: l,\n        pushPasswordManagerStrategy: F,\n        isFocused: j\n      }),\n      st = n.useCallback(t => {\n        let o = t.currentTarget.value.slice(0, e);\n        if (o.length > 0 && m && !m.test(o)) {\n          t.preventDefault();\n          return;\n        }\n        typeof I == \"string\" && o.length < I.length && document.dispatchEvent(new Event(\"selectionchange\")), x(o);\n      }, [e, x, I, m]),\n      at = n.useCallback(() => {\n        var t;\n        if (l.current) {\n          let o = Math.min(l.current.value.length, e - 1),\n            d = l.current.value.length;\n          (t = l.current) == null || t.setSelectionRange(o, d), L(o), N(d);\n        }\n        Q(!0);\n      }, [e]),\n      ct = n.useCallback(t => {\n        var g, E;\n        let o = l.current;\n        if (!W && (!J.current.isIOS || !t.clipboardData || !o)) return;\n        let d = t.clipboardData.getData(\"text/plain\"),\n          p = W ? W(d) : d;\n        console.log({\n          _content: d,\n          content: p\n        }), t.preventDefault();\n        let R = (g = l.current) == null ? void 0 : g.selectionStart,\n          c = (E = l.current) == null ? void 0 : E.selectionEnd,\n          v = (R !== c ? i.slice(0, R) + p + i.slice(c) : i.slice(0, R) + p + i.slice(R)).slice(0, e);\n        if (v.length > 0 && m && !m.test(v)) return;\n        o.value = v, x(v);\n        let C = Math.min(v.length, e - 1),\n          _ = v.length;\n        o.setSelectionRange(C, _), L(C), N(_);\n      }, [e, x, m, i]),\n      It = n.useMemo(() => ({\n        position: \"relative\",\n        cursor: a.disabled ? \"default\" : \"text\",\n        userSelect: \"none\",\n        WebkitUserSelect: \"none\",\n        pointerEvents: \"none\"\n      }), [a.disabled]),\n      it = n.useMemo(() => ({\n        position: \"absolute\",\n        inset: 0,\n        width: O.willPushPWMBadge ? `calc(100% + ${O.PWM_BADGE_SPACE_WIDTH})` : \"100%\",\n        clipPath: O.willPushPWMBadge ? `inset(0 ${O.PWM_BADGE_SPACE_WIDTH} 0 0)` : void 0,\n        height: \"100%\",\n        display: \"flex\",\n        textAlign: u,\n        opacity: \"1\",\n        color: \"transparent\",\n        pointerEvents: \"all\",\n        background: \"transparent\",\n        caretColor: \"transparent\",\n        border: \"0 solid transparent\",\n        outline: \"0 solid transparent\",\n        boxShadow: \"none\",\n        lineHeight: \"1\",\n        letterSpacing: \"-.5em\",\n        fontSize: \"var(--root-height)\",\n        fontFamily: \"monospace\",\n        fontVariantNumeric: \"tabular-nums\"\n      }), [O.PWM_BADGE_SPACE_WIDTH, O.willPushPWMBadge, u]),\n      Mt = n.useMemo(() => n.createElement(\"input\", bt(St({\n        autoComplete: a.autoComplete || \"one-time-code\"\n      }, a), {\n        \"data-input-otp\": !0,\n        \"data-input-otp-placeholder-shown\": i.length === 0 || void 0,\n        \"data-input-otp-mss\": M,\n        \"data-input-otp-mse\": k,\n        inputMode: G,\n        pattern: m == null ? void 0 : m.source,\n        \"aria-placeholder\": D,\n        style: it,\n        maxLength: e,\n        value: i,\n        ref: l,\n        onPaste: t => {\n          var o;\n          ct(t), (o = a.onPaste) == null || o.call(a, t);\n        },\n        onChange: st,\n        onMouseOver: t => {\n          var o;\n          rt(!0), (o = a.onMouseOver) == null || o.call(a, t);\n        },\n        onMouseLeave: t => {\n          var o;\n          rt(!1), (o = a.onMouseLeave) == null || o.call(a, t);\n        },\n        onFocus: t => {\n          var o;\n          at(), (o = a.onFocus) == null || o.call(a, t);\n        },\n        onBlur: t => {\n          var o;\n          Q(!1), (o = a.onBlur) == null || o.call(a, t);\n        }\n      })), [st, at, ct, G, it, e, k, M, a, m == null ? void 0 : m.source, i]),\n      tt = n.useMemo(() => ({\n        slots: Array.from({\n          length: e\n        }).map((t, o) => {\n          var c;\n          let d = j && M !== null && k !== null && (M === k && o === M || o >= M && o < k),\n            p = i[o] !== void 0 ? i[o] : null,\n            R = i[0] !== void 0 ? null : (c = D == null ? void 0 : D[o]) != null ? c : null;\n          return {\n            char: p,\n            placeholderChar: R,\n            isActive: d,\n            hasFakeCaret: d && p === null\n          };\n        }),\n        isFocused: j,\n        isHovering: !a.disabled && ot\n      }), [j, ot, e, k, M, a.disabled, i]),\n      Ct = n.useMemo(() => f ? f(tt) : n.createElement(jt.Provider, {\n        value: tt\n      }, h), [h, tt, f]);\n    return n.createElement(n.Fragment, null, T !== null && n.createElement(\"noscript\", null, n.createElement(\"style\", null, T)), n.createElement(\"div\", {\n      ref: K,\n      \"data-input-otp-container\": !0,\n      style: It,\n      className: Z\n    }, Ct, n.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        inset: 0,\n        pointerEvents: \"none\"\n      }\n    }, Mt)));\n  });\nLt.displayName = \"Input\";\nfunction $(r, s) {\n  try {\n    r.insertRule(s);\n  } catch (e) {\n    console.error(\"input-otp could not insert CSS rule:\", s);\n  }\n}\nvar Nt = `\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`;\nvar Kt = \"^\\\\d+$\",\n  Jt = \"^[a-zA-Z]+$\",\n  Qt = \"^[a-zA-Z0-9]+$\";\nexport { Lt as OTPInput, jt as OTPInputContext, Jt as REGEXP_ONLY_CHARS, Kt as REGEXP_ONLY_DIGITS, Qt as REGEXP_ONLY_DIGITS_AND_CHARS };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}