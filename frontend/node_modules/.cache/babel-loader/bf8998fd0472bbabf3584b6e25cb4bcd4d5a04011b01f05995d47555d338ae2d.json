{"ast":null,"code":"// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nimport { walletLogo } from './assets/wallet-logo.js';\nimport { CoinbaseWalletProvider } from './CoinbaseWalletProvider.js';\nimport { VERSION } from './sdk-info.js';\nimport { ScopedLocalStorage } from './core/storage/ScopedLocalStorage.js';\nimport { getFavicon } from './core/type/util.js';\nimport { checkCrossOriginOpenerPolicy } from './util/checkCrossOriginOpenerPolicy.js';\nimport { getCoinbaseInjectedProvider } from './util/provider.js';\nimport { validatePreferences } from './util/validatePreferences.js';\n/**\n * CoinbaseWalletSDK\n *\n * @deprecated CoinbaseWalletSDK is deprecated and will likely be removed in a future major version release.\n * It's recommended to use `createCoinbaseWalletSDK` instead.\n */\nexport class CoinbaseWalletSDK {\n  constructor(metadata) {\n    this.metadata = {\n      appName: metadata.appName || 'Dapp',\n      appLogoUrl: metadata.appLogoUrl || getFavicon(),\n      appChainIds: metadata.appChainIds || []\n    };\n    this.storeLatestVersion();\n    void checkCrossOriginOpenerPolicy();\n  }\n  makeWeb3Provider(preference = {\n    options: 'all'\n  }) {\n    var _a;\n    validatePreferences(preference);\n    const params = {\n      metadata: this.metadata,\n      preference\n    };\n    return (_a = getCoinbaseInjectedProvider(params)) !== null && _a !== void 0 ? _a : new CoinbaseWalletProvider(params);\n  }\n  /**\n   * Official Coinbase Wallet logo for developers to use on their frontend\n   * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n   * @param width Width of the logo (Optional)\n   * @returns SVG Data URI\n   */\n  getCoinbaseWalletLogo(type, width = 240) {\n    return walletLogo(type, width);\n  }\n  storeLatestVersion() {\n    const versionStorage = new ScopedLocalStorage('CBWSDK');\n    versionStorage.setItem('VERSION', VERSION);\n  }\n}\n//# sourceMappingURL=CoinbaseWalletSDK.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}