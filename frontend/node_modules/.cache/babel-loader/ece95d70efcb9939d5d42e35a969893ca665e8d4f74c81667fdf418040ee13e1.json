{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [provider, setProvider] = useState(null);\n  const [active, setActive] = useState(false);\n  const [balance, setBalance] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setWalletAddress(accounts[0]);\n      });\n      window.ethereum.on(\"chainChanged\", chainId => {\n        if (chainId === \"0x111\") {\n          // Sepolia Testnet Chain ID in hex\n          setActive(true);\n        } else {\n          setActive(false);\n          setError(\"Please switch to Sepolia Testnet in MetaMask.\");\n        }\n      });\n    } else {\n      setError(\"MetaMask is not installed. Please install it.\");\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n        setActive(true);\n        const _provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(_provider);\n        setError(\"\"); // Clear any previous errors\n      } catch (error) {\n        setError(\"Failed to connect to wallet. Please try again.\");\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      setError(\"MetaMask is not installed. Please install it.\");\n    }\n  };\n  const disconnectWallet = () => {\n    setWalletAddress(\"\");\n    setActive(false);\n    setBalance(null);\n  };\n  const getAccountBalance = async () => {\n    if (provider && walletAddress) {\n      try {\n        const balanceBigInt = await provider.getBalance(walletAddress);\n        const formattedBalance = ethers.utils.formatEther(balanceBigInt);\n        setBalance(formattedBalance);\n      } catch (error) {\n        setError(\"Failed to fetch balance.\");\n        console.error(\"Failed to fetch balance:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ethereum Sepolia Testnet Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), !active ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected Account: \", walletAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getAccountBalance,\n          children: \"Get Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), balance !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", balance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"A33AW4RVI6n6YN4z+F679Fl9WF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","provider","setProvider","active","setActive","balance","setBalance","error","setError","window","ethereum","on","accounts","chainId","connectWallet","request","method","_provider","providers","Web3Provider","console","disconnectWallet","getAccountBalance","balanceBigInt","getBalance","formattedBalance","utils","formatEther","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [provider, setProvider] = useState(null);\n  const [active, setActive] = useState(false);\n  const [balance, setBalance] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setWalletAddress(accounts[0]);\n      });\n\n      window.ethereum.on(\"chainChanged\", (chainId) => {\n        if (chainId === \"0x111\") { // Sepolia Testnet Chain ID in hex\n          setActive(true);\n        } else {\n          setActive(false);\n          setError(\"Please switch to Sepolia Testnet in MetaMask.\");\n        }\n      });\n    } else {\n      setError(\"MetaMask is not installed. Please install it.\");\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setWalletAddress(accounts[0]);\n        setActive(true);\n\n        const _provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(_provider);\n\n        setError(\"\"); // Clear any previous errors\n      } catch (error) {\n        setError(\"Failed to connect to wallet. Please try again.\");\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      setError(\"MetaMask is not installed. Please install it.\");\n    }\n  };\n\n  const disconnectWallet = () => {\n    setWalletAddress(\"\");\n    setActive(false);\n    setBalance(null);\n  };\n\n  const getAccountBalance = async () => {\n    if (provider && walletAddress) {\n      try {\n        const balanceBigInt = await provider.getBalance(walletAddress);\n        const formattedBalance = ethers.utils.formatEther(balanceBigInt);\n        setBalance(formattedBalance);\n      } catch (error) {\n        setError(\"Failed to fetch balance.\");\n        console.error(\"Failed to fetch balance:\", error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Blockchain Voting System</h1>\n      <div>\n        <h2>Ethereum Sepolia Testnet Connection</h2>\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n        {!active ? (\n          <button onClick={connectWallet}>Connect Wallet</button>\n        ) : (\n          <button onClick={disconnectWallet}>Disconnect Wallet</button>\n        )}\n        {active && (\n          <div>\n            <p>Connected Account: {walletAddress}</p>\n            <button onClick={getAccountBalance}>Get Balance</button>\n            {balance !== null && <p>Balance: {balance} ETH</p>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIgB,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACC,QAAQ,CAACC,EAAE,CAAC,iBAAiB,EAAGC,QAAQ,IAAK;QAClDZ,gBAAgB,CAACY,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;MAEFH,MAAM,CAACC,QAAQ,CAACC,EAAE,CAAC,cAAc,EAAGE,OAAO,IAAK;QAC9C,IAAIA,OAAO,KAAK,OAAO,EAAE;UAAE;UACzBT,SAAS,CAAC,IAAI,CAAC;QACjB,CAAC,MAAM;UACLA,SAAS,CAAC,KAAK,CAAC;UAChBI,QAAQ,CAAC,+CAA+C,CAAC;QAC3D;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLA,QAAQ,CAAC,+CAA+C,CAAC;IAC3D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIL,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAQ,CAACK,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjFhB,gBAAgB,CAACY,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC7BR,SAAS,CAAC,IAAI,CAAC;QAEf,MAAMa,SAAS,GAAG,IAAIvB,MAAM,CAACwB,SAAS,CAACC,YAAY,CAACV,MAAM,CAACC,QAAQ,CAAC;QACpER,WAAW,CAACe,SAAS,CAAC;QAEtBT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdC,QAAQ,CAAC,gDAAgD,CAAC;QAC1DY,OAAO,CAACb,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,MAAM;MACLC,QAAQ,CAAC,+CAA+C,CAAC;IAC3D;EACF,CAAC;EAED,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrB,gBAAgB,CAAC,EAAE,CAAC;IACpBI,SAAS,CAAC,KAAK,CAAC;IAChBE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIrB,QAAQ,IAAIF,aAAa,EAAE;MAC7B,IAAI;QACF,MAAMwB,aAAa,GAAG,MAAMtB,QAAQ,CAACuB,UAAU,CAACzB,aAAa,CAAC;QAC9D,MAAM0B,gBAAgB,GAAG/B,MAAM,CAACgC,KAAK,CAACC,WAAW,CAACJ,aAAa,CAAC;QAChEjB,UAAU,CAACmB,gBAAgB,CAAC;MAC9B,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,QAAQ,CAAC,0BAA0B,CAAC;QACpCY,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAED,oBACEX,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3CzB,KAAK,iBAAIX,OAAA;QAAGqC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAN,QAAA,EAAErB;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChD,CAAC7B,MAAM,gBACNP,OAAA;QAAQuC,OAAO,EAAErB,aAAc;QAAAc,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEvDpC,OAAA;QAAQuC,OAAO,EAAEd,gBAAiB;QAAAO,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC7D,EACA7B,MAAM,iBACLP,OAAA;QAAAgC,QAAA,gBACEhC,OAAA;UAAAgC,QAAA,GAAG,qBAAmB,EAAC7B,aAAa;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCpC,OAAA;UAAQuC,OAAO,EAAEb,iBAAkB;UAAAM,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvD3B,OAAO,KAAK,IAAI,iBAAIT,OAAA;UAAAgC,QAAA,GAAG,WAAS,EAACvB,OAAO,EAAC,MAAI;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CAtFID,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAwFT,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}