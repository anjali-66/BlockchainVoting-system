{"ast":null,"code":"import { toAccount } from '../../accounts/toAccount.js';\nimport { keccak256 } from '../../utils/index.js';\nimport { hashMessage } from '../../utils/signature/hashMessage.js';\nimport { hashTypedData } from '../../utils/signature/hashTypedData.js';\nimport { serializeTransaction } from '../serializers.js';\n/**\n * Creates a [ZKsync Smart Account](https://docs.zksync.io/build/developer-reference/account-abstraction/building-smart-accounts)\n * from a Contract Address and a custom sign function.\n */\nexport function toSmartAccount(parameters) {\n  const {\n    address,\n    sign\n  } = parameters;\n  const account = toAccount({\n    address,\n    sign,\n    async signMessage({\n      message\n    }) {\n      return sign({\n        hash: hashMessage(message)\n      });\n    },\n    async signTransaction(transaction) {\n      const signableTransaction = {\n        ...transaction,\n        from: this.address\n      };\n      return serializeTransaction({\n        ...signableTransaction,\n        customSignature: await sign({\n          hash: keccak256(serializeTransaction(signableTransaction))\n        })\n      });\n    },\n    async signTypedData(typedData) {\n      return sign({\n        hash: hashTypedData(typedData)\n      });\n    }\n  });\n  return {\n    ...account,\n    source: 'smartAccountZksync'\n  };\n}\n//# sourceMappingURL=toSmartAccount.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}