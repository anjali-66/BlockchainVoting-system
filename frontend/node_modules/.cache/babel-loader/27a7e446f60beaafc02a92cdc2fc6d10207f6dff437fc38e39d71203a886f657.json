{"ast":null,"code":"\"use client\";\n\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, radius, spacing } from \"../../../core/design-system/index.js\";\nimport { StyledButton } from \"../design-system/elements.js\";\nexport const Button = /* @__PURE__ */StyledButton(props => {\n  const theme = useCustomTheme();\n  if (props.unstyled) {\n    return {};\n  }\n  return {\n    all: \"unset\",\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: radius.md,\n    padding: `${fontSize.sm} ${fontSize.sm}`,\n    fontSize: fontSize.sm,\n    fontWeight: 500,\n    boxSizing: \"border-box\",\n    WebkitTapHighlightColor: \"transparent\",\n    lineHeight: \"normal\",\n    flexShrink: 0,\n    transition: \"border 200ms ease\",\n    gap: props.gap && spacing[props.gap] || 0,\n    width: props.fullWidth ? \"100%\" : undefined,\n    textAlign: \"center\",\n    maxWidth: \"100%\",\n    background: (() => {\n      if (props.bg) {\n        return theme.colors[props.bg];\n      }\n      switch (props.variant) {\n        case \"primary\":\n          return theme.colors.primaryButtonBg;\n        case \"accent\":\n          return theme.colors.accentButtonBg;\n        case \"secondary\":\n          return theme.colors.secondaryButtonBg;\n        default:\n          return \"none\";\n      }\n    })(),\n    color: (() => {\n      switch (props.variant) {\n        case \"primary\":\n          return theme.colors.primaryButtonText;\n        case \"accent\":\n          return theme.colors.accentButtonText;\n        case \"secondary\":\n          return theme.colors.secondaryButtonText;\n        case \"ghost\":\n        case \"outline\":\n          return theme.colors.secondaryButtonText;\n        case \"link\":\n          return theme.colors.accentText;\n        default:\n          return theme.colors.primaryButtonText;\n      }\n    })(),\n    \"&:active\": {\n      transform: \"translateY(1px)\"\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\"\n    },\n    \"&[data-disabled='true']\": {\n      background: theme.colors.tertiaryBg,\n      color: theme.colors.secondaryText,\n      borderColor: \"transparent\",\n      boxShadow: \"none\",\n      \"&:hover\": {\n        borderColor: \"transparent\"\n      }\n    },\n    ...(() => {\n      if (props.variant === \"outline\") {\n        return {\n          border: `1px solid ${theme.colors.borderColor}`,\n          \"&:hover\": {\n            borderColor: theme.colors.accentText\n          },\n          '&[aria-selected=\"true\"]': {\n            borderColor: theme.colors.accentText\n          }\n        };\n      }\n      if (props.variant === \"ghost\") {\n        return {\n          border: \"1px solid transparent\",\n          \"&:hover\": {\n            borderColor: theme.colors.accentText\n          }\n        };\n      }\n      if (props.variant === \"secondary\") {\n        return {\n          \"&:hover\": {\n            background: theme.colors.secondaryButtonHoverBg\n          }\n        };\n      }\n      if (props.variant === \"link\") {\n        return {\n          padding: 0,\n          \"&:hover\": {\n            color: theme.colors.primaryText\n          }\n        };\n      }\n      return {};\n    })()\n  };\n});\nexport const ButtonLink = /* @__PURE__ */(() => Button.withComponent(\"a\"))();\nexport const IconButton = /* @__PURE__ */StyledButton(_ => {\n  const theme = useCustomTheme();\n  return {\n    all: \"unset\",\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: radius.sm,\n    WebkitTapHighlightColor: \"transparent\",\n    color: theme.colors.secondaryIconColor,\n    padding: \"2px\",\n    transition: \"background 200ms ease, color 200ms ease\",\n    \"&:hover\": {\n      background: theme.colors.secondaryIconHoverBg,\n      color: theme.colors.secondaryIconHoverColor\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\"\n    }\n  };\n});\n//# sourceMappingURL=buttons.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}