{"ast":null,"code":"// TODO(v3): Rename to `toLocalAccount` + add `source` property to define source (privateKey, mnemonic, hdKey, etc).\nimport { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\n/**\n * @description Creates an Account from a custom signing implementation.\n *\n * @returns A Local Account.\n */\nexport function toAccount(source) {\n  if (typeof source === 'string') {\n    if (!isAddress(source, {\n      strict: false\n    })) throw new InvalidAddressError({\n      address: source\n    });\n    return {\n      address: source,\n      type: 'json-rpc'\n    };\n  }\n  if (!isAddress(source.address, {\n    strict: false\n  })) throw new InvalidAddressError({\n    address: source.address\n  });\n  return {\n    address: source.address,\n    nonceManager: source.nonceManager,\n    sign: source.sign,\n    experimental_signAuthorization: source.experimental_signAuthorization,\n    signMessage: source.signMessage,\n    signTransaction: source.signTransaction,\n    signTypedData: source.signTypedData,\n    source: 'custom',\n    type: 'local'\n  };\n}\n//# sourceMappingURL=toAccount.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}