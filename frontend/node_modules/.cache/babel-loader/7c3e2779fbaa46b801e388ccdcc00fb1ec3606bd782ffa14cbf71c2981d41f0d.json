{"ast":null,"code":"import { useQueries } from \"@tanstack/react-query\";\nimport { COINBASE } from \"../../../wallets/constants.js\";\nimport { isEcosystemWallet } from \"../../../wallets/ecosystem/is-ecosystem-wallet.js\";\nexport function usePreloadWalletProviders({\n  client,\n  wallets\n}) {\n  useQueries({\n    queries: wallets.filter(w => w.id === COINBASE || w.id === \"inApp\" || isEcosystemWallet(w.id)).map(w => ({\n      queryKey: [\"preload-wallet\", w.id],\n      queryFn: async () => {\n        switch (true) {\n          case COINBASE === w.id:\n            {\n              const {\n                getCoinbaseWebProvider\n              } = await import(\"../../../wallets/coinbase/coinbase-web.js\");\n              await getCoinbaseWebProvider(w.getConfig());\n              // return _something_\n              return true;\n            }\n          case \"inApp\" === w.id:\n            {\n              const [{\n                InAppWebConnector\n              }, {\n                getOrCreateInAppWalletConnector\n              }] = await Promise.all([import(\"../../../wallets/in-app/web/lib/web-connector.js\"), import(\"../../../wallets/in-app/core/wallet/in-app-core.js\")]);\n              await getOrCreateInAppWalletConnector(client, async client => {\n                return new InAppWebConnector({\n                  client\n                });\n              });\n              // return _something_\n              return true;\n            }\n          case isEcosystemWallet(w.id):\n            {\n              const [{\n                InAppWebConnector\n              }, {\n                getOrCreateInAppWalletConnector\n              }] = await Promise.all([import(\"../../../wallets/in-app/web/lib/web-connector.js\"), import(\"../../../wallets/in-app/core/wallet/in-app-core.js\")]);\n              const ecosystemWallet = w; // we know this is an ecosystem wallet\n              await getOrCreateInAppWalletConnector(client, async client => {\n                return new InAppWebConnector({\n                  client,\n                  ecosystem: {\n                    id: ecosystemWallet.id,\n                    partnerId: ecosystemWallet.getConfig()?.partnerId\n                  }\n                });\n              }, {\n                id: ecosystemWallet.id,\n                partnerId: ecosystemWallet.getConfig()?.partnerId\n              });\n              return true;\n            }\n          // potentially add more wallets here\n          default:\n            {\n              return false;\n            }\n        }\n      }\n    }))\n  });\n}\n//# sourceMappingURL=usePreloadWalletProviders.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}