{"ast":null,"code":"import { withCache } from \"../../../utils/promise/withCache.js\";\nimport { name as generatedName } from \"../__generated__/IContractMetadata/read/name.js\";\nexport { isNameSupported } from \"../__generated__/IContractMetadata/read/name.js\";\n/**\n * Retrieves the name associated with the given contract.\n * @param options - The options for the transaction.\n * @returns A promise that resolves to the name associated with the contract.\n * @extension COMMON\n * @example\n * ```ts\n * import { name } from \"thirdweb/extensions/common\";\n *\n * const contractName = await name({ contract });\n * ```\n */\nexport async function name(options) {\n  return withCache(() => generatedName(options), {\n    cacheKey: `${options.contract.chain.id}:${options.contract.address}:name`,\n    // can never change, so cache forever\n    cacheTime: Number.POSITIVE_INFINITY\n  });\n}\n//# sourceMappingURL=name.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}