{"ast":null,"code":"import { balanceOfBatch } from \"../__generated__/IERC1155/read/balanceOfBatch.js\";\nimport { nextTokenIdToMint } from \"../__generated__/IERC1155Enumerable/read/nextTokenIdToMint.js\";\nimport { nextTokenId } from \"../__generated__/Zora1155/read/nextTokenId.js\";\nconst DEFAULT_QUERY_ALL_COUNT = 100;\n/**\n * Retrieves the owned ERC1155 tokenIds & the owned balance of each tokenId for a given wallet address.\n * @param options - The transaction options and parameters.\n * @returns A promise that resolves to an array of ERC1155 NFTs owned by the wallet address, along with the quantity owned.\n * @extension ERC1155\n * @example\n * ```ts\n * import { getOwnedNFTs } from \"thirdweb/extensions/erc1155\";\n * const ownedTokenIds = await getOwnedTokenIds({\n *  contract,\n *  start: 0,\n *  count: 10,\n *  address: \"0x123...\",\n * });\n * ```\n */\nexport async function getOwnedTokenIds(options) {\n  const maxId = await Promise.allSettled([nextTokenIdToMint(options), nextTokenId(options)]).then(([_nextToMint, _next]) => {\n    if (_nextToMint.status === \"fulfilled\") {\n      return _nextToMint.value;\n    }\n    if (_next.status === \"fulfilled\") {\n      return _next.value;\n    }\n    throw Error(\"Contract doesn't have required extension\");\n  });\n  // approach is naieve, likely can be improved\n  const owners = [];\n  const tokenIds = [];\n  for (let i = 0n; i < maxId; i++) {\n    owners.push(options.address);\n    tokenIds.push(i);\n  }\n  const balances = await balanceOfBatch({\n    ...options,\n    owners,\n    tokenIds\n  });\n  let ownedBalances = balances.map((b, i) => {\n    return {\n      tokenId: BigInt(i),\n      balance: b\n    };\n  }).filter(b => b.balance > 0);\n  if (options.start || options.count) {\n    const start = options?.start || 0;\n    const count = options?.count || DEFAULT_QUERY_ALL_COUNT;\n    ownedBalances = ownedBalances.slice(start, start + count);\n  }\n  return ownedBalances;\n}\n//# sourceMappingURL=getOwnedTokenIds.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}