{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { spacing } from \"../../../core/design-system/index.js\";\nimport { fadeInAnimation, floatDownAnimation, floatUpAnimation } from \"../design-system/animations.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\nimport { BackButton, ModalTitle } from \"./modalElements.js\";\nexport const ScreenBottomContainer = /* @__PURE__ */StyledDiv(_ => {\n  const theme = useCustomTheme();\n  return {\n    borderTop: `1px solid ${theme.colors.separatorLine}`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: spacing.lg,\n    padding: spacing.lg\n  };\n});\nexport const noScrollBar = /* @__PURE__ */{\n  scrollbarWidth: \"none\",\n  \"&::-webkit-scrollbar\": {\n    width: 0,\n    display: \"none\"\n  }\n};\n/**\n * @internal\n */\nexport function ModalHeader(props) {\n  const {\n    onBack,\n    title\n  } = props;\n  return _jsxs(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: props.leftAligned ? \"flex-start\" : \"center\",\n      position: \"relative\"\n    },\n    children: [onBack && _jsx(BackButton, {\n      onClick: onBack,\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0\n      }\n    }), _jsx(Container, {\n      flex: \"row\",\n      gap: \"xs\",\n      center: \"both\",\n      children: typeof title === \"string\" ? _jsx(ModalTitle, {\n        children: title\n      }) : title\n    })]\n  });\n}\nexport const Line = /* @__PURE__ */StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    height: \"1px\",\n    background: theme.colors.separatorLine\n  };\n});\n/**\n * @internal\n */\nexport function Container(props) {\n  const styles = {};\n  if (props.relative) {\n    styles.position = \"relative\";\n  }\n  if (props.fullHeight) {\n    styles.height = \"100%\";\n  }\n  if (props.expand) {\n    styles.flex = \"1 1 0%\";\n  }\n  if (props.flex) {\n    styles.display = \"flex\";\n    styles.flexDirection = props.flex;\n    if (props.flex === \"row\") {\n      styles.flexWrap = \"wrap\";\n    }\n    if (props.gap) {\n      styles.gap = spacing[props.gap];\n    }\n    if (props.center) {\n      if (props.center === \"both\") {\n        styles.justifyContent = \"center\";\n        styles.alignItems = \"center\";\n      }\n      if (props.center === \"x\" && props.flex === \"row\" || props.center === \"y\" && props.flex === \"column\") {\n        styles.justifyContent = \"center\";\n      }\n      if (props.center === \"x\" && props.flex === \"column\" || props.center === \"y\" && props.flex === \"row\") {\n        styles.alignItems = \"center\";\n      }\n    }\n  }\n  if (props.p) {\n    styles.padding = spacing[props.p];\n  }\n  if (props.px) {\n    styles.paddingLeft = spacing[props.px];\n    styles.paddingRight = spacing[props.px];\n  }\n  if (props.py) {\n    styles.paddingTop = spacing[props.py];\n    styles.paddingBottom = spacing[props.py];\n  }\n  if (props.debug) {\n    styles.outline = \"1px solid red\";\n    styles.outlineOffset = \"-1px\";\n  }\n  return _jsx(Box, {\n    \"data-scrolly\": props.scrollY,\n    \"data-animate\": props.animate,\n    bg: props.bg,\n    color: props.color,\n    borderColor: props.borderColor,\n    style: {\n      ...styles,\n      ...props.style\n    },\n    children: props.children\n  });\n}\nconst Box = /* @__PURE__ */StyledDiv(props => {\n  const theme = useCustomTheme();\n  return {\n    color: props.color ? theme.colors[props.color] : \"inherit\",\n    background: props.bg ? theme.colors[props.bg] : undefined,\n    borderColor: props.borderColor ? theme.colors[props.borderColor] : undefined,\n    \"&[data-animate='fadein']\": {\n      opacity: 0,\n      animation: `${fadeInAnimation} 350ms ease forwards`\n    },\n    \"&[data-animate='floatup']\": {\n      opacity: 0,\n      animation: `${floatUpAnimation} 350ms ease forwards`\n    },\n    \"&[data-animate='floatdown']\": {\n      opacity: 0,\n      animation: `${floatDownAnimation} 350ms ease forwards`\n    },\n    \"&[data-scrolly='true']\": {\n      overflowY: \"auto\",\n      ...noScrollBar\n    }\n  };\n});\n//# sourceMappingURL=basic.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}