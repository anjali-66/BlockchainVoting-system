{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMemo } from \"react\";\nimport { getCachedChain } from \"../../../../../../../chains/utils.js\";\nimport { formatNumber } from \"../../../../../../../utils/formatNumber.js\";\nimport { useChainName } from \"../../../../../../core/hooks/others/useChainQuery.js\";\nimport { Container } from \"../../../../components/basic.js\";\nimport { Text } from \"../../../../components/text.js\";\nimport { PayTokenIcon } from \"../PayTokenIcon.js\";\nexport function TokenInfoRow(props) {\n  const chainObj = useMemo(() => getCachedChain(props.chainId), [props.chainId]);\n  const {\n    name\n  } = useChainName(chainObj);\n  return _jsxs(Container, {\n    flex: \"row\",\n    style: {\n      justifyContent: \"space-between\"\n    },\n    children: [_jsx(Text, {\n      size: \"sm\",\n      children: props.label\n    }), _jsxs(Container, {\n      flex: \"column\",\n      gap: \"xxs\",\n      style: {\n        alignItems: \"flex-end\"\n      },\n      children: [_jsxs(Container, {\n        flex: \"row\",\n        gap: \"xs\",\n        center: \"y\",\n        children: [_jsx(PayTokenIcon, {\n          chain: chainObj,\n          size: \"sm\",\n          token: {\n            address: props.tokenAddress\n          },\n          client: props.client\n        }), _jsxs(Text, {\n          color: \"primaryText\",\n          children: [formatNumber(Number(props.tokenAmount), 6), \" \", props.tokenSymbol]\n        })]\n      }), _jsx(Text, {\n        size: \"sm\",\n        children: name\n      })]\n    })]\n  });\n}\n//# sourceMappingURL=TokenInfoRow.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}