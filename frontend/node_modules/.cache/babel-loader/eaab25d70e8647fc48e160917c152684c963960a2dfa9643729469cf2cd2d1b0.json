{"ast":null,"code":"\"use client\";\n\nimport { createContext, useContext } from \"react\";\nexport const ConnectionManagerCtx = createContext(undefined);\n/**\n * @internal\n */\nexport function useConnectionManager() {\n  const connectionManager = useConnectionManagerCtx(\"useConnectionManager\");\n  if (!connectionManager) {\n    throw new Error(\"useConnectionManager must be used within a <ThirdwebProvider> Provider\");\n  }\n  return connectionManager;\n}\n/**\n * Use this instead of `useConnectionManager` to throw a more specific error message when used outside of a provider.\n * @internal\n */\nexport function useConnectionManagerCtx(hookname) {\n  const manager = useContext(ConnectionManagerCtx);\n  if (!manager) {\n    throw new Error(`${hookname} must be used within <ThirdwebProvider>`);\n  }\n  return manager;\n}\n//# sourceMappingURL=connection-manager.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}