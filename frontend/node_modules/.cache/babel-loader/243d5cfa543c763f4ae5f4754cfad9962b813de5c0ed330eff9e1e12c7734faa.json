{"ast":null,"code":"import { webLocalStorage } from \"../../../utils/storage/webStorage.js\";\nimport { getLastAuthProvider as getLastAuthProviderCore } from \"../../core/utils/storage.js\";\n/**\n * Retrieves the last authentication provider used from local storage.\n *\n * This function is designed to work only in a browser environment.\n *\n * @returns {Promise<AuthArgsType[\"strategy\"] | null>} A promise that resolves to the last\n * authentication provider strategy used, or `null` if none is found.\n *\n * @example\n * ```typescript\n * import { getLastAuthProvider } from \"thirdweb/react\";\n *\n * const lastAuthProvider = await getLastAuthProvider();\n * ```\n *\n * @utils\n */\nexport async function getLastAuthProvider() {\n  return getLastAuthProviderCore(webLocalStorage);\n}\n//# sourceMappingURL=storage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}