{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\n/**\n * @internal\n */\nexport function useClipboard(text) {\n  const [hasCopied, setHasCopied] = useState(false);\n  const onCopy = useCallback(async () => {\n    await navigator.clipboard.writeText(text);\n    setHasCopied(true);\n  }, [text]);\n  useEffect(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, 1500);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [hasCopied]);\n  return {\n    onCopy,\n    hasCopied\n  };\n}\n//# sourceMappingURL=useCopyClipboard.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}