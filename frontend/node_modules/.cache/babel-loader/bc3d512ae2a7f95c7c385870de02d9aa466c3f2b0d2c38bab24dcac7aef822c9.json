{"ast":null,"code":"// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n\n// const ConnectWallet = ({ onWalletConnected }) => {\n//   const [account, setAccount] = useState('');\n//   const [error, setError] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n//       onWalletConnected(provider, account);\n\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!account ? (\n//         <button onClick={connectWallet} disabled={isConnecting}>\n//           {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n//         </button>\n//       ) : (\n//         <p>Connected: {account}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ConnectWallet;","map":{"version":3,"names":[],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/ConnectWallet.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { ethers } from 'ethers';\n\n// const ConnectWallet = ({ onWalletConnected }) => {\n//   const [account, setAccount] = useState('');\n//   const [error, setError] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n//       onWalletConnected(provider, account);\n\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!account ? (\n//         <button onClick={connectWallet} disabled={isConnecting}>\n//           {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n//         </button>\n//       ) : (\n//         <p>Connected: {account}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ConnectWallet;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}