{"ast":null,"code":"import { formatTransaction } from \"viem\";\n/**\n * Retrieves a transaction by its hash.\n * @param request - The EIP1193 request function.\n * @param params - The parameters for retrieving the transaction.\n * @returns A promise that resolves to the transaction.\n * @throws An error if the transaction is not found.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_getTransactionByHash } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n *  const transaction = await eth_getTransactionByHash(rpcRequest, {\n *  hash: \"0x...\",\n * });\n * ```\n */\nexport async function eth_getTransactionByHash(request, params) {\n  const receipt = await request({\n    method: \"eth_getTransactionByHash\",\n    params: [params.hash]\n  });\n  if (!receipt) {\n    throw new Error(\"Transaction not found.\");\n  }\n  return formatTransaction(receipt);\n}\n//# sourceMappingURL=eth_getTransactionByHash.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}