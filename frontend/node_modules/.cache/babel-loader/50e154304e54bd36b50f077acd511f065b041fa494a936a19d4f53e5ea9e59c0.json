{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport styled from \"@emotion/styled\";\nimport { MagnifyingGlassIcon } from \"@radix-ui/react-icons\";\nimport { CrossCircledIcon } from \"@radix-ui/react-icons\";\nimport Fuse from \"fuse.js\";\nimport { useMemo, useRef, useState } from \"react\";\nimport walletInfos from \"../../../../../wallets/__generated__/wallet-infos.js\";\nimport { createWallet } from \"../../../../../wallets/create-wallet.js\";\nimport { useCustomTheme } from \"../../../../core/design-system/CustomThemeProvider.js\";\nimport { iconSize, spacing } from \"../../../../core/design-system/index.js\";\nimport { useSetSelectionData } from \"../../../providers/wallet-ui-states-provider.js\";\nimport { sortWallets } from \"../../../utils/sortWallets.js\";\nimport { Spacer } from \"../../components/Spacer.js\";\nimport { Spinner } from \"../../components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../components/basic.js\";\nimport { Input } from \"../../components/formElements.js\";\nimport { Text } from \"../../components/text.js\";\nimport { useDebouncedValue } from \"../../hooks/useDebouncedValue.js\";\nimport { useShowMore } from \"../../hooks/useShowMore.js\";\nimport { WalletEntryButton } from \"../WalletEntryButton.js\";\n/**\n *\n * @internal\n */\nfunction AllWalletsUI(props) {\n  const {\n    itemsToShow,\n    lastItemRef\n  } = useShowMore(10, 10);\n  const setSelectionData = useSetSelectionData();\n  const walletList = useMemo(() => {\n    return walletInfos.filter(wallet => {\n      return props.specifiedWallets.findIndex(x => x.id === wallet.id) === -1;\n    });\n  }, [props.specifiedWallets]);\n  const fuseInstance = useMemo(() => {\n    return new Fuse(walletList, {\n      threshold: 0.4,\n      keys: [{\n        name: \"name\",\n        weight: 1\n      }]\n    });\n  }, [walletList]);\n  const listContainer = useRef(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const deferredSearchTerm = useDebouncedValue(searchTerm, 300);\n  const searchResults = deferredSearchTerm ? fuseInstance.search(deferredSearchTerm).map(result => result.item) : walletList;\n  const walletInfosToShow = useMemo(() => {\n    return sortWallets(searchResults.slice(0, itemsToShow));\n  }, [searchResults, itemsToShow]);\n  return _jsxs(Container, {\n    fullHeight: true,\n    flex: \"column\",\n    animate: \"fadein\",\n    children: [_jsx(Container, {\n      p: \"lg\",\n      children: _jsx(ModalHeader, {\n        title: \"Select Wallet\",\n        onBack: props.onBack\n      })\n    }), _jsx(Spacer, {\n      y: \"xs\"\n    }), _jsx(Container, {\n      px: \"lg\",\n      children: _jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          position: \"relative\"\n        },\n        children: [_jsx(StyledMagnifyingGlassIcon, {\n          width: iconSize.md,\n          height: iconSize.md\n        }), _jsx(Input, {\n          style: {\n            padding: `${spacing.sm} ${spacing.sm} ${spacing.sm} ${spacing.xxl}`\n          },\n          tabIndex: -1,\n          variant: \"outline\",\n          placeholder: \"Search Wallet\",\n          value: searchTerm,\n          onChange: e => {\n            listContainer.current?.parentElement?.scroll({\n              top: 0\n            });\n            setSearchTerm(e.target.value);\n          }\n        }), deferredSearchTerm !== searchTerm && _jsx(\"div\", {\n          style: {\n            position: \"absolute\",\n            right: spacing.md\n          },\n          children: _jsx(Spinner, {\n            size: \"md\",\n            color: \"accentText\"\n          })\n        })]\n      })\n    }), walletInfosToShow.length > 0 && _jsxs(_Fragment, {\n      children: [_jsx(Spacer, {\n        y: \"md\"\n      }), _jsxs(Container, {\n        animate: \"fadein\",\n        expand: true,\n        scrollY: true,\n        children: [_jsx(\"div\", {\n          ref: listContainer,\n          style: {\n            maxHeight: props.size === \"compact\" ? \"400px\" : undefined,\n            paddingInline: spacing.md\n          },\n          children: walletInfosToShow.map((walletInfo, i) => {\n            const isLast = i === walletInfosToShow.length - 1;\n            return _jsx(\"li\", {\n              ref: isLast ? lastItemRef : undefined,\n              style: {\n                listStyle: \"none\"\n              },\n              children: _jsx(WalletEntryButton, {\n                walletId: walletInfo.id,\n                selectWallet: () => {\n                  const wallet = createWallet(walletInfo.id);\n                  props.onSelect(wallet);\n                  if (!props.disableSelectionDataReset) {\n                    setSelectionData({});\n                  }\n                },\n                client: props.client,\n                recommendedWallets: props.recommendedWallets,\n                connectLocale: props.connectLocale,\n                isActive: false,\n                badge: undefined\n              })\n            }, walletInfo.id);\n          })\n        }), _jsx(Spacer, {\n          y: \"xl\"\n        })]\n      })]\n    }), walletInfosToShow.length === 0 && _jsxs(Container, {\n      flex: \"column\",\n      gap: \"md\",\n      center: \"both\",\n      color: \"secondaryText\",\n      animate: \"fadein\",\n      expand: true,\n      style: {\n        minHeight: \"250px\"\n      },\n      children: [_jsx(CrossCircledIcon, {\n        width: iconSize.xl,\n        height: iconSize.xl\n      }), _jsx(Text, {\n        children: \" No Results \"\n      })]\n    })]\n  });\n}\nconst StyledMagnifyingGlassIcon = /* @__PURE__ */styled(MagnifyingGlassIcon)(_ => {\n  const theme = useCustomTheme();\n  return {\n    color: theme.colors.secondaryText,\n    position: \"absolute\",\n    left: spacing.sm\n  };\n});\nexport default AllWalletsUI;\n//# sourceMappingURL=AllWalletsUI.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}