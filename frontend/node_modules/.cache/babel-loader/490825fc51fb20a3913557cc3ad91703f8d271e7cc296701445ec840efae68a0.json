{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { ExternalLinkIcon } from \"@radix-ui/react-icons\";\nimport { getCachedChain } from \"../../../../../../../chains/utils.js\";\nimport { formatNumber } from \"../../../../../../../utils/formatNumber.js\";\nimport { formatExplorerTxUrl } from \"../../../../../../../utils/url.js\";\nimport { fontSize, iconSize } from \"../../../../../../core/design-system/index.js\";\nimport { useChainExplorers } from \"../../../../../../core/hooks/others/useChainQuery.js\";\nimport { Spacer } from \"../../../../components/Spacer.js\";\nimport { Container, Line } from \"../../../../components/basic.js\";\nimport { ButtonLink } from \"../../../../components/buttons.js\";\nimport { Text } from \"../../../../components/text.js\";\nimport { TokenInfoRow } from \"../pay-transactions/TokenInfoRow.js\";\nimport { getCurrencyMeta } from \"./currencies.js\";\n/**\n * Show a table with the details of a \"OnRamp\" transaction step in the \"Buy with Fiat\" flow.\n * - Show OnRamp token as \"Receive\"\n * - Show fiat amount as \"Pay\"\n */\nexport function OnRampTxDetailsTable(props) {\n  const onRampExplorers = useChainExplorers(getCachedChain(props.token.chainId));\n  const onrampTxHash = props.statusMeta?.txHash;\n  const currencyMeta = getCurrencyMeta(props.fiat.currencySymbol);\n  const lineSpacer = _jsxs(_Fragment, {\n    children: [_jsx(Spacer, {\n      y: \"md\"\n    }), _jsx(Line, {}), _jsx(Spacer, {\n      y: \"md\"\n    })]\n  });\n  return _jsxs(\"div\", {\n    children: [_jsxs(Container, {\n      flex: \"row\",\n      style: {\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(Text, {\n        children: \"Pay\"\n      }), _jsx(Container, {\n        flex: \"column\",\n        gap: \"xxs\",\n        style: {\n          alignItems: \"flex-end\"\n        },\n        children: _jsxs(Container, {\n          flex: \"row\",\n          gap: \"xs\",\n          center: \"y\",\n          children: [_jsx(currencyMeta.icon, {\n            size: iconSize.sm\n          }), _jsxs(Text, {\n            color: \"primaryText\",\n            children: [formatNumber(Number(props.fiat.amount), 2), \" \", props.fiat.currencySymbol]\n          })]\n        })\n      })]\n    }), lineSpacer, _jsx(TokenInfoRow, {\n      chainId: props.token.chainId,\n      client: props.client,\n      label: \"Receive\",\n      tokenAmount: props.token.amount,\n      tokenSymbol: props.token.symbol,\n      tokenAddress: props.token.address\n    }), props.statusMeta && _jsxs(_Fragment, {\n      children: [lineSpacer, _jsxs(Container, {\n        flex: \"row\",\n        center: \"y\",\n        style: {\n          justifyContent: \"space-between\"\n        },\n        children: [_jsx(Text, {\n          children: \"Status\"\n        }), _jsx(Container, {\n          flex: \"row\",\n          gap: \"xs\",\n          center: \"y\",\n          children: _jsx(Text, {\n            color: props.statusMeta.color,\n            children: props.statusMeta.text\n          })\n        })]\n      })]\n    }), lineSpacer, onrampTxHash && onRampExplorers.explorers?.[0]?.url && _jsxs(_Fragment, {\n      children: [_jsx(Spacer, {\n        y: \"md\"\n      }), _jsxs(ButtonLink, {\n        fullWidth: true,\n        variant: \"outline\",\n        href: formatExplorerTxUrl(onRampExplorers.explorers[0]?.url, onrampTxHash),\n        target: \"_blank\",\n        gap: \"xs\",\n        style: {\n          fontSize: fontSize.sm\n        },\n        children: [\"View on Explorer\", _jsx(ExternalLinkIcon, {\n          width: iconSize.sm,\n          height: iconSize.sm\n        })]\n      })]\n    })]\n  });\n}\n//# sourceMappingURL=FiatTxDetailsTable.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}