{"ast":null,"code":"/**\n * Creates an emitter object that allows subscribing to events and emitting events.\n * @returns An emitter object with `subscribe` and `emit` methods.\n * @template TEmitter - The type of the emitter.\n * @example\n * ```ts\n * const emitter = createEmitter<{\n *  event1: string;\n * event2: number;\n * }>();\n *\n * emitter.subscribe(\"event1\", (data) => {\n * console.log(data); // \"hello\"\n * });\n *\n * emitter.emit(\"event1\", \"hello\");\n * ```\n */\nexport function createEmitter() {\n  const subsribers = new Map();\n  return {\n    subscribe(event, cb) {\n      if (!subsribers.has(event)) {\n        subsribers.set(event, new Set([cb]));\n      } else {\n        subsribers.get(event)?.add(cb);\n      }\n      return () => {\n        const subscribers = subsribers.get(event);\n        if (subscribers) {\n          subscribers.delete(cb);\n        }\n      };\n    },\n    emit(event, data) {\n      const subscribers = subsribers.get(event);\n      if (subscribers) {\n        for (const cb of subscribers) {\n          cb(data);\n        }\n      }\n    }\n  };\n}\n//# sourceMappingURL=tiny-emitter.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}