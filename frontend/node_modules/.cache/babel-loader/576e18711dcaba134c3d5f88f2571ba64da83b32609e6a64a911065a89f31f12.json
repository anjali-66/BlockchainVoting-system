{"ast":null,"code":"import { isCoinbaseSDKWallet } from \"../coinbase/coinbase-web.js\";\nimport { isInAppWallet } from \"../in-app/core/wallet/index.js\";\nimport { getInjectedProvider } from \"../injected/index.js\";\nimport { isSmartWallet } from \"../smart/index.js\";\nimport { isWalletConnect } from \"../wallet-connect/controller.js\";\n/**\n * Get the capabilities of a wallet based on the [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792) specification.\n *\n *  This function is dependent on the wallet's support for EIP-5792, but will not throw.\n * **The returned object contains a `message` field detailing any issues with the wallet's support for EIP-5792.**\n *\n * @param {GetCapabilitiesOptions} options\n * @param {Wallet} options.wallet - The wallet to get the capabilities of.\n * @returns {Promise<GetCapabilitiesResult>} - A promise that resolves to the capabilities of the wallet based on the [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792) spec.\n * @beta\n * @example\n * ```ts\n * import { getCapabilities } from \"thirdweb/wallets/eip5792\";\n *\n * const wallet = createWallet(\"com.coinbase.wallet\");\n * const capabilities = await getCapabilities({ wallet });\n * ```\n *\n * @extension EIP5792\n */\nexport async function getCapabilities({\n  wallet\n}) {\n  const account = wallet.getAccount();\n  if (!account) {\n    return {\n      message: `Can't get capabilities, no account connected for wallet: ${wallet.id}`\n    };\n  }\n  if (isSmartWallet(wallet)) {\n    const {\n      smartWalletGetCapabilities\n    } = await import(\"../smart/lib/smart-wallet-capabilities.js\");\n    return smartWalletGetCapabilities({\n      wallet\n    });\n  }\n  if (isInAppWallet(wallet)) {\n    const {\n      inAppWalletGetCapabilities\n    } = await import(\"../in-app/core/eip5972/in-app-wallet-capabilities.js\");\n    return inAppWalletGetCapabilities({\n      wallet\n    });\n  }\n  if (isCoinbaseSDKWallet(wallet)) {\n    const {\n      coinbaseSDKWalletGetCapabilities\n    } = await import(\"../coinbase/coinbase-web.js\");\n    return coinbaseSDKWalletGetCapabilities({\n      wallet\n    });\n  }\n  // TODO: Add Wallet Connect support\n  if (isWalletConnect(wallet)) {\n    return {\n      message: \"getCapabilities is not yet supported with Wallet Connect\"\n    };\n  }\n  // Default to injected wallet\n  const provider = getInjectedProvider(wallet.id);\n  try {\n    return await provider.request({\n      method: \"wallet_getCapabilities\",\n      params: [account.address]\n    });\n  } catch (error) {\n    if (/unsupport|not support|not available/i.test(error.message)) {\n      return {\n        message: `${wallet.id} does not support wallet_getCapabilities, reach out to them directly to request EIP-5792 support.`\n      };\n    }\n    throw error;\n  }\n}\n//# sourceMappingURL=get-capabilities.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}