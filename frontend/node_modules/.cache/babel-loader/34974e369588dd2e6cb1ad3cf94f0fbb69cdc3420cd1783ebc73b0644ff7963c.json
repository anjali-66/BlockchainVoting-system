{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { isMobile } from \"../../../../utils/web/isMobile.js\";\nimport { openWindow } from \"../../../../utils/web/openWindow.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { iconSize, radius, spacing } from \"../../../core/design-system/index.js\";\nimport { AppleIcon } from \"../../ui/ConnectWallet/icons/AppleIcon.js\";\nimport { ChromeIcon } from \"../../ui/ConnectWallet/icons/ChromeIcon.js\";\nimport { PlayStoreIcon } from \"../../ui/ConnectWallet/icons/PlayStoreIcon.js\";\nimport { QRCode } from \"../../ui/components/QRCode.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { WalletImage } from \"../../ui/components/WalletImage.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { StyledButton } from \"../../ui/design-system/elements.js\";\n/**\n * @internal\n */\nexport const GetStartedScreen = ({\n  wallet,\n  walletInfo,\n  header,\n  footer,\n  onBack,\n  locale,\n  client\n}) => {\n  const [showScreen, setShowScreen] = useState(\"base\");\n  const isScanScreen = showScreen === \"android-scan\" || showScreen === \"ios-scan\";\n  const handleBack = onBack ? () => {\n    if (showScreen === \"base\") {\n      onBack();\n    } else {\n      setShowScreen(\"base\");\n    }\n  } : undefined;\n  return _jsx(Container, {\n    fullHeight: true,\n    flex: \"column\",\n    animate: \"fadein\",\n    children: _jsxs(Container, {\n      expand: true,\n      flex: \"column\",\n      p: \"lg\",\n      children: [showScreen === \"android-scan\" && walletInfo.app.android && _jsx(InstallScanScreen, {\n        platformIcon: _jsx(PlayStoreIcon, {\n          size: iconSize.md\n        }),\n        url: walletInfo.app.android,\n        platform: \"Google Play\",\n        walletName: walletInfo.name,\n        walletId: wallet.id,\n        onBack: handleBack,\n        locale: {\n          scanToDownload: locale.getStartedScreen.instruction\n        },\n        client: client\n      }), showScreen === \"ios-scan\" && walletInfo.app.ios && _jsx(InstallScanScreen, {\n        platformIcon: _jsx(AppleIcon, {\n          size: iconSize.md\n        }),\n        url: walletInfo.app.ios,\n        platform: \"App Store\",\n        walletName: walletInfo.name,\n        walletId: wallet.id,\n        onBack: handleBack,\n        locale: {\n          scanToDownload: locale.getStartedScreen.instruction\n        },\n        client: client\n      }), showScreen === \"base\" && _jsxs(Container, {\n        expand: true,\n        flex: \"column\",\n        children: [header || _jsx(ModalHeader, {\n          onBack: handleBack,\n          title: walletInfo.name\n        }), _jsx(Spacer, {\n          y: \"xl\"\n        }), _jsx(Container, {\n          expand: true,\n          animate: \"fadein\",\n          flex: \"column\",\n          center: \"y\",\n          style: {\n            minHeight: \"250px\"\n          },\n          children: _jsxs(Container, {\n            flex: \"column\",\n            gap: \"xs\",\n            children: [walletInfo.app.chrome && _jsxs(ButtonLink, {\n              onClick: () => {\n                openWindow(walletInfo.app.chrome || \"\");\n              },\n              children: [_jsx(ChromeIcon, {\n                size: iconSize.lg\n              }), _jsx(\"span\", {\n                children: locale.download.chrome\n              })]\n            }), walletInfo.app.android && _jsxs(ButtonLink, {\n              as: \"button\",\n              onClick: () => {\n                if (isMobile()) {\n                  openWindow(walletInfo.app.android || \"\");\n                } else {\n                  setShowScreen(\"android-scan\");\n                }\n              },\n              children: [_jsx(PlayStoreIcon, {\n                size: iconSize.lg\n              }), _jsx(\"span\", {\n                children: locale.download.android\n              })]\n            }), walletInfo.app.ios && _jsxs(ButtonLink, {\n              as: \"button\",\n              onClick: () => {\n                if (isMobile()) {\n                  openWindow(walletInfo.app.ios || \"\");\n                } else {\n                  setShowScreen(\"ios-scan\");\n                }\n              },\n              children: [_jsx(AppleIcon, {\n                size: iconSize.lg\n              }), _jsx(\"span\", {\n                children: locale.download.iOS\n              })]\n            })]\n          })\n        })]\n      }), !isScanScreen && footer]\n    })\n  });\n};\n/**\n * @internal\n */\nconst InstallScanScreen = props => {\n  return _jsxs(Container, {\n    animate: \"fadein\",\n    expand: true,\n    children: [_jsx(ModalHeader, {\n      title: props.walletName,\n      onBack: props.onBack\n    }), _jsx(Spacer, {\n      y: \"xl\"\n    }), _jsxs(Container, {\n      flex: \"column\",\n      expand: true,\n      center: \"both\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [_jsx(QRCode, {\n        qrCodeUri: props.url,\n        QRIcon: _jsx(WalletImage, {\n          id: props.walletId,\n          size: iconSize.xxl,\n          client: props.client\n        })\n      }), _jsx(Spacer, {\n        y: \"xl\"\n      }), _jsx(Text, {\n        multiline: true,\n        center: true,\n        balance: true,\n        children: props.locale.scanToDownload\n      }), _jsx(Spacer, {\n        y: \"xs\"\n      })]\n    })]\n  });\n};\nconst ButtonLink = /* @__PURE__ */StyledButton(_ => {\n  const theme = useCustomTheme();\n  return {\n    all: \"unset\",\n    textDecoration: \"none\",\n    padding: `${spacing.sm} ${spacing.md}`,\n    borderRadius: radius.sm,\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: spacing.md,\n    cursor: \"pointer\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    fontWeight: 500,\n    color: theme.colors.secondaryButtonText,\n    background: theme.colors.secondaryButtonBg,\n    transition: \"100ms ease\",\n    \"&:hover\": {\n      background: theme.colors.secondaryButtonHoverBg,\n      textDecoration: \"none\",\n      color: theme.colors.primaryText\n    }\n  };\n});\n//# sourceMappingURL=GetStartedScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}