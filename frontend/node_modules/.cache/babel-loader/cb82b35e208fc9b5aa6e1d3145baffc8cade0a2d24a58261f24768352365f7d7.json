{"ast":null,"code":"import { bytesToHex, concat } from \"viem/utils\";\nimport { stringToBytes, toBytes } from \"../encoding/to-bytes.js\";\nimport { keccak256 } from \"../hashing/keccak256.js\";\nimport { encodedLabelToLabelhash } from \"./encodeLabelToLabelhash.js\";\n/**\n * @internal\n */\nexport function namehash(name) {\n  let result = new Uint8Array(32).fill(0);\n  if (!name) {\n    return bytesToHex(result);\n  }\n  const labels = name.split(\".\");\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const item = labels[i];\n    const hashFromEncodedLabel = encodedLabelToLabelhash(item);\n    const hashed = hashFromEncodedLabel ? toBytes(hashFromEncodedLabel) : keccak256(stringToBytes(item), \"bytes\");\n    result = keccak256(concat([result, hashed]), \"bytes\");\n  }\n  return bytesToHex(result);\n}\n//# sourceMappingURL=namehash.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}