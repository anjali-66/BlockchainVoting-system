{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useAccountContext } from \"./provider.js\";\n/**\n *\n * @returns a <span> containing the full wallet address of the account\n *\n * @example\n * ### Basic usage\n * ```tsx\n * import { AccountProvider, AccountAddress } from \"thirdweb/react\";\n *\n * <AccountProvider address=\"0x12345674b599ce99958242b3D3741e7b01841DF3\" client={TW_CLIENT}>\n *   <AccountAddress />\n * </AccountProvider>\n * ```\n * Result:\n * ```html\n * <span>0x12345674b599ce99958242b3D3741e7b01841DF3</span>\n * ```\n *\n *\n * ### Shorten the address\n * ```tsx\n * import { AccountProvider, AccountAddress } from \"thirdweb/react\";\n * import { shortenAddress } from \"thirdweb/utils\";\n *\n * <AccountProvider address=\"0x12345674b599ce99958242b3D3741e7b01841DF3\" client={TW_CLIENT}>\n *   <AccountAddress formatFn={shortenAddress} />\n * </AccountProvider>\n * ```\n * Result:\n * ```html\n * <span>0x1234...1DF3</span>\n * ```\n *\n * @component\n * @wallet\n * @beta\n */\nexport function AccountAddress({\n  formatFn,\n  ...restProps\n}) {\n  const {\n    address\n  } = useAccountContext();\n  const value = formatFn ? formatFn(address) : address;\n  return _jsx(\"span\", {\n    ...restProps,\n    children: value\n  });\n}\n//# sourceMappingURL=address.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}