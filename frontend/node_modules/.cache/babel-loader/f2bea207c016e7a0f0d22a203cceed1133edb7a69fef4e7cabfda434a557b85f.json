{"ast":null,"code":"import { hexToBigInt } from \"../../utils/encoding/hex.js\";\n/**\n * Retrieves the maximum priority fee per gas from the Ethereum network.\n * @param request - The EIP1193 request function.\n * @returns A promise that resolves to a bigint representing the maximum priority fee per gas.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_maxPriorityFeePerGas } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const maxPriorityFeePerGas = await eth_maxPriorityFeePerGas(rpcRequest);\n * ```\n */\nexport async function eth_maxPriorityFeePerGas(request) {\n  const result = await request({\n    method: \"eth_maxPriorityFeePerGas\"\n  });\n  return hexToBigInt(result);\n}\n//# sourceMappingURL=eth_maxPriorityFeePerGas.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}