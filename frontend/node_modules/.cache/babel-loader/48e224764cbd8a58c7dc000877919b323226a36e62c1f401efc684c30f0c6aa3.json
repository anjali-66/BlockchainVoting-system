{"ast":null,"code":"import { getClientFetch } from \"../../../../utils/fetch.js\";\nimport { stringify } from \"../../../../utils/json.js\";\nimport { ROUTE_AUTH_ENDPOINT_CALLBACK } from \"../../native/helpers/constants.js\";\nimport { createErrorMessage } from \"../../native/helpers/errors.js\";\nexport async function authEndpoint(args) {\n  const clientFetch = getClientFetch(args.client, args.ecosystem);\n  const res = await clientFetch(ROUTE_AUTH_ENDPOINT_CALLBACK, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: stringify({\n      payload: args.payload,\n      developerClientId: args.client.clientId\n    })\n  });\n  if (!res.ok) {\n    const error = await res.json();\n    throw new Error(`Custom auth endpoint authentication error: ${error.message}`);\n  }\n  try {\n    const {\n      verifiedToken\n    } = await res.json();\n    return {\n      storedToken: verifiedToken\n    };\n  } catch (e) {\n    throw new Error(createErrorMessage(\"Malformed response from post auth_endpoint authentication\", e));\n  }\n}\n//# sourceMappingURL=authEndpoint.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}