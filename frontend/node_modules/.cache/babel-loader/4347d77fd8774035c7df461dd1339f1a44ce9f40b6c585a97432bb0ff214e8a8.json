{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ReloadIcon } from \"@radix-ui/react-icons\";\nimport { iconSize, spacing } from \"../../../core/design-system/index.js\";\nimport { WalletLogoSpinner } from \"../../ui/ConnectWallet/screens/WalletLogoSpinner.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Container, Line, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\n/**\n * @internal\n */\nexport const ConnectingScreen = props => {\n  const {\n    locale\n  } = props;\n  return _jsxs(Container, {\n    animate: \"fadein\",\n    fullHeight: true,\n    flex: \"column\",\n    children: [_jsx(Container, {\n      p: \"lg\",\n      style: {\n        paddingBottom: 0\n      },\n      children: _jsx(ModalHeader, {\n        title: props.walletName,\n        onBack: props.onBack\n      })\n    }), _jsxs(Container, {\n      flex: \"column\",\n      center: \"y\",\n      expand: true,\n      px: props.size === \"compact\" ? \"lg\" : \"xxl\",\n      relative: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(Container, {\n        py: \"3xl\",\n        children: _jsx(WalletLogoSpinner, {\n          client: props.client,\n          error: props.errorConnecting,\n          id: props.walletId\n        })\n      }), _jsxs(Container, {\n        animate: \"fadein\",\n        style: {\n          animationDuration: \"200ms\"\n        },\n        children: [_jsx(Text, {\n          center: true,\n          color: \"primaryText\",\n          size: \"lg\",\n          weight: 600,\n          children: props.errorConnecting ? locale.failed : locale.inProgress\n        }), _jsx(Spacer, {\n          y: \"md\"\n        }), !props.errorConnecting ? _jsx(Text, {\n          balance: true,\n          center: true,\n          multiline: true,\n          children: locale.instruction\n        }) : _jsx(Container, {\n          flex: \"row\",\n          center: \"x\",\n          animate: \"fadein\",\n          children: _jsxs(Button, {\n            fullWidth: true,\n            variant: \"accent\",\n            onClick: props.onRetry,\n            style: {\n              gap: spacing.xs,\n              alignItems: \"center\"\n            },\n            children: [_jsx(ReloadIcon, {\n              width: iconSize.sm,\n              height: iconSize.sm\n            }), locale.tryAgain]\n          })\n        })]\n      })]\n    }), props.onGetStarted ? _jsxs(_Fragment, {\n      children: [_jsx(Spacer, {\n        y: \"xl\"\n      }), _jsx(Line, {}), _jsx(Container, {\n        flex: \"row\",\n        center: \"x\",\n        p: \"lg\",\n        children: _jsx(Button, {\n          variant: \"link\",\n          onClick: props.onGetStarted,\n          children: locale.getStartedLink\n        })\n      })]\n    }) : _jsx(Spacer, {\n      y: props.size === \"compact\" ? \"lg\" : \"xxl\"\n    })]\n  });\n};\n//# sourceMappingURL=ConnectingScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}