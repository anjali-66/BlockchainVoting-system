{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n\n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n\n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import Header from './components/Header';\n// import WalletDetails from './components/WalletDetails';\n// import ConnectButton from './components/ConnectButton';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = `0x${network.chainId.toString(16)}`;\n\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         await window.ethereum.request({\n//           method: 'wallet_switchEthereumChain',\n//           params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//         });\n//       }\n\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error('Error connecting to wallet:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <main className=\"p-6 max-w-2xl mx-auto\">\n//         <div className=\"bg-white rounded-lg shadow-md p-6\">\n//           <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n//           {error && (\n//             <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//               {error}\n//             </div>\n//           )}\n//           {!account ? (\n//             <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n//           ) : (\n//             <WalletDetails account={account} balance={balance} onDisconnect={disconnectWallet} />\n//           )}\n//         </div>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState } from 'react';\nimport ConnectWallet from './components/ConnectWallet';\nimport WalletDetails from './components/WalletDetails';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n  const handleWalletConnected = async (provider, account) => {\n    setProvider(provider);\n    setAccount(account);\n    const balance = await provider.getBalance(account);\n    setBalance(ethers.utils.formatEther(balance));\n  };\n  const disconnectWallet = () => {\n    setAccount('');\n    setBalance('');\n    setProvider(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ethereum Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      onWalletConnected: handleWalletConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WalletDetails, {\n      account: account,\n      balance: balance,\n      disconnectWallet: disconnectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vFtf0Hz7J+V9me0qOrN3qPu6ECs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConnectWallet","WalletDetails","ethers","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","balance","setBalance","handleWalletConnected","getBalance","utils","formatEther","disconnectWallet","children","fileName","_jsxFileName","lineNumber","columnNumber","onWalletConnected","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n    \n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n      \n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n        \n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import Header from './components/Header';\n// import WalletDetails from './components/WalletDetails';\n// import ConnectButton from './components/ConnectButton';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = `0x${network.chainId.toString(16)}`;\n\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         await window.ethereum.request({\n//           method: 'wallet_switchEthereumChain',\n//           params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//         });\n//       }\n\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error('Error connecting to wallet:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <main className=\"p-6 max-w-2xl mx-auto\">\n//         <div className=\"bg-white rounded-lg shadow-md p-6\">\n//           <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n//           {error && (\n//             <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//               {error}\n//             </div>\n//           )}\n//           {!account ? (\n//             <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n//           ) : (\n//             <WalletDetails account={account} balance={balance} onDisconnect={disconnectWallet} />\n//           )}\n//         </div>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState } from 'react';\nimport ConnectWallet from './components/ConnectWallet';\nimport WalletDetails from './components/WalletDetails';\nimport { ethers } from 'ethers';\n\nconst App = () => {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n\n  const handleWalletConnected = async (provider, account) => {\n    setProvider(provider);\n    setAccount(account);\n    const balance = await provider.getBalance(account);\n    setBalance(ethers.utils.formatEther(balance));\n  };\n\n  const disconnectWallet = () => {\n    setAccount('');\n    setBalance('');\n    setProvider(null);\n  };\n\n  return (\n    <div>\n      <h1>Ethereum Wallet</h1>\n      {!account ? (\n        <ConnectWallet onWalletConnected={handleWalletConnected} />\n      ) : (\n        <WalletDetails account={account} balance={balance} disconnectWallet={disconnectWallet} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,qBAAqB,GAAG,MAAAA,CAAON,QAAQ,EAAEE,OAAO,KAAK;IACzDD,WAAW,CAACD,QAAQ,CAAC;IACrBG,UAAU,CAACD,OAAO,CAAC;IACnB,MAAME,OAAO,GAAG,MAAMJ,QAAQ,CAACO,UAAU,CAACL,OAAO,CAAC;IAClDG,UAAU,CAACV,MAAM,CAACa,KAAK,CAACC,WAAW,CAACL,OAAO,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;IACdJ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvB,CAACb,OAAO,gBACPL,OAAA,CAACJ,aAAa;MAACuB,iBAAiB,EAAEV;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3DlB,OAAA,CAACH,aAAa;MAACQ,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA,OAAQ;MAACM,gBAAgB,EAAEA;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}