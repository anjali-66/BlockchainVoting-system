{"ast":null,"code":"\"use client\";\n\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, radius, spacing } from \"../../../core/design-system/index.js\";\nimport { StyledDiv, StyledInput, StyledLabel } from \"../design-system/elements.js\";\nexport const Label = /* @__PURE__ */StyledLabel(props => {\n  const theme = useCustomTheme();\n  return {\n    fontSize: fontSize.sm,\n    color: theme.colors[props.color || \"primaryText\"],\n    display: \"block\",\n    fontWeight: 500\n  };\n});\nexport const Input = /* @__PURE__ */StyledInput(props => {\n  const theme = useCustomTheme();\n  return {\n    fontSize: fontSize.md,\n    fontFamily: \"inherit\",\n    display: \"block\",\n    padding: props.sm ? spacing.sm : fontSize.sm,\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: radius.md,\n    color: theme.colors.primaryText,\n    WebkitAppearance: \"none\",\n    appearance: \"none\",\n    background: \"transparent\",\n    \"&::placeholder\": {\n      color: theme.colors.secondaryText\n    },\n    boxShadow: `0 0 0 1.5px ${props.variant === \"outline\" ? theme.colors.borderColor : \"transparent\"}`,\n    \"&:-webkit-autofill\": {\n      WebkitTextFillColor: theme.colors.primaryText,\n      WebkitBoxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset !important`,\n      boxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset !important`,\n      transition: \"background-color 5000s ease-in-out 0s\"\n    },\n    \"&:-webkit-autofill:focus\": {\n      WebkitBoxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset, 0 0 0 2px ${props.variant === \"outline\" ? theme.colors.accentText : \"transparent\"} !important`,\n      boxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset, 0 0 0 2px ${props.variant === \"outline\" ? theme.colors.accentText : \"transparent\"} !important`\n    },\n    \"&[data-placeholder='true']\": {\n      color: theme.colors.secondaryText\n    },\n    \"&:focus\": {\n      boxShadow: `0 0 0 2px ${theme.colors.accentText}`\n    },\n    \"&[data-focus='false']:focus\": {\n      boxShadow: \"none\"\n    },\n    \"&:not([type='password'])\": {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    \"&[data-error='true']\": {\n      boxShadow: `0 0 0 2px ${theme.colors.danger} !important`\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\"\n    },\n    \"&[type='number']::-webkit-outer-spin-button, &[type='number']::-webkit-inner-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0\n    },\n    \"&[type='number']\": {\n      appearance: \"none\",\n      MozAppearance: \"textfield\"\n    }\n  };\n});\n// for rendering a input and a button side by side\nexport const InputContainer = /* @__PURE__ */StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    display: \"flex\",\n    borderRadius: radius.md,\n    boxShadow: `0 0 0px 1px ${theme.colors.borderColor}`,\n    \"&:focus-within\": {\n      boxShadow: `0 0 0px 1px ${theme.colors.accentText}`\n    },\n    \"input:focus\": {\n      boxShadow: \"none\"\n    },\n    // show error ring on container instead of input\n    \"&[data-error='true']\": {\n      boxShadow: `0 0 0px 1px ${theme.colors.danger}`\n    }\n  };\n});\n//# sourceMappingURL=formElements.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}