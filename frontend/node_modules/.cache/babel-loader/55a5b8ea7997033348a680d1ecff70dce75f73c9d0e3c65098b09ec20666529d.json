{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/ConnectWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport ConnectButton from './ConnectButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectWallet = ({\n  onWalletConnected\n}) => {\n  _s();\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n    try {\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed. Please install it to use this app.');\n      }\n\n      // Request account access\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const account = accounts[0]; // Get the first account\n\n      // Pass provider and account to parent component\n      onWalletConnected(provider, account);\n    } catch (err) {\n      setError(err.message || 'An unknown error occurred.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n      onClick: connectWallet,\n      isConnecting: isConnecting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet, \"cYrtscU01X8haoxYz30x1dG0rRI=\");\n_c = ConnectWallet;\nexport default ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["React","useState","ethers","ConnectButton","jsxDEV","_jsxDEV","ConnectWallet","onWalletConnected","_s","error","setError","isConnecting","setIsConnecting","connectWallet","window","ethereum","Error","provider","providers","Web3Provider","accounts","send","account","err","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/ConnectWallet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport ConnectButton from './ConnectButton';\n\nconst ConnectWallet = ({ onWalletConnected }) => {\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n\n    try {\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed. Please install it to use this app.');\n      }\n\n      // Request account access\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const account = accounts[0]; // Get the first account\n\n      // Pass provider and account to parent component\n      onWalletConnected(provider, account);\n    } catch (err) {\n      setError(err.message || 'An unknown error occurred.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  return (\n    <div>\n      {error && <div className=\"text-red-500 mb-2\">{error}</div>}\n      <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCD,eAAe,CAAC,IAAI,CAAC;IACrBF,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF;MACA,IAAI,CAACI,MAAM,CAACC,QAAQ,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;MAClF;;MAEA;MACA,MAAMC,QAAQ,GAAG,IAAIf,MAAM,CAACgB,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMK,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/D,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE7B;MACAb,iBAAiB,CAACU,QAAQ,EAAEK,OAAO,CAAC;IACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZb,QAAQ,CAACa,GAAG,CAACC,OAAO,IAAI,4BAA4B,CAAC;IACvD,CAAC,SAAS;MACRZ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAoB,QAAA,GACGhB,KAAK,iBAAIJ,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,EAAEhB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1DzB,OAAA,CAACF,aAAa;MAAC4B,OAAO,EAAElB,aAAc;MAACF,YAAY,EAAEA;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}