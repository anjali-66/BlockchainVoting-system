{"ast":null,"code":"import { parseAbiItem } from \"abitype\";\nimport { toFunctionSelector } from \"viem\";\nimport { LruMap } from \"../caching/lru.js\";\nimport { stringify } from \"../json.js\";\nconst prepareMethodCache = new LruMap(4096);\n/**\n * Prepares a method for usage by converting it into a prepared method object.\n * @param method The method to prepare.\n * @returns The prepared method object.\n * @example\n * ```ts\n * import { prepareMethod } from \"thirdweb/utils\";\n * const method = \"function transfer(address to, uint256 value)\";\n * const preparedMethod = prepareMethod(method);\n * ```\n * @contract\n */\nexport function prepareMethod(method) {\n  const key = typeof method === \"string\" ? method : stringify(method);\n  if (prepareMethodCache.has(key)) {\n    return prepareMethodCache.get(key);\n  }\n  const abiFn = typeof method === \"string\" ?\n  // @ts-expect-error - we're sure it's a string...\n  parseAbiItem(method) : method;\n  // encode the method signature\n  const sig = toFunctionSelector(abiFn);\n  const ret = [sig, abiFn.inputs, abiFn.outputs];\n  prepareMethodCache.set(key, ret);\n  return ret;\n}\n//# sourceMappingURL=prepare-method.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}