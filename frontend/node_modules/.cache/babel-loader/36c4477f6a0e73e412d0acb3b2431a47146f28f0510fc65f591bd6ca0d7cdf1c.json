{"ast":null,"code":"import { useActiveWallet } from \"./useActiveWallet.js\";\nimport { useConnectedWallets } from \"./useConnectedWallets.js\";\n/**\n * Get the admin wallet for the active wallet\n * Useful for smart wallets to get the underlying personal account\n * @returns The admin wallet for the active wallet, or the active wallet if it doesn't have an admin account\n * @walletConnection\n */\nexport function useAdminWallet() {\n  const activeWallet = useActiveWallet();\n  const connectedWallets = useConnectedWallets();\n  const adminAccount = activeWallet?.getAdminAccount?.();\n  if (!adminAccount) {\n    // If the active wallet doesn't have an admin account, return the active wallet\n    return activeWallet;\n  }\n  // If the active wallet has an admin account, find the admin wallet in connected wallets and return it\n  return connectedWallets.find(wallet => wallet.getAccount()?.address?.toLowerCase() === adminAccount?.address?.toLowerCase());\n}\n//# sourceMappingURL=useAdminWallet.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}