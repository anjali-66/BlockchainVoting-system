{"ast":null,"code":"import { getThirdwebBaseUrl } from \"../utils/domains.js\";\nimport { getClientFetch } from \"../utils/fetch.js\";\n/**\n * Fetches the wallet's available social profiles.\n * @param args - The arguments to use when fetching the social profiles.\n * @param args.address - The wallet address to fetch the social profiles for.\n * @param args.client - The Thirdweb client.\n * @returns A promise resolving to the array of social profiles for the given address.\n *\n * @example\n * ```ts\n * import { getSocialProfiles } from \"thirdweb/social\";\n * const profiles = await getSocialProfiles({\n *   address: \"0x...\",\n *   client,\n * });\n * ```\n * @social\n * @beta\n */\nexport async function getSocialProfiles(args) {\n  const {\n    address,\n    client\n  } = args;\n  const clientFetch = getClientFetch(client);\n  const response = await clientFetch(`${getThirdwebBaseUrl(\"social\")}/v1/profiles/${address}`);\n  if (response.status !== 200) {\n    try {\n      const errorBody = await response.json();\n      throw new Error(`Failed to fetch profile: ${errorBody.message}`);\n    } catch {\n      throw new Error(`Failed to fetch profile: ${response.status}\\n${await response.text()}`);\n    }\n  }\n  return (await response.json()).data;\n}\n//# sourceMappingURL=profiles.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}