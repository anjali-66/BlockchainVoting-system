{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/ConnectWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectWallet = ({\n  onWalletConnected\n}) => {\n  _s();\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask!');\n      }\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = accounts[0];\n      setAccount(account);\n      onWalletConnected(provider, account);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      disabled: isConnecting,\n      children: isConnecting ? 'Connecting...' : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet, \"UFJMgwOkgSRpiDnSX4PpNDc5gEM=\");\n_c = ConnectWallet;\nexport default ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","ConnectWallet","onWalletConnected","_s","account","setAccount","error","setError","isConnecting","setIsConnecting","connectWallet","window","ethereum","Error","provider","providers","Web3Provider","accounts","request","method","err","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/ConnectWallet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\nconst ConnectWallet = ({ onWalletConnected }) => {\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  const connectWallet = async () => {\n    setIsConnecting(true);\n    setError('');\n\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask!');\n      }\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const account = accounts[0];\n      setAccount(account);\n      onWalletConnected(provider, account);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  return (\n    <div>\n      {error && <div className=\"error\">{error}</div>}\n      {!account ? (\n        <button onClick={connectWallet} disabled={isConnecting}>\n          {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n        </button>\n      ) : (\n        <p>Connected: {account}</p>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCD,eAAe,CAAC,IAAI,CAAC;IACrBF,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,IAAI,CAACI,MAAM,CAACC,QAAQ,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMK,QAAQ,GAAG,MAAMN,MAAM,CAACC,QAAQ,CAACM,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF,MAAMf,OAAO,GAAGa,QAAQ,CAAC,CAAC,CAAC;MAC3BZ,UAAU,CAACD,OAAO,CAAC;MACnBF,iBAAiB,CAACY,QAAQ,EAAEV,OAAO,CAAC;IAEtC,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACZb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRZ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACET,OAAA;IAAAsB,QAAA,GACGhB,KAAK,iBAAIN,OAAA;MAAKuB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAEhB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7C,CAACvB,OAAO,gBACPJ,OAAA;MAAQ4B,OAAO,EAAElB,aAAc;MAACmB,QAAQ,EAAErB,YAAa;MAAAc,QAAA,EACpDd,YAAY,GAAG,eAAe,GAAG;IAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,gBAET3B,OAAA;MAAAsB,QAAA,GAAG,aAAW,EAAClB,OAAO;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvCIF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}