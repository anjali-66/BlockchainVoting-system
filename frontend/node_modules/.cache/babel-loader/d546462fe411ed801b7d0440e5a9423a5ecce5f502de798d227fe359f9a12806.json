{"ast":null,"code":"import { useQuery } from \"@tanstack/react-query\";\nimport { getBuyHistory } from \"../../../../pay/getBuyHistory.js\";\n/**\n * Hook to get the history of Buy transactions for a given wallet - This includes both \"buy with crypto\" and \"buy with fiat\" transactions.\n *\n * This hook is a React Query wrapper of the [`getBuyHistory`](https://portal.thirdweb.com/references/typescript/v5/getBuyHistory) function.\n * You can also use that function directly\n *\n * @param params - object of type [`BuyHistoryParams`](https://portal.thirdweb.com/references/typescript/v5/BuyHistoryParams)\n * @param queryParams - options to configure the react query\n * @returns A React Query object which contains the data of type [`BuyHistoryData`](https://portal.thirdweb.com/references/typescript/v5/BuyHistoryData)\n * @example\n * ```tsx\n * import { useBuyHistory } from \"thirdweb/react\";\n *\n * function Component() {\n *  const buyHistoryQuery = useBuyHistory(params);\n *  return <div> ... </div>\n * }\n * ```\n * @buyCrypto\n */\nexport function useBuyHistory(params, queryParams) {\n  return useQuery({\n    ...queryParams,\n    queryKey: [\"getBuyHistory\", params],\n    queryFn: () => {\n      if (!params) {\n        throw new Error(\"params are required\");\n      }\n      return getBuyHistory(params);\n    },\n    enabled: !!params\n  });\n}\n//# sourceMappingURL=useBuyHistory.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}