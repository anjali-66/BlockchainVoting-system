{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n\n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n\n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import Header from './components/Header';\n// import WalletDetails from './components/WalletDetails';\n// import ConnectButton from './components/ConnectButton';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = `0x${network.chainId.toString(16)}`;\n\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         await window.ethereum.request({\n//           method: 'wallet_switchEthereumChain',\n//           params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//         });\n//       }\n\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error('Error connecting to wallet:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <main className=\"p-6 max-w-2xl mx-auto\">\n//         <div className=\"bg-white rounded-lg shadow-md p-6\">\n//           <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n//           {error && (\n//             <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//               {error}\n//             </div>\n//           )}\n//           {!account ? (\n//             <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n//           ) : (\n//             <WalletDetails account={account} balance={balance} onDisconnect={disconnectWallet} />\n//           )}\n//         </div>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n\n// const WalletConnect = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [chainId, setChainId] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n    \n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       // Updated for ethers v5\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       // Request account access\n//       const accounts = await window.ethereum.request({ \n//         method: 'eth_requestAccounts' \n//       });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       // Get chain ID\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = '0x' + network.chainId.toString(16);\n//       setChainId(currentChainId);\n\n//       // Switch to Sepolia if not already on it\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         try {\n//           await window.ethereum.request({\n//             method: 'wallet_switchEthereumChain',\n//             params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//           });\n//         } catch (switchError) {\n//           if (switchError.code === 4902) {\n//             await window.ethereum.request({\n//               method: 'wallet_addEthereumChain',\n//               params: [{\n//                 chainId: SEPOLIA_CHAIN_ID,\n//                 chainName: 'Sepolia Test Network',\n//                 nativeCurrency: {\n//                   name: 'SepoliaETH',\n//                   symbol: 'ETH',\n//                   decimals: 18\n//                 },\n//                 rpcUrls: ['https://sepolia.infura.io/v3/'],\n//                 blockExplorerUrls: ['https://sepolia.etherscan.io']\n//               }],\n//             });\n//           }\n//         }\n//       }\n\n//       // Get balance\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n\n//     } catch (err) {\n//       console.error('Detailed error:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       const handleAccountsChanged = (accounts) => {\n//         if (accounts.length > 0) {\n//           setAccount(accounts[0]);\n//         } else {\n//           setAccount('');\n//           setBalance('');\n//         }\n//       };\n\n//       const handleChainChanged = (_chainId) => {\n//         window.location.reload();\n//       };\n\n//       window.ethereum.on('accountsChanged', handleAccountsChanged);\n//       window.ethereum.on('chainChanged', handleChainChanged);\n\n//       return () => {\n//         window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n//         window.ethereum.removeListener('chainChanged', handleChainChanged);\n//       };\n//     }\n//   }, []);\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-2xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Blockchain Voting System</h1>\n      \n//       <div className=\"bg-white rounded-lg shadow-md p-6\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n        \n//         {error && (\n//           <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//             {error}\n//           </div>\n//         )}\n\n//         {!account ? (\n//           <button\n//             onClick={connectWallet}\n//             disabled={isConnecting}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n//           </button>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-gray-100 p-4 rounded\">\n//               <p className=\"text-gray-700\">Connected Wallet Address:</p>\n//               <p className=\"font-mono break-all\">{account}</p>\n//               {balance && (\n//                 <p className=\"mt-2\">\n//                   Balance: {parseFloat(balance).toFixed(4)} ETH\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               onClick={disconnectWallet}\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Disconnect Wallet\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WalletConnect;\n// import React, { useState, useEffect } from 'react';\n// import { ethers } from 'ethers';\n// import Header from './components/Header';\n// import WalletDetails from './components/WalletDetails';\n// import ConnectButton from './components/ConnectButton';\n\n// const App = () => {\n//   const [provider, setProvider] = useState(null);\n//   const [account, setAccount] = useState('');\n//   const [balance, setBalance] = useState('');\n//   const [isConnecting, setIsConnecting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const SEPOLIA_CHAIN_ID = '0xaa36a7';\n\n//   const connectWallet = async () => {\n//     setIsConnecting(true);\n//     setError('');\n\n//     try {\n//       if (!window.ethereum) {\n//         throw new Error('Please install MetaMask!');\n//       }\n\n//       const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n//       setProvider(ethereumProvider);\n\n//       const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n//       const account = accounts[0];\n//       setAccount(account);\n\n//       const network = await ethereumProvider.getNetwork();\n//       const currentChainId = `0x${network.chainId.toString(16)}`;\n\n//       if (currentChainId !== SEPOLIA_CHAIN_ID) {\n//         await window.ethereum.request({\n//           method: 'wallet_switchEthereumChain',\n//           params: [{ chainId: SEPOLIA_CHAIN_ID }],\n//         });\n//       }\n\n//       const balance = await ethereumProvider.getBalance(account);\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error('Error connecting to wallet:', err);\n//       setError(err.message);\n//     } finally {\n//       setIsConnecting(false);\n//     }\n//   };\n\n//   const disconnectWallet = () => {\n//     setAccount('');\n//     setBalance('');\n//     setProvider(null);\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <main className=\"p-6 max-w-2xl mx-auto\">\n//         <div className=\"bg-white rounded-lg shadow-md p-6\">\n//           <h2 className=\"text-xl font-semibold mb-4\">Ethereum Sepolia Connection</h2>\n//           {error && (\n//             <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//               {error}\n//             </div>\n//           )}\n//           {!account ? (\n//             <ConnectButton onClick={connectWallet} isConnecting={isConnecting} />\n//           ) : (\n//             <WalletDetails account={account} balance={balance} onDisconnect={disconnectWallet} />\n//           )}\n//         </div>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}