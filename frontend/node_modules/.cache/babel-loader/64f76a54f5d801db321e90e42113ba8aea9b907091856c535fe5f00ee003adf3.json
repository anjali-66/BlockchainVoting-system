{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext } from \"react\";\n/**\n * @internal Exported for tests only\n */\nexport const WalletProviderContext = /* @__PURE__ */createContext(undefined);\n/**\n/**\n * A React context provider component that supplies Wallet-related data to its child components.\n *\n * This component serves as a wrapper around the `WalletProviderContext.Provider` and passes\n * the provided wallet data down to all of its child components through the context API.\n *\n * @example\n * ### Basic usage\n * ```tsx\n * import { WalletProvider, WalletIcon, WalletName } from \"thirdweb/react\";\n *\n * <WalletProvider id=\"io.metamask\">\n *   <WalletIcon />\n *   <WalletName />\n * </WalletProvider>\n * ```\n * @beta\n * @component\n * @wallet\n */\nexport function WalletProvider(props) {\n  return _jsx(WalletProviderContext.Provider, {\n    value: props,\n    children: props.children\n  });\n}\n/**\n * @internal\n */\nexport function useWalletContext() {\n  const ctx = useContext(WalletProviderContext);\n  if (!ctx) {\n    throw new Error(\"WalletProviderContext not found. Make sure you are using WalletIcon, WalletName, etc. inside a <WalletProvider /> component\");\n  }\n  return ctx;\n}\n//# sourceMappingURL=provider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}