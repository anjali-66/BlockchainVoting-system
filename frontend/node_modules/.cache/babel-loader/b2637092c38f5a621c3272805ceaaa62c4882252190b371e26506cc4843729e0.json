{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from \"react\";\n/**\n * @internal\n */\nexport function DynamicHeight(props) {\n  const {\n    height,\n    elementRef\n  } = useHeightObserver();\n  return _jsx(\"div\", {\n    style: {\n      height: height ? `${height}px` : \"auto\",\n      transition: \"height 210ms cubic-bezier(0.175, 0.885, 0.32, 1.1)\",\n      overflow: \"hidden\",\n      boxSizing: \"border-box\"\n    },\n    children: _jsx(\"div\", {\n      ref: elementRef,\n      style: {\n        maxHeight: props.maxHeight\n      },\n      children: props.children\n    })\n  });\n}\n/**\n * @internal\n */\nfunction useHeightObserver() {\n  const elementRef = useRef(null);\n  const [height, setHeight] = useState();\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(() => {\n      setHeight(element.scrollHeight);\n    });\n    resizeObserver.observe(element);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n  return {\n    height,\n    elementRef: elementRef\n  };\n}\n//# sourceMappingURL=DynamicHeight.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}