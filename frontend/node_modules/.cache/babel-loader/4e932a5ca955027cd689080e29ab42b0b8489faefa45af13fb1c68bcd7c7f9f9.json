{"ast":null,"code":"import { eth_getCode } from \"../../rpc/actions/eth_getCode.js\";\nimport { getRpcClient } from \"../../rpc/rpc.js\";\nconst BYTECODE_CACHE = new WeakMap();\n/**\n * Retrieves the bytecode of a contract.\n * @param contract - The ThirdwebContract instance.\n * @returns A Promise that resolves to the bytecode of the contract.\n * @example\n * ```ts\n * import { getBytecode } from \"thirdweb/contract\";\n * const bytecode = await getBytecode(contract);\n * ```\n * @contract\n */\nexport function getBytecode(contract) {\n  if (BYTECODE_CACHE.has(contract)) {\n    return BYTECODE_CACHE.get(contract);\n  }\n  const prom = (async () => {\n    const rpcRequest = getRpcClient(contract);\n    const result = await eth_getCode(rpcRequest, {\n      address: contract.address,\n      blockTag: \"latest\"\n    });\n    if (result === \"0x\") {\n      BYTECODE_CACHE.delete(contract);\n    }\n    return result;\n  })();\n  BYTECODE_CACHE.set(contract, prom);\n  return prom;\n}\n//# sourceMappingURL=get-bytecode.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}