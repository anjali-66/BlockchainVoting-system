{"ast":null,"code":"\"use client\";\n\nimport { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useAutoConnect } from \"../../hooks/wallets/useAutoConnect.js\";\n/**\n * AutoConnect last connected wallet on page reload or revisit.\n * Note: If you are using `ConnectButton` or `ConnectEmbed` components, You don't need to use this component as it is already included.\n *\n * This is useful if you are manually connecting the wallets using the [`useConnect`](https://portal.thirdweb.com/references/typescript/v5/useConnect) hook and want to auto connect the last connected wallets on page reload or revisit.\n *\n * You can also use the [`useAutoConnect`](https://portal.thirdweb.com/references/typescript/v5/useAutoConnect) hook to achieve the same result.\n *\n * To check if the wallet in in the process of auto connecting, you can use the [`useIsAutoConnecting`](https://portal.thirdweb.com/references/typescript/v5/useIsAutoConnecting) hook.\n *\n * @param props - Object of type `AutoConnectProps`. Refer to [`AutoConnectProps`](https://portal.thirdweb.com/references/typescript/v5/AutoConnectProps)\n * @example\n * ```tsx\n * import { AutoConnect } from \"thirdweb/react\";\n * import { createWallet, inAppWallet } from \"thirdweb/wallets\";\n *\n *\n * // list of wallets that your app uses\n * const wallets = [\n *  inAppWallet(),\n *  createWallet('io.metamask'),\n *  createWallet(\"me.rainbow\"),\n * ]\n *\n * function Example() {\n *  return (\n *    <AutoConnect\n *      wallets={wallets}\n *      client={client}\n *      appMetadata={appMetadata}\n *    />\n *  );\n * }\n * ```\n * @component\n * @walletConnection\n */\nexport function AutoConnect(props) {\n  useAutoConnect(props);\n  return _jsx(_Fragment, {});\n}\n//# sourceMappingURL=AutoConnect.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}