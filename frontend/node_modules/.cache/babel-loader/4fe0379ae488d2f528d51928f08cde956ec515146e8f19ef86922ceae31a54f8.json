{"ast":null,"code":"import { useQuery } from \"@tanstack/react-query\";\nimport { getCapabilities } from \"../../../../wallets/eip5792/get-capabilities.js\";\nimport { useActiveWallet } from \"./useActiveWallet.js\";\n/**\n * A hook to get the current wallet's capabilities according to [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).\n *\n *  This function is dependent on the wallet's support for EIP-5792, but will not throw.\n * **The returned object contains a `message` field detailing any issues with the wallet's support for EIP-5792.**\n *\n * @returns a React Query object.\n * @beta\n * @example\n * ```tsx\n * import { useCapabilities } from \"thirdweb/react\";\n * const { data: capabilities, isLoading } = useCapabilities();\n * ```\n * @extension EIP5792\n */\nexport function useCapabilities(options) {\n  const wallet = useActiveWallet();\n  return useQuery({\n    queryKey: [\"getCapabilities\", wallet?.getChain()?.id || -1, wallet?.id],\n    queryFn: async () => {\n      if (!wallet) {\n        return {\n          message: \"Can't get capabilities, no wallet connected\"\n        };\n      }\n      return getCapabilities({\n        wallet\n      });\n    },\n    retry: false,\n    ...options?.queryOptions\n  });\n}\n//# sourceMappingURL=useCapabilities.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}