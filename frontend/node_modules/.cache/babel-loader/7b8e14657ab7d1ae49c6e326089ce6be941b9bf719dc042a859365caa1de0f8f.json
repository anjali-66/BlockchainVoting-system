{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { getWalletInfo } from \"../../../../wallets/__generated__/getWalletInfo.js\";\nimport { getInstalledWalletProviders } from \"../../../../wallets/injected/mipdStore.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { radius } from \"../../../core/design-system/index.js\";\nimport { useActiveWallet } from \"../../../core/hooks/wallets/useActiveWallet.js\";\nimport { getLastAuthProvider } from \"../../../core/utils/storage.js\";\nimport { useWalletImage } from \"../../../core/utils/wallet.js\";\nimport { genericWalletIcon, getSocialIcon } from \"../../../core/utils/walletIcon.js\";\nimport { EmailIcon } from \"../ConnectWallet/icons/EmailIcon.js\";\nimport { FingerPrintIcon } from \"../ConnectWallet/icons/FingerPrintIcon.js\";\nimport { GuestIcon } from \"../ConnectWallet/icons/GuestIcon.js\";\nimport { OutlineWalletIcon } from \"../ConnectWallet/icons/OutlineWalletIcon.js\";\nimport { PhoneIcon } from \"../ConnectWallet/icons/PhoneIcon.js\";\nimport { Img } from \"./Img.js\";\n/**\n * @internal\n */\nexport function WalletImage(props) {\n  const theme = useCustomTheme();\n  const [image, setImage] = useState(undefined);\n  const activeWallet = useActiveWallet();\n  useEffect(() => {\n    async function fetchImage() {\n      // show EOA icon for external wallets\n      // show auth provider icon for in-app wallets\n      // show the admin EOA icon for smart\n      const storage = webLocalStorage;\n      const activeEOAId = props.id;\n      let image;\n      if (activeEOAId === \"inApp\" && activeWallet && (activeWallet.id === \"inApp\" || activeWallet.id === \"smart\")) {\n        // when showing an active wallet icon - check last auth provider and override the IAW icon\n        const lastAuthProvider = await getLastAuthProvider(storage);\n        image = lastAuthProvider ? {\n          uri: getSocialIcon(lastAuthProvider),\n          authProvider: lastAuthProvider\n        } : {\n          uri: \"\",\n          authProvider: \"wallet\"\n        };\n      } else {\n        const mipdImage = getInstalledWalletProviders().find(x => x.info.rdns === activeEOAId)?.info.icon;\n        if (mipdImage) {\n          image = {\n            uri: mipdImage\n          };\n        } else {\n          image = {\n            uri: await getWalletInfo(activeEOAId, true)\n          };\n        }\n      }\n      setImage(image);\n    }\n    fetchImage();\n  }, [props.id, activeWallet]);\n  if (image?.authProvider === \"email\") {\n    return _jsx(EmailIcon, {\n      size: props.size,\n      color: theme.colors.accentText\n    });\n  }\n  if (image?.authProvider === \"phone\") {\n    return _jsx(PhoneIcon, {\n      size: props.size,\n      color: theme.colors.accentText\n    });\n  }\n  if (image?.authProvider === \"passkey\") {\n    return _jsx(FingerPrintIcon, {\n      size: props.size,\n      color: theme.colors.accentText\n    });\n  }\n  if (image?.authProvider === \"wallet\") {\n    return _jsx(OutlineWalletIcon, {\n      size: props.size,\n      color: theme.colors.accentText\n    });\n  }\n  if (image?.authProvider === \"guest\") {\n    return _jsx(GuestIcon, {\n      size: props.size,\n      color: theme.colors.accentText\n    });\n  }\n  if (image?.uri) {\n    return _jsx(Img, {\n      src: image.uri,\n      width: props.size,\n      height: props.size,\n      loading: \"eager\",\n      client: props.client,\n      style: {\n        borderRadius: radius.md,\n        ...props.style\n      }\n    });\n  }\n  return _jsx(WalletImageQuery, {\n    id: props.id,\n    size: props.size,\n    client: props.client\n  });\n}\nfunction WalletImageQuery(props) {\n  const walletImage = useWalletImage(props.id);\n  if (walletImage.isFetched && !walletImage.data) {\n    return _jsx(Img, {\n      client: props.client,\n      src: genericWalletIcon,\n      width: props.size,\n      height: props.size\n    });\n  }\n  return _jsx(OutlineWalletIcon, {\n    size: props.size\n  });\n}\n//# sourceMappingURL=WalletImage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}