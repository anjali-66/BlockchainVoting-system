{"ast":null,"code":"var _jsxFileName = \"/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/Contract.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport abi from '../abi/VotingSystem.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VotingSystem = ({\n  provider,\n  account\n}) => {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [polls, setPolls] = useState([]);\n  const [newPoll, setNewPoll] = useState({\n    title: '',\n    options: ['', ''],\n    duration: 60\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (provider) {\n      const contract = new ethers.Contract(\"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\", abi, provider);\n      setContract(contract);\n    }\n  }, [provider]);\n  const createPoll = async () => {\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      const tx = await connectedContract.createPoll(newPoll.title, newPoll.options.filter(opt => opt !== ''), newPoll.duration);\n      await tx.wait();\n      setNewPoll({\n        title: '',\n        options: ['', ''],\n        duration: 60\n      });\n    } catch (error) {\n      console.error('Error creating poll:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const castVote = async (pollId, optionIndex) => {\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      const tx = await connectedContract.vote(pollId, optionIndex);\n      await tx.wait();\n    } catch (error) {\n      console.error('Error voting:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getPollDetails = async pollId => {\n    try {\n      const details = await contract.getPollDetails(pollId);\n      const results = await contract.getPollResults(pollId);\n      return {\n        ...details,\n        results\n      };\n    } catch (error) {\n      console.error('Error fetching poll details:', error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPoll.title,\n        onChange: e => setNewPoll({\n          ...newPoll,\n          title: e.target.value\n        }),\n        placeholder: \"Poll Title\",\n        className: \"w-full p-2 mb-4 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), newPoll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option,\n        onChange: e => {\n          const newOptions = [...newPoll.options];\n          newOptions[index] = e.target.value;\n          setNewPoll({\n            ...newPoll,\n            options: newOptions\n          });\n        },\n        placeholder: `Option ${index + 1}`,\n        className: \"w-full p-2 mb-2 border rounded\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNewPoll({\n          ...newPoll,\n          options: [...newPoll.options, '']\n        }),\n        className: \"bg-gray-500 text-white px-4 py-2 rounded mr-2\",\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPoll,\n        disabled: loading,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Active Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), polls.map((poll, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold\",\n          children: poll.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: poll.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => castVote(poll.pollId, optIndex),\n            className: \"bg-blue-100 hover:bg-blue-200 px-4 py-2 rounded mr-2 mb-2\",\n            children: [option, \" (\", poll.results[optIndex].toString(), \")\"]\n          }, optIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(VotingSystem, \"QILm48FnwBzBNd4JdyGwUh3dHlE=\");\n_c = VotingSystem;\nexport default VotingSystem;\nvar _c;\n$RefreshReg$(_c, \"VotingSystem\");","map":{"version":3,"names":["React","useState","useEffect","ethers","abi","jsxDEV","_jsxDEV","VotingSystem","provider","account","_s","contract","setContract","polls","setPolls","newPoll","setNewPoll","title","options","duration","loading","setLoading","Contract","createPoll","signer","getSigner","connectedContract","connect","tx","filter","opt","wait","error","console","castVote","pollId","optionIndex","vote","getPollDetails","details","results","getPollResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","option","index","newOptions","onClick","disabled","poll","optIndex","toString","_c","$RefreshReg$"],"sources":["/Users/sharmaanjali/blockchain-voting-system/frontend/src/components/Contract.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport abi from '../abi/VotingSystem.json';\n\nconst VotingSystem = ({ provider, account }) => {\n  const [contract, setContract] = useState(null);\n  const [polls, setPolls] = useState([]);\n  const [newPoll, setNewPoll] = useState({\n    title: '',\n    options: ['', ''],\n    duration: 60\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (provider) {\n      const contract = new ethers.Contract(\n        \"0x002A13DF3bB8Ce7D7143bE17223F8893e2152c29\",\n        abi,\n        provider\n      );\n      setContract(contract);\n    }\n  }, [provider]);\n\n  const createPoll = async () => {\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      \n      const tx = await connectedContract.createPoll(\n        newPoll.title,\n        newPoll.options.filter(opt => opt !== ''),\n        newPoll.duration\n      );\n      await tx.wait();\n      \n      setNewPoll({ title: '', options: ['', ''], duration: 60 });\n    } catch (error) {\n      console.error('Error creating poll:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const castVote = async (pollId, optionIndex) => {\n    try {\n      setLoading(true);\n      const signer = await provider.getSigner();\n      const connectedContract = contract.connect(signer);\n      \n      const tx = await connectedContract.vote(pollId, optionIndex);\n      await tx.wait();\n    } catch (error) {\n      console.error('Error voting:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getPollDetails = async (pollId) => {\n    try {\n      const details = await contract.getPollDetails(pollId);\n      const results = await contract.getPollResults(pollId);\n      return { ...details, results };\n    } catch (error) {\n      console.error('Error fetching poll details:', error);\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <div className=\"mb-8 bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold mb-4\">Create New Poll</h2>\n        <input\n          type=\"text\"\n          value={newPoll.title}\n          onChange={(e) => setNewPoll({...newPoll, title: e.target.value})}\n          placeholder=\"Poll Title\"\n          className=\"w-full p-2 mb-4 border rounded\"\n        />\n        {newPoll.options.map((option, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            value={option}\n            onChange={(e) => {\n              const newOptions = [...newPoll.options];\n              newOptions[index] = e.target.value;\n              setNewPoll({...newPoll, options: newOptions});\n            }}\n            placeholder={`Option ${index + 1}`}\n            className=\"w-full p-2 mb-2 border rounded\"\n          />\n        ))}\n        <button\n          onClick={() => setNewPoll({...newPoll, options: [...newPoll.options, '']})}\n          className=\"bg-gray-500 text-white px-4 py-2 rounded mr-2\"\n        >\n          Add Option\n        </button>\n        <button\n          onClick={createPoll}\n          disabled={loading}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Create Poll\n        </button>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold mb-4\">Active Polls</h2>\n        {polls.map((poll, index) => (\n          <div key={index} className=\"border-b py-4\">\n            <h3 className=\"font-bold\">{poll.title}</h3>\n            <div className=\"mt-2\">\n              {poll.options.map((option, optIndex) => (\n                <button\n                  key={optIndex}\n                  onClick={() => castVote(poll.pollId, optIndex)}\n                  className=\"bg-blue-100 hover:bg-blue-200 px-4 py-2 rounded mr-2 mb-2\"\n                >\n                  {option} ({poll.results[optIndex].toString()})\n                </button>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VotingSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}