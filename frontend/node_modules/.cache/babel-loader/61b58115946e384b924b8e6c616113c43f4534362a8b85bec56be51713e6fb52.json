{"ast":null,"code":"const operatingSystemRules = [[\"iOS\", /iP(hone|od|ad)/], [\"Android OS\", /Android/], [\"BlackBerry OS\", /BlackBerry|BB10/], [\"Windows Mobile\", /IEMobile/], [\"Amazon OS\", /Kindle/], [\"Windows 3.11\", /Win16/], [\"Windows 95\", /(Windows 95)|(Win95)|(Windows_95)/], [\"Windows 98\", /(Windows 98)|(Win98)/], [\"Windows 2000\", /(Windows NT 5.0)|(Windows 2000)/], [\"Windows XP\", /(Windows NT 5.1)|(Windows XP)/], [\"Windows Server 2003\", /(Windows NT 5.2)/], [\"Windows Vista\", /(Windows NT 6.0)/], [\"Windows 7\", /(Windows NT 6.1)/], [\"Windows 8\", /(Windows NT 6.2)/], [\"Windows 8.1\", /(Windows NT 6.3)/], [\"Windows 10\", /(Windows NT 10.0)/], [\"Windows ME\", /Windows ME/], [\"Windows CE\", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/], [\"Open BSD\", /OpenBSD/], [\"Sun OS\", /SunOS/], [\"Chrome OS\", /CrOS/], [\"Linux\", /(Linux)|(X11)/], [\"Mac OS\", /(Mac_PowerPC)|(Macintosh)/], [\"QNX\", /QNX/], [\"BeOS\", /BeOS/], [\"OS/2\", /OS\\/2/]];\nexport function detectPlatform() {\n  if (typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    // react-native\n    return \"mobile\";\n  }\n  if (typeof navigator !== \"undefined\") {\n    return \"browser\";\n  }\n  return \"node\";\n}\nexport function detectOS(ua) {\n  for (let ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    const [os, regex] = operatingSystemRules[ii];\n    const match = regex.exec(ua);\n    if (match) {\n      return os;\n    }\n  }\n  return null;\n}\n//# sourceMappingURL=detect-platform.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}