{"ast":null,"code":"import { toFunctionSelector } from \"viem\";\n/**\n * Detects if the specified method is present in the contract bytecode.\n * @param options - The options for detecting the extension.\n * @returns A promise that resolves to a boolean indicating if the extension is detected.\n * @example\n * ```ts\n * import { detectMethod } from \"thirdweb/utils/extensions/detect.js\";\n * const hasDecimals = await detectMethod({\n *  method: \"function decimals() view returns (uint8)\",\n *  availableSelectors: [\"0x313ce567\"],\n * });\n * ```\n * @contract\n */\nexport function detectMethod(options) {\n  const fnSelector = Array.isArray(options.method) ? options.method[0] : toFunctionSelector(options.method);\n  return options.availableSelectors.includes(fnSelector);\n}\n//# sourceMappingURL=detectExtension.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}