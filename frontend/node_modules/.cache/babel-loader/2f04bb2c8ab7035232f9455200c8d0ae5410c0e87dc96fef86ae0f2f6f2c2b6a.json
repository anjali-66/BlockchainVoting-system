{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { CheckIcon, MinusIcon, PlusIcon } from \"@radix-ui/react-icons\";\nimport { useState } from \"react\";\nimport { shortenAddress } from \"../../../../../../utils/address.js\";\nimport { useCustomTheme } from \"../../../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, iconSize, spacing } from \"../../../../../core/design-system/index.js\";\nimport { useWalletBalance } from \"../../../../../core/hooks/others/useWalletBalance.js\";\nimport { useActiveWallet } from \"../../../../../core/hooks/wallets/useActiveWallet.js\";\nimport { useConnectedWallets } from \"../../../../../core/hooks/wallets/useConnectedWallets.js\";\nimport { useDisconnect } from \"../../../../../core/hooks/wallets/useDisconnect.js\";\nimport { useSetActiveWallet } from \"../../../../../core/hooks/wallets/useSetActiveWallet.js\";\nimport { Skeleton } from \"../../../components/Skeleton.js\";\nimport { Spacer } from \"../../../components/Spacer.js\";\nimport { ToolTip } from \"../../../components/Tooltip.js\";\nimport { WalletImage } from \"../../../components/WalletImage.js\";\nimport { Container, Line, ModalHeader } from \"../../../components/basic.js\";\nimport { Button, IconButton } from \"../../../components/buttons.js\";\nimport { Text } from \"../../../components/text.js\";\nimport { WalletButtonEl } from \"../../WalletEntryButton.js\";\nimport { WalletSwitcherConnectionScreen } from \"../WalletSwitcherConnectionScreen.js\";\nimport { formatTokenBalance } from \"../formatTokenBalance.js\";\nexport function WalletManagerScreen(props) {\n  const [screen, setScreen] = useState(\"wallets\");\n  const connectedWallets = useConnectedWallets();\n  const setActive = useSetActiveWallet();\n  // if all wallets are connected and showAll wallets is disabled, hide the connect button\n  const hideConnectButton = !props.showAllWallets && props.wallets?.every(w => connectedWallets.includes(w));\n  if (screen === \"connect\") {\n    return _jsx(WalletSwitcherConnectionScreen, {\n      ...props,\n      isEmbed: false,\n      onSelect: w => {\n        setActive(w);\n        props.onBack();\n      }\n    });\n  }\n  return _jsxs(Container, {\n    children: [_jsx(Container, {\n      p: \"lg\",\n      children: _jsx(ModalHeader, {\n        title: \"Wallets\",\n        onBack: props.onBack\n      })\n    }), _jsx(Line, {}), _jsx(Spacer, {\n      y: \"md\"\n    }), _jsx(Container, {\n      px: \"md\",\n      style: {\n        minHeight: \"150px\"\n      },\n      children: _jsx(Container, {\n        flex: \"column\",\n        gap: \"xs\",\n        children: connectedWallets.filter(w => !props.hiddenWallets?.includes(w.id)).map(w => {\n          return _jsx(WalletManangerButton, {\n            client: props.client,\n            // address={address || \"\"}\n            onClick: () => {\n              setActive(w);\n              props.onBack();\n            },\n            chain: props.activeChain,\n            wallet: w\n          }, w.id);\n        })\n      })\n    }), _jsx(Spacer, {\n      y: \"xxl\"\n    }), _jsx(Container, {\n      p: \"lg\",\n      children: !hideConnectButton && _jsxs(Button, {\n        variant: \"accent\",\n        fullWidth: true,\n        onClick: () => {\n          setScreen(\"connect\");\n        },\n        gap: \"xs\",\n        children: [_jsx(PlusIcon, {\n          width: iconSize.sm,\n          height: iconSize.sm\n        }), \"Connect Wallet\"]\n      })\n    })]\n  });\n}\nfunction WalletManangerButton(props) {\n  const theme = useCustomTheme();\n  const activeWallet = useActiveWallet();\n  const {\n    disconnect\n  } = useDisconnect();\n  const walletId = props.wallet.id;\n  const address = props.wallet.getAccount()?.address;\n  const balanceQuery = useWalletBalance({\n    address: address,\n    chain: props.chain,\n    client: props.client\n  });\n  return _jsxs(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [_jsx(WalletButtonEl, {\n      onClick: props.onClick,\n      style: {\n        justifyContent: \"space-between\"\n      },\n      children: _jsxs(Container, {\n        flex: \"row\",\n        gap: \"md\",\n        center: \"y\",\n        children: [_jsx(WalletImage, {\n          client: props.client,\n          id: walletId,\n          size: iconSize.lg\n        }), _jsxs(Container, {\n          flex: \"column\",\n          gap: \"4xs\",\n          children: [_jsx(Text, {\n            color: \"primaryText\",\n            children: shortenAddress(address || \"\")\n          }), balanceQuery.data ? _jsx(Text, {\n            size: \"xs\",\n            color: \"secondaryText\",\n            weight: 400,\n            children: formatTokenBalance(balanceQuery.data)\n          }) : _jsx(Skeleton, {\n            width: \"100px\",\n            height: fontSize.sm\n          })]\n        })]\n      })\n    }), _jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1,\n        right: spacing.xxs,\n        top: \"50%\",\n        transform: \"translateY(-50%)\"\n      },\n      children: activeWallet?.id === props.wallet.id ? _jsx(ToolTip, {\n        tip: \"Active Wallet\",\n        children: _jsx(IconButton, {\n          children: _jsx(CheckIcon, {\n            width: iconSize.md,\n            height: iconSize.md\n          })\n        })\n      }) : _jsx(ToolTip, {\n        tip: \"Disconnect\",\n        children: _jsx(IconButton, {\n          onClick: () => {\n            disconnect(props.wallet);\n          },\n          children: _jsx(MinusIcon, {\n            width: iconSize.md,\n            height: iconSize.md,\n            style: {\n              color: theme.colors.secondaryText\n            }\n          })\n        })\n      })\n    })]\n  });\n}\n//# sourceMappingURL=WalletManagerScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}