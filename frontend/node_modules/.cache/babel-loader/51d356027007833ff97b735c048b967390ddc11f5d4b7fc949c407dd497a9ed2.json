{"ast":null,"code":"/**\n * @internal\n */\nfunction isHttpUrl(url) {\n  return url.startsWith(\"http://\") || url.startsWith(\"https://\");\n}\n/**\n * @internal\n */\nfunction formatUniversalUrl(appUrl, wcUri) {\n  if (!isHttpUrl(appUrl)) {\n    return formatNativeUrl(appUrl, wcUri);\n  }\n  let safeAppUrl = appUrl;\n  if (!safeAppUrl.endsWith(\"/\")) {\n    safeAppUrl = `${safeAppUrl}/`;\n  }\n  const encodedWcUrl = encodeURIComponent(wcUri);\n  return {\n    redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,\n    href: safeAppUrl\n  };\n}\n/**\n * @internal\n */\nfunction formatNativeUrl(appUrl, wcUri) {\n  if (isHttpUrl(appUrl)) {\n    return formatUniversalUrl(appUrl, wcUri);\n  }\n  let safeAppUrl = appUrl;\n  if (!safeAppUrl.includes(\"://\")) {\n    safeAppUrl = appUrl.replaceAll(\"/\", \"\").replaceAll(\":\", \"\");\n    safeAppUrl = `${safeAppUrl}://`;\n  }\n  if (!safeAppUrl.endsWith(\"/\")) {\n    safeAppUrl = `${safeAppUrl}/`;\n  }\n  const encodedWcUrl = encodeURIComponent(wcUri);\n  return {\n    redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,\n    href: safeAppUrl\n  };\n}\n/**\n * @internal\n */\nexport function formatWalletConnectUrl(appUrl, wcUri) {\n  return isHttpUrl(appUrl) ? formatUniversalUrl(appUrl, wcUri) : formatNativeUrl(appUrl, wcUri);\n}\nexport function formatExplorerTxUrl(explorerUrl, txHash) {\n  return `${explorerUrl.endsWith(\"/\") ? explorerUrl : `${explorerUrl}/`}tx/${txHash}`;\n}\nexport function formatExplorerAddressUrl(explorerUrl, address) {\n  return `${explorerUrl.endsWith(\"/\") ? explorerUrl : `${explorerUrl}/`}address/${address}`;\n}\n//# sourceMappingURL=url.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}