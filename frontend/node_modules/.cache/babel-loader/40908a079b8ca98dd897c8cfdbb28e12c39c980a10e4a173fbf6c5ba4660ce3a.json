{"ast":null,"code":"/**\n * @internal\n */\nexport function openWindow(uri) {\n  const isInsideIframe = window !== window.top;\n  if (isInsideIframe) {\n    window.open(uri);\n  } else {\n    if (uri.startsWith(\"http\")) {\n      // taken from for https://github.com/rainbow-me/rainbowkit/\n      // Using 'window.open' causes issues on iOS in non-Safari browsers and\n      // WebViews where a blank tab is left behind after connecting.\n      // This is especially bad in some WebView scenarios (e.g. following a\n      // link from Twitter) where the user doesn't have any mechanism for\n      // closing the blank tab.\n      // For whatever reason, links with a target of \"_blank\" don't suffer\n      // from this problem, and programmatically clicking a detached link\n      // element with the same attributes also avoids the issue.\n      const link = document.createElement(\"a\");\n      link.href = uri;\n      link.target = \"_blank\";\n      link.rel = \"noreferrer noopener\";\n      link.click();\n    } else {\n      window.location.href = uri;\n    }\n  }\n}\n//# sourceMappingURL=openWindow.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}