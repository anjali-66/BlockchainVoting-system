{"ast":null,"code":"import { isAddress } from \"../utils/address.js\";\n/**\n * Creates a Thirdweb contract by combining the Thirdweb client and contract options.\n * @param options - The options for creating the contract.\n * @returns The Thirdweb contract.\n * @example\n * ```ts\n * import { createThirdwebClient, getContract } from \"thirdweb\";\n * import { sepolia } from \"thirdweb/chains\";\n *\n * const client = createThirdwebClient({ clientId: \"...\" });\n * const contract = getContract({\n *  client,\n *  chain: sepolia,\n *  address: \"0x123...\",\n *  // optional ABI\n *  abi: [...],\n * });\n * ```\n * @contract\n */\nexport function getContract(options) {\n  if (!options.client) {\n    throw new Error(`getContract validation error - invalid client: ${options.client}`);\n  }\n  if (!isAddress(options.address)) {\n    throw new Error(`getContract validation error - invalid address: ${options.address}`);\n  }\n  if (!options.chain || !options.chain.id) {\n    throw new Error(`getContract validation error - invalid chain: ${options.chain}`);\n  }\n  return options;\n}\n//# sourceMappingURL=contract.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}