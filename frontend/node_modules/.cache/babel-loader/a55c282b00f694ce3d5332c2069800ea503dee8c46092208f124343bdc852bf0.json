{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ConnectingScreen } from \"./ConnectingScreen.js\";\n/**\n * @internal\n */\nfunction ExternalWalletConnectUI(props) {\n  const {\n    onBack,\n    done,\n    wallet,\n    walletInfo,\n    onGetStarted,\n    locale\n  } = props;\n  const [errorConnecting, setErrorConnecting] = useState(false);\n  const connect = useCallback(() => {\n    setErrorConnecting(false);\n    wallet.connect({\n      client: props.client,\n      chain: props.chain\n    }).then(() => {\n      done();\n    }).catch(e => {\n      console.error(e);\n      setErrorConnecting(true);\n    });\n  }, [props.client, wallet, props.chain, done]);\n  const scanStarted = useRef(false);\n  useEffect(() => {\n    if (scanStarted.current) {\n      return;\n    }\n    scanStarted.current = true;\n    connect();\n  }, [connect]);\n  return _jsx(ConnectingScreen, {\n    locale: {\n      getStartedLink: locale.getStartedLink,\n      instruction: locale.connectionScreen.instruction,\n      tryAgain: locale.connectionScreen.retry,\n      inProgress: locale.connectionScreen.inProgress,\n      failed: locale.connectionScreen.failed\n    },\n    onBack: onBack,\n    walletName: walletInfo.name,\n    walletId: wallet.id,\n    errorConnecting: errorConnecting,\n    onRetry: connect,\n    onGetStarted: onGetStarted,\n    client: props.client,\n    size: props.size\n  });\n}\nexport default ExternalWalletConnectUI;\n//# sourceMappingURL=CoinbaseSDKConnection.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}