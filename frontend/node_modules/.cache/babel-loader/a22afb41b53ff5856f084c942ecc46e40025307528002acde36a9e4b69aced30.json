{"ast":null,"code":"// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\n// TODO: clean up, or possibly deprecate Storage class\nexport class ScopedLocalStorage {\n  constructor(scope, module) {\n    this.scope = scope;\n    this.module = module;\n  }\n  storeObject(key, item) {\n    this.setItem(key, JSON.stringify(item));\n  }\n  loadObject(key) {\n    const item = this.getItem(key);\n    return item ? JSON.parse(item) : undefined;\n  }\n  setItem(key, value) {\n    localStorage.setItem(this.scopedKey(key), value);\n  }\n  getItem(key) {\n    return localStorage.getItem(this.scopedKey(key));\n  }\n  removeItem(key) {\n    localStorage.removeItem(this.scopedKey(key));\n  }\n  clear() {\n    const prefix = this.scopedKey('');\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (typeof key === 'string' && key.startsWith(prefix)) {\n        keysToRemove.push(key);\n      }\n    }\n    keysToRemove.forEach(key => localStorage.removeItem(key));\n  }\n  scopedKey(key) {\n    return `-${this.scope}${this.module ? `:${this.module}` : ''}:${key}`;\n  }\n  static clearAll() {\n    new ScopedLocalStorage('CBWSDK').clear();\n    new ScopedLocalStorage('walletlink').clear();\n  }\n}\n//# sourceMappingURL=ScopedLocalStorage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}