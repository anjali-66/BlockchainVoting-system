{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext } from \"react\";\nimport { darkThemeObj, lightThemeObj } from \"./index.js\";\nconst CustomThemeCtx = /* @__PURE__ */createContext(darkThemeObj);\n/**\n * @internal\n */\nexport function CustomThemeProvider(props) {\n  const {\n    theme,\n    children\n  } = props;\n  const themeObj = parseTheme(theme);\n  return _jsx(CustomThemeCtx.Provider, {\n    value: themeObj,\n    children: children\n  });\n}\nexport function parseTheme(theme) {\n  if (!theme || !isValidTheme(theme)) {\n    return darkThemeObj;\n  }\n  let themeObj;\n  if (typeof theme === \"string\") {\n    themeObj = theme === \"light\" ? lightThemeObj : darkThemeObj;\n  } else {\n    themeObj = theme;\n  }\n  return themeObj;\n}\nfunction isValidTheme(theme) {\n  return theme === \"dark\" || theme === \"light\" || typeof theme === \"object\" && theme !== null && \"colors\" in theme;\n}\n/**\n *\n * @internal\n */\nexport function useCustomTheme() {\n  return useContext(CustomThemeCtx);\n}\n//# sourceMappingURL=CustomThemeProvider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}