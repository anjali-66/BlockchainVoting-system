{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { keyframes } from \"@emotion/react\";\nimport { ReloadIcon } from \"@radix-ui/react-icons\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useCustomTheme } from \"../../../../core/design-system/CustomThemeProvider.js\";\nimport { iconSize, radius, spacing } from \"../../../../core/design-system/index.js\";\nimport { useSiweAuth } from \"../../../../core/hooks/auth/useSiweAuth.js\";\nimport { useActiveAccount } from \"../../../../core/hooks/wallets/useActiveAccount.js\";\nimport { useActiveWallet } from \"../../../../core/hooks/wallets/useActiveWallet.js\";\nimport { useAdminWallet } from \"../../../../core/hooks/wallets/useAdminWallet.js\";\nimport { useDisconnect } from \"../../../../core/hooks/wallets/useDisconnect.js\";\nimport { wait } from \"../../../../core/utils/wait.js\";\nimport { LoadingScreen } from \"../../../wallets/shared/LoadingScreen.js\";\nimport { Spacer } from \"../../components/Spacer.js\";\nimport { Spinner } from \"../../components/Spinner.js\";\nimport { WalletImage } from \"../../components/WalletImage.js\";\nimport { Container, ModalHeader } from \"../../components/basic.js\";\nimport { Button } from \"../../components/buttons.js\";\nimport { Text } from \"../../components/text.js\";\nimport { StyledDiv } from \"../../design-system/elements.js\";\nimport { TOS } from \"../Modal/TOS.js\";\nimport { WalletLogoSpinner } from \"./WalletLogoSpinner.js\";\nexport const SignatureScreen = props => {\n  const {\n    onDone,\n    modalSize,\n    termsOfServiceUrl,\n    privacyPolicyUrl,\n    connectLocale\n  } = props;\n  const wallet = useActiveWallet();\n  const adminWallet = useAdminWallet();\n  const activeAccount = useActiveAccount();\n  const siweAuth = useSiweAuth(wallet, activeAccount, props.auth);\n  const [error, setError] = useState(undefined);\n  const [status, setStatus] = useState(error ? \"failed\" : \"idle\");\n  const {\n    disconnect\n  } = useDisconnect();\n  const locale = connectLocale.signatureScreen;\n  const signIn = useCallback(async () => {\n    try {\n      setError(undefined);\n      setStatus(\"signing\");\n      await siweAuth.doLogin();\n      onDone?.();\n    } catch (err) {\n      await wait(1000);\n      setError(err.message);\n      setStatus(\"failed\");\n    }\n  }, [onDone, siweAuth]);\n  if (!wallet) {\n    return _jsx(LoadingScreen, {\n      \"data-testid\": \"loading-screen\"\n    });\n  }\n  if (wallet.id === \"inApp\" || wallet.id === \"embedded\" || wallet.id === \"smart\" && adminWallet?.id === \"inApp\") {\n    return _jsx(HeadlessSignIn, {\n      error: error,\n      signIn: signIn,\n      status: status,\n      connectLocale: connectLocale,\n      wallet: wallet\n    });\n  }\n  const handleRetry = () => {\n    signIn();\n  };\n  return _jsxs(Container, {\n    animate: \"fadein\",\n    fullHeight: true,\n    flex: \"column\",\n    children: [_jsx(Container, {\n      p: \"lg\",\n      style: {\n        paddingBottom: 0\n      },\n      children: _jsx(ModalHeader, {\n        title: locale.instructionScreen.title\n      })\n    }), _jsx(Container, {\n      style: {\n        paddingTop: 0,\n        paddingBottom: spacing.xl\n      },\n      flex: \"column\",\n      px: modalSize === \"compact\" ? \"lg\" : \"xxl\",\n      center: \"y\",\n      expand: true,\n      children: status === \"idle\" ? _jsxs(_Fragment, {\n        children: [_jsx(Container, {\n          flex: \"row\",\n          center: \"x\",\n          animate: \"fadein\",\n          py: \"3xl\",\n          children: _jsx(PulsatingContainer, {\n            children: _jsx(WalletImage, {\n              id: wallet.id,\n              client: props.client,\n              size: \"80\"\n            })\n          })\n        }), _jsx(Text, {\n          center: true,\n          multiline: true,\n          balance: true,\n          children: locale.instructionScreen.instruction\n        }), _jsx(Spacer, {\n          y: \"lg\"\n        }), _jsx(Button, {\n          fullWidth: true,\n          variant: \"accent\",\n          \"data-testid\": \"sign-in-button\",\n          onClick: signIn,\n          style: {\n            alignItems: \"center\",\n            padding: spacing.md\n          },\n          children: connectLocale.signatureScreen.instructionScreen.signInButton\n        }), _jsx(Spacer, {\n          y: \"sm\"\n        }), _jsx(Button, {\n          fullWidth: true,\n          variant: \"secondary\",\n          \"data-testid\": \"disconnect-button\",\n          onClick: () => {\n            disconnect(wallet);\n          },\n          style: {\n            alignItems: \"center\",\n            padding: spacing.md\n          },\n          children: connectLocale.signatureScreen.instructionScreen.disconnectWallet\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Container, {\n          py: \"3xl\",\n          children: _jsx(WalletLogoSpinner, {\n            client: props.client,\n            error: status === \"failed\",\n            id: wallet.id\n          })\n        }), _jsxs(Container, {\n          flex: \"column\",\n          gap: \"md\",\n          animate: \"fadein\",\n          children: [_jsx(Text, {\n            size: \"lg\",\n            center: true,\n            color: \"primaryText\",\n            children: status === \"failed\" ? error || locale.signingScreen.failedToSignIn : locale.signingScreen.inProgress\n          }), status === \"signing\" && _jsx(Text, {\n            center: true,\n            multiline: true,\n            balance: true,\n            children: connectLocale.signatureScreen.signingScreen.prompt\n          }), status === \"failed\" && _jsxs(Container, {\n            children: [_jsx(Spacer, {\n              y: \"sm\"\n            }), _jsxs(Button, {\n              fullWidth: true,\n              variant: \"accent\",\n              onClick: handleRetry,\n              style: {\n                gap: spacing.xs,\n                alignItems: \"center\",\n                padding: spacing.md\n              },\n              children: [_jsx(ReloadIcon, {\n                width: iconSize.sm,\n                height: iconSize.sm\n              }), locale.signingScreen.tryAgain]\n            }), _jsx(Spacer, {\n              y: \"sm\"\n            }), _jsx(Button, {\n              fullWidth: true,\n              variant: \"secondary\",\n              onClick: () => {\n                disconnect(wallet);\n              },\n              style: {\n                alignItems: \"center\",\n                padding: spacing.md\n              },\n              children: locale.instructionScreen.disconnectWallet\n            })]\n          })]\n        }, status)]\n      })\n    }), (termsOfServiceUrl || privacyPolicyUrl) && _jsx(Container, {\n      p: \"md\",\n      animate: \"fadein\",\n      children: _jsx(TOS, {\n        termsOfServiceUrl: termsOfServiceUrl,\n        privacyPolicyUrl: privacyPolicyUrl,\n        locale: connectLocale.agreement\n      })\n    })]\n  });\n};\nfunction HeadlessSignIn({\n  signIn,\n  error,\n  status,\n  connectLocale,\n  wallet\n}) {\n  const locale = connectLocale.signatureScreen;\n  const mounted = useRef(false);\n  const {\n    disconnect\n  } = useDisconnect();\n  useEffect(() => {\n    if (mounted.current) {\n      return;\n    }\n    mounted.current = true;\n    signIn();\n  }, [signIn]);\n  return _jsxs(Container, {\n    p: \"lg\",\n    fullHeight: true,\n    flex: \"column\",\n    animate: \"fadein\",\n    children: [_jsx(ModalHeader, {\n      title: locale.signingScreen.title\n    }), _jsxs(Container, {\n      expand: true,\n      flex: \"row\",\n      center: \"both\",\n      style: {\n        minHeight: \"250px\"\n      },\n      children: [status === \"signing\" && _jsx(Spinner, {\n        size: \"xl\",\n        color: \"accentText\"\n      }), status === \"failed\" && _jsxs(Container, {\n        children: [_jsx(Spacer, {\n          y: \"lg\"\n        }), _jsx(Text, {\n          size: \"lg\",\n          center: true,\n          color: \"danger\",\n          children: error || locale.signingScreen.failedToSignIn\n        }), _jsx(Spacer, {\n          y: \"lg\"\n        }), _jsxs(Button, {\n          fullWidth: true,\n          variant: \"accent\",\n          onClick: () => {\n            signIn();\n          },\n          style: {\n            gap: spacing.xs,\n            alignItems: \"center\",\n            padding: spacing.md\n          },\n          children: [_jsx(ReloadIcon, {\n            width: iconSize.sm,\n            height: iconSize.sm\n          }), locale.signingScreen.tryAgain]\n        }), _jsx(Spacer, {\n          y: \"sm\"\n        }), _jsx(Button, {\n          fullWidth: true,\n          variant: \"secondary\",\n          onClick: () => {\n            disconnect(wallet);\n          },\n          \"data-testid\": \"disconnect-button\",\n          style: {\n            alignItems: \"center\",\n            padding: spacing.md\n          },\n          children: locale.instructionScreen.disconnectWallet\n        })]\n      })]\n    })]\n  });\n}\nconst pulseAnimation = keyframes`\n0% {\n  transform: scale(0.9);\n}\n100% {\n  opacity: 0;\n  transform: scale(1.4);\n}\n`;\nconst PulsatingContainer = /* @__PURE__ */StyledDiv(_ => {\n  const theme = useCustomTheme();\n  return {\n    position: \"relative\",\n    \"&::before\": {\n      content: '\"\"',\n      display: \"block\",\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0,\n      background: theme.colors.accentText,\n      animation: `${pulseAnimation} 2s cubic-bezier(0.175, 0.885, 0.32, 1.1) infinite`,\n      zIndex: -1,\n      borderRadius: radius.xl\n    }\n  };\n});\n//# sourceMappingURL=SignatureScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}