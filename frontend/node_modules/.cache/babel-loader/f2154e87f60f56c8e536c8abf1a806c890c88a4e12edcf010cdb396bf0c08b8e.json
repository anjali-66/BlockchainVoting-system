{"ast":null,"code":"\"use client\";\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { ExternalLinkIcon } from \"@radix-ui/react-icons\";\nimport { useState } from \"react\";\nimport { formatExplorerAddressUrl } from \"../../../../utils/url.js\";\nimport { iconSize } from \"../../../core/design-system/index.js\";\nimport { useChainExplorers } from \"../../../core/hooks/others/useChainQuery.js\";\nimport { useActiveAccount } from \"../../../core/hooks/wallets/useActiveAccount.js\";\nimport { useActiveWallet } from \"../../../core/hooks/wallets/useActiveWallet.js\";\nimport { useActiveWalletChain } from \"../../../core/hooks/wallets/useActiveWalletChain.js\";\nimport { LoadingScreen } from \"../../wallets/shared/LoadingScreen.js\";\nimport { Spacer } from \"../components/Spacer.js\";\nimport Tabs from \"../components/Tabs.js\";\nimport { Container, Line, ModalHeader } from \"../components/basic.js\";\nimport { ButtonLink } from \"../components/buttons.js\";\nimport { CoinsIcon } from \"./icons/CoinsIcon.js\";\nimport { FundsIcon } from \"./icons/FundsIcon.js\";\nimport { PayTxHistoryList } from \"./screens/Buy/pay-transactions/BuyTxHistory.js\";\nimport { TxDetailsScreen } from \"./screens/Buy/pay-transactions/TxDetailsScreen.js\";\nimport { WalletTransactionHistory } from \"./screens/WalletTransactionHistory.js\";\n//\n/**\n * @internal\n */\nexport function TransactionsScreen(props) {\n  const [activeTab, setActiveTab] = useState(\"Transactions\");\n  // For now, you can only select pay transactions (purcahses)\n  const [selectedTx, setSelectedTx] = useState(null);\n  const activeChain = useActiveWalletChain();\n  const activeWallet = useActiveWallet();\n  const activeAccount = useActiveAccount();\n  const chainExplorers = useChainExplorers(activeChain);\n  const payer = activeChain && activeAccount && activeWallet ? {\n    chain: activeChain,\n    account: activeAccount,\n    wallet: activeWallet\n  } : undefined;\n  if (!payer) {\n    return _jsx(LoadingScreen, {});\n  }\n  if (selectedTx) {\n    return _jsx(TxDetailsScreen, {\n      title: props.title,\n      client: props.client,\n      statusInfo: selectedTx,\n      onBack: () => setSelectedTx(null),\n      onDone: () => setSelectedTx(null),\n      payer: payer,\n      transactionMode: false,\n      isEmbed: false\n    });\n  }\n  return _jsxs(Container, {\n    animate: \"fadein\",\n    children: [_jsx(Container, {\n      p: \"lg\",\n      children: _jsx(ModalHeader, {\n        title: props.locale.transactions,\n        onBack: props.onBack\n      })\n    }), _jsx(Line, {}), _jsxs(Container, {\n      px: \"lg\",\n      scrollY: true,\n      style: {\n        minHeight: \"330px\"\n      },\n      children: [_jsx(Spacer, {\n        y: \"md\"\n      }), _jsxs(Tabs, {\n        options: [{\n          label: _jsxs(\"span\", {\n            className: \"flex gap-2\",\n            children: [_jsx(CoinsIcon, {\n              size: iconSize.sm\n            }), \" Transactions\"]\n          }),\n          value: \"Transactions\"\n        }, {\n          label: _jsxs(\"span\", {\n            className: \"flex gap-2\",\n            children: [_jsx(FundsIcon, {\n              size: iconSize.sm\n            }), \" Purchases\"]\n          }),\n          value: \"Purchases\"\n        }],\n        selected: activeTab,\n        onSelect: setActiveTab,\n        children: [activeTab === \"Purchases\" && _jsx(PayTxHistoryList, {\n          client: props.client,\n          onSelectTx: setSelectedTx\n        }), activeTab === \"Transactions\" && _jsx(WalletTransactionHistory, {\n          locale: props.locale,\n          client: props.client,\n          address: payer.account.address\n        })]\n      })]\n    }), _jsx(Line, {}), _jsx(Container, {\n      p: \"lg\",\n      children: _jsxs(ButtonLink, {\n        fullWidth: true,\n        variant: \"outline\",\n        href: formatExplorerAddressUrl(chainExplorers.explorers[0]?.url ?? \"\", activeAccount?.address ?? \"\"),\n        target: \"_blank\",\n        as: \"a\",\n        gap: \"xs\",\n        style: {\n          textDecoration: \"none\",\n          color: \"inherit\"\n        },\n        children: [\"View on Explorer\", _jsx(ExternalLinkIcon, {\n          width: iconSize.sm,\n          height: iconSize.sm\n        })]\n      })\n    })]\n  });\n}\n//# sourceMappingURL=TransactionsScreen.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}