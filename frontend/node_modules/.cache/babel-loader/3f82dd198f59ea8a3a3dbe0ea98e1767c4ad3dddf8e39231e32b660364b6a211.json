{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from \"@emotion/styled\";\nimport { getCachedChain } from \"../../../../../../../chains/utils.js\";\nimport { formatNumber } from \"../../../../../../../utils/formatNumber.js\";\nimport { useCustomTheme } from \"../../../../../../core/design-system/CustomThemeProvider.js\";\nimport { spacing } from \"../../../../../../core/design-system/index.js\";\nimport { ChainName } from \"../../../../components/ChainName.js\";\nimport { Spacer } from \"../../../../components/Spacer.js\";\nimport { Container } from \"../../../../components/basic.js\";\nimport { Button } from \"../../../../components/buttons.js\";\nimport { Text } from \"../../../../components/text.js\";\nimport { PayTokenIcon } from \"../PayTokenIcon.js\";\nimport { getBuyWithCryptoStatusMeta, getBuyWithFiatStatusMeta } from \"./statusMeta.js\";\nexport const BuyTxHistoryButtonHeight = \"62px\";\nexport function BuyTxHistoryButton(props) {\n  const statusMeta = props.txInfo.type === \"swap\" ? getBuyWithCryptoStatusMeta(props.txInfo.status) : getBuyWithFiatStatusMeta(props.txInfo.status);\n  return _jsxs(TxButton, {\n    onClick: props.onClick,\n    variant: \"secondary\",\n    fullWidth: true,\n    style: {\n      paddingBlock: spacing.sm\n    },\n    children: [_jsxs(Container, {\n      flex: \"row\",\n      center: \"y\",\n      gap: \"sm\",\n      style: {\n        flex: 1\n      },\n      children: [_jsx(PayTokenIcon, {\n        client: props.client,\n        chain: getCachedChain(props.txInfo.status.quote.toToken.chainId),\n        size: \"md\",\n        token: {\n          address: props.txInfo.status.quote.toToken.tokenAddress\n        }\n      }), _jsxs(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Container, {\n          flex: \"row\",\n          gap: \"xs\",\n          center: \"y\",\n          style: {\n            justifyContent: \"space-between\"\n          },\n          children: _jsxs(Text, {\n            size: \"sm\",\n            color: \"primaryText\",\n            children: [\"Buy\", \" \", formatNumber(Number(props.txInfo.type === \"swap\" ? props.txInfo.status.quote.toAmount : props.txInfo.status.quote.estimatedToTokenAmount), 6), \" \", props.txInfo.status.quote.toToken.symbol]\n          })\n        }), _jsx(Spacer, {\n          y: \"xxs\"\n        }), _jsx(Container, {\n          flex: \"row\",\n          center: \"y\",\n          gap: \"xxs\",\n          style: {\n            justifyContent: \"space-between\"\n          },\n          children: _jsx(ChainName, {\n            chain: getCachedChain(props.txInfo.status.quote.toToken.chainId),\n            size: \"xs\",\n            client: props.client\n          })\n        })]\n      })]\n    }), _jsx(Container, {\n      flex: \"row\",\n      gap: \"xxs\",\n      center: \"y\",\n      children: _jsx(Text, {\n        size: \"xs\",\n        color: statusMeta.color,\n        children: statusMeta.status\n      })\n    })]\n  });\n}\nconst TxButton = /* @__PURE__ */styled(Button)(() => {\n  const theme = useCustomTheme();\n  return {\n    background: theme.colors.tertiaryBg,\n    \"&:hover\": {\n      background: theme.colors.secondaryButtonBg\n    },\n    height: BuyTxHistoryButtonHeight\n  };\n});\n//# sourceMappingURL=BuyTxHistoryButton.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}