{"ast":null,"code":"import { useQuery } from \"@tanstack/react-query\";\nimport { getBuyWithFiatHistory } from \"../../../../pay/buyWithFiat/getHistory.js\";\n/**\n * Hook to get the \"Buy with Fiat\" transaction history for a given wallet address.\n *\n * This hook is a React Query wrapper of the [`getBuyWithFiatHistory`](https://portal.thirdweb.com/references/typescript/v5/getBuyWithFiatHistory) function.\n * You can also use that function directly\n * @param params - object of type [`BuyWithFiatHistoryParams`](https://portal.thirdweb.com/references/typescript/v5/BuyWithFiatHistoryParams)\n * @param queryParams - options to configure the react query\n * @returns A React Query object which contains the data of type [`BuyWithFiatHistoryData`](https://portal.thirdweb.com/references/typescript/v5/BuyWithFiatHistoryData)\n * @example\n * ```tsx\n * import { useBuyWithFiatHistory } from \"thirdweb/react\";\n *\n * function Component() {\n *  const historyQuery = useBuyWithFiatHistory(params);\n *  return <div> ... </div>\n * }\n * ```\n * @buyCrypto\n */\nexport function useBuyWithFiatHistory(params, queryParams) {\n  return useQuery({\n    ...queryParams,\n    queryKey: [\"buyWithFiatHistory\", params],\n    queryFn: () => {\n      if (!params) {\n        throw new Error(\"params are required\");\n      }\n      return getBuyWithFiatHistory(params);\n    },\n    enabled: !!params\n  });\n}\n//# sourceMappingURL=useBuyWithFiatHistory.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}