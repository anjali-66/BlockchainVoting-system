{"ast":null,"code":"import { AUTH_TOKEN_LOCAL_STORAGE_NAME, DEVICE_SHARE_LOCAL_STORAGE_NAME, GUEST_SESSION_LOCAL_STORAGE_NAME, PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME, WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME, WALLET_USER_ID_LOCAL_STORAGE_NAME } from \"../constants/settings.js\";\nconst data = new Map();\n/**\n * @internal\n */\nexport class ClientScopedStorage {\n  /**\n   * @internal\n   */\n  constructor({\n    storage,\n    clientId,\n    ecosystem\n  }) {\n    Object.defineProperty(this, \"key\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"storage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ecosystem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.storage = storage;\n    this.key = getLocalStorageKey(clientId, ecosystem?.id);\n    this.ecosystem = ecosystem;\n  }\n  async getItem(key) {\n    if (this.storage) {\n      return this.storage.getItem(key);\n    }\n    return data.get(key) ?? null;\n  }\n  async setItem(key, value) {\n    if (this.storage) {\n      return this.storage.setItem(key, value);\n    }\n    data.set(key, value);\n  }\n  async removeItem(key) {\n    const item = await this.getItem(key);\n    if (this.storage && item) {\n      this.storage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @internal\n   */\n  async getWalletConnectSessions() {\n    return this.getItem(WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async saveWalletConnectSessions(stringifiedSessions) {\n    await this.setItem(WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME(this.key), stringifiedSessions);\n  }\n  /**\n   * @internal\n   */\n  async savePasskeyCredentialId(id) {\n    await this.setItem(PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME(this.key), id);\n  }\n  /**\n   * @internal\n   */\n  async getPasskeyCredentialId() {\n    return this.getItem(PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async saveAuthCookie(cookie) {\n    await this.setItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.key), cookie);\n  }\n  /**\n   * @internal\n   */\n  async getAuthCookie() {\n    return this.getItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async removeAuthCookie() {\n    return this.removeItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async saveDeviceShare(share, userId) {\n    await this.saveWalletUserId(userId);\n    await this.setItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.key, userId), share);\n  }\n  /**\n   * @internal\n   */\n  async getDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.getItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.key, userId));\n    }\n    return null;\n  }\n  /**\n   * @internal\n   */\n  async removeDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.removeItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.key, userId));\n    }\n    return false;\n  }\n  /**\n   * @internal\n   */\n  async getWalletUserId() {\n    return this.getItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async saveWalletUserId(userId) {\n    await this.setItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.key), userId);\n  }\n  /**\n   * @internal\n   */\n  async removeWalletUserId() {\n    return this.removeItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async getGuestSessionId() {\n    return this.getItem(GUEST_SESSION_LOCAL_STORAGE_NAME(this.key));\n  }\n  /**\n   * @internal\n   */\n  async saveGuestSessionId(sessionId) {\n    await this.setItem(GUEST_SESSION_LOCAL_STORAGE_NAME(this.key), sessionId);\n  }\n}\nconst getLocalStorageKey = (clientId, ecosystemId) => {\n  return `${clientId}${ecosystemId ? `-${ecosystemId}` : \"\"}`;\n};\n//# sourceMappingURL=client-scoped-storage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}